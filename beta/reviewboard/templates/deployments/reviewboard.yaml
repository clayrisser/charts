apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviewboard
  labels:
    app.kubernetes.io/name: reviewboard
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.config.reviewboard.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: reviewboard
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: {{ .Values.config.updateStrategy }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: reviewboard
        app.kubernetes.io/instance: {{ .Release.Name }}

    spec:
      containers:
      - name: reviewboard
        image: {{ .Values.images.reviewboard.repository }}:{{ .Values.images.reviewboard.tag }}
        imagePullPolicy: {{ .Values.config.imagePullPolicy }}
        {{- if (and .Values.config.reviewboard.resources.enabled (not (eq .Values.config.reviewboard.resources.enabled "false"))) }}
        resources:
          requests:
{{ toYaml .Values.config.reviewboard.resources.requests | indent 12 }}
          limits:
{{ toYaml .Values.config.reviewboard.resources.limits | indent 12 }}
        {{- end }}
        env:
        - name: DATABASE_TYPE
          value: {{ .Values.config.postgresql.databaseType }}
        - name: COMPANY
          value: {{ .Values.config.reviewboard.company }}
        - name: DATABASE_SERVER
          value: {{ .Values.config.postgresql.databaseServer }}
        - name: DATABASE_USERNAME
          value: {{ .Values.config.postgresql.databaseUsername }}
        - name: DATABASE_PASSWORD
          value: {{ .Values.config.postgresql.databasePassword }}
        - name: DOMAIN
          value: {{ .Values.config.reviewboard.domain }}
        - name: DATABASE_NAME
          value: {{ .Values.config.postgresql.databaseName }}
        - name: MEMCACHED_SERVER
          value: {{ .Values.config.memcached.server }}

        ports:
          - name: container
            containerPort: 8080
        volumeMounts:
          - name: sitedir
            mountPath: /site

      volumes:
        - name: sitedir
          persistentVolumeClaim:
            claimName: reviewboard

