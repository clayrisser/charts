apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: {{ template "pmm-server.fullname" . }}-pmm-server
  labels:
    app: {{ template "pmm-server.name" . }}-pmm-server
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  helmVersion: v3
  chart:
    git: https://github.com/Percona-Lab/percona-openshift.git
    ref: master
    path: helm/pmm-server
  values:
    imageRepo: {{ .Values.images.pmmServer.repository }}
    imageTag: {{ .Values.images.pmmServer.imageTag | quote }}
    platform: kubernetes
    imagePullPolicy: {{ .Values.config.imagePullPolicy }}
    persistence:
      enabled: {{ .Values.persistence.enabled }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
      storageClass: ''
      {{- else }}
      storageClass: {{ .Values.persistence.storageClass }}
      {{- end }}
      accessMode: {{ .Values.persistence.accessMode }}
      size: {{ .Values.persistence.size.pmmServer }}
    credentials:
      password: {{ .Values.config.pmmServer.password }}
    metric:
      resolution: 1s
      retention: 720h
    queries:
      retention: 8
{{- if .Values.config.pmmServer.resources.enabled }}
    resources:
{{ toYaml .Values.config.pmmServer.resources | indent 6 }}
{{- end }}
    service:
      {{- if .Values.ingress.pmmServer.enabled }}
      type: ClusterIP
      {{- else }}
      type: {{ .Values.service.pmmServer.type }}
      {{- if (eq .Values.service.pmmServer.type "NodePort") }}
      externalTrafficPolicy: {{ .Values.service.pmmServer.externalTrafficPolicy }}
      {{- end }}
      {{- end }}
      # ports:
      #   - name: http
      #     port: {{ (eq .Values.service.pmmServer.type "LoadBalancer") | ternary .Values.service.pmmServer.lbPorts.http "80" }}
      #     targetPort: container
      #     {{- if (and (eq .Values.service.pmmServer.type "NodePort") (not (empty .Values.service.pmmServer.nodePorts.http))) }}
      #     nodePort: {{ .Values.service.pmmServer.nodePorts.http }}
      #     {{- end }}
      # selector:
      #   app: {{ template "pmm-server.name" . }}-pmmServer
      #   release: {{ .Release.Name }}
    # prometheus:
    #   configMap:
    #     name: ""
