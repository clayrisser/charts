{{- if .Values.config.backup.s3.integration }}
{{- $name := (split "." .Values.config.backup.s3.integration)._1 | default "s3" }}
{{- $namespace := (split "." (printf "%s." .Values.config.backup.s3.integration))._0 }}
apiVersion: integration.rock8s.com/v1alpha2
kind: Plug
metadata:
  name: s3
  labels:
    app.kubernetes.io/name: {{ template "erpnext.name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  epoch: {{ now | unixEpoch | quote }}
  interfaceVersions: '*'
  interface:
    name: s3
    namespace: {{ $namespace }}
  socket:
    name: {{ $name }}
    namespace: {{ $namespace }}
  config:
    bucket: {{ .Values.config.backup.s3.bucket | quote }}
  resources:
    - when: [coupled, updated]
      do: apply
      resource: |
        apiVersion: kyverno.io/v1
        kind: Policy
        metadata:
          name: create-site
          namespace: {{ .Release.Namespace }}
        spec:
          validationFailureAction: enforce
          background: true
          rules:
            - name: helm-release
              match:
                resources:
                  kinds:
                    - helm.toolkit.fluxcd.io/*/HelmRelease
                  names:
                    - {{ .Release.Name }}-release
              mutate:
                patchesJson6902: |-
                  - op: replace
                    path: /spec/values/jobs/backup/push
                    value:
                      enabled: true
                      bucket: {% .socketConfig.bucket | quote %}
                      region: {% .socketConfig.region | quote %}
                      accessKey: {% .socketConfig.accessKey | quote %}
                      secretKey: {% .socketConfig.secretKey | quote %}
                      endpoint: '{% printf "http%s://%s" ((eq .socketConfig.tls "1") | ternary "s" "") .socketConfig.endpoint %}/{{ .Values.config.backup.s3.prefix }}'
                  - op: replace
                    path: /spec/values/jobs/backup/enabled
                    value: true
    - when: [decoupled]
      do: delete
      resource: |
          apiVersion: v1
          kind: Secret
          metadata:
            name: s3
            namespace: {{ .Release.Namespace }}
{{- end }}
