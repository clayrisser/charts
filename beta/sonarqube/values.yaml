images:
  sonarqube:
    repository: sonarqube
    tag: 8.2-community

config:
  clusterProvider: infrastructure
  imagePullPolicy: IfNotPresent
  updateStrategy: Recreate
  sonarqube:
    baseUrl: ''
    hostname: ''
    replicas: 1
    secret: ''
    resources:
      enabled: false
      requests:
        cpu: 100m
        memory: 1.5Gi
      limits:
        cpu: 500m
        memory: 1.7Gi
  postgres:
    integration:
    database: sonarqube
    host: ''
    password: P@ssw0rd
    port: 5432
    url: ''
    username: postgres

service:
  sonarqube:
    type: NodePort
    externalTrafficPolicy: Cluster
    nodePorts:
      http:

ingress:
  sonarqube:
    certificate: ''
    enabled: false
    hostname: ''
    tls: false
    issuer:
      name: letsencrypt-staging

persistence:
  accessMode: ReadWriteOnce
  enabled: false
  storageClass: ''
  existingClaim:
    sonarqube: ''
  size:
    sonarqube: 1Gi
  velero:
    enabled: false
    restic: true
    schedule: '@midnight'
    ttl: 2160h0m00s

probes:
  liveness:
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  readiness:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
