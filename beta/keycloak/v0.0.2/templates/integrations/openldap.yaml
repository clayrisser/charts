{{- if (and .Values.config.keycloak.ldap.enabled (not (empty .Values.config.keycloak.ldap.integration))) }}
apiVersion: integration.siliconhills.dev/v1alpha1
kind: IntegrationPlug
metadata:
  name: {{ template "keycloak.fullname" . }}-openldap
  labels:
    app: {{ template "keycloak.name" . }}-openldap
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  cleanup: false
  {{- $name := (split "." .Values.config.keycloak.ldap.integration)._0 -}}
  {{- $namespace := (split "." (printf "%s." .Values.config.keycloak.ldap.integration))._1 | default "kube-system" }}
  socket:
    name: {{ $name }}
    namespace: {{ $namespace }}
  kustomization:
    configuration:
      varReference:
        - group: keycloak.org
          version: v1alpha1
          kind: KeycloakRealm
          path: spec/realm/userFederationProviders
    resources:
      - group: keycloak.org
        version: v1alpha1
        kind: KeycloakRealm
        name: {{ template "keycloak.fullname" . }}
        namespace: {{ .Release.Namespace }}
      - version: v1
        kind: ConfigMap
        name: {{ $name }}-connection-{{ $namespace }}
        namespace: {{ .Release.Namespace }}
      - version: v1
        kind: Secret
        name: {{ $name }}-openldap-{{ $namespace }}
        namespace: {{ .Release.Namespace }}
    patches:
      - patch: |
          apiVersion: keycloak.org/v1alpha1
          kind: KeycloakRealm
          metadata:
            name: {{ template "keycloak.fullname" . }}
            namespace: {{ .Release.Namespace }}
          spec:
            realm:
              userFederationProviders:
                - displayName: ldap
                  providerName: ldap
                  config:
                    allowKerberosAuthentication: 'false'
                    authType: simple
                    batchSizeForSync: '1000'
                    bindCredential: '$(LDAP_PASSWORD)'
                    bindDn: 'cn=$(LDAP_USERNAME),$(LDAP_DOMAIN)'
                    cachePolicy: DEFAULT
                    changedSyncPeriod: '-1'
                    connectionPooling: 'true'
                    connectionUrl: '$(LDAP_PROTOCOL)://$(LDAP_HOSTNAME)'
                    debug: 'false'
                    editMode: WRITABLE
                    enabled: 'true'
                    fullSyncPeriod: '-1'
                    importEnabled: 'false'
                    pagination: 'true'
                    priority: '0'
                    rdnLDAPAttribute: uid
                    searchScope: '1'
                    searchScope: '1'
                    startTls: 'false'
                    syncRegistrations: 'true'
                    trustEmail: 'true'
                    useKerberosForPasswordAuthentication: 'false'
                    useTruststoreSpi: ldapsOnly
                    userObjectClasses: {{ .Values.config.keycloak.ldap.userObjectClasses | quote }}
                    usernameLDAPAttribute: uid
                    usersDn: 'ou=people,$(LDAP_DOMAIN)'
                    uuidLDAPAttribute: entryUUID
                    validatePasswordPolicy: 'false'
                    vendor: 'rhds'
    vars:
      - name: LDAP_HOSTNAME
        fieldref:
          fieldPath: data.LDAP_HOSTNAME
        objref:
          apiVersion: v1
          kind: ConfigMap
          name: {{ $name }}-connection-{{ $namespace }}
          namespace: {{ .Release.Namespace }}
      - name: LDAP_PROTOCOL
        fieldref:
          fieldPath: data.LDAP_PROTOCOL
        objref:
          apiVersion: v1
          kind: ConfigMap
          name: {{ $name }}-connection-{{ $namespace }}
          namespace: {{ .Release.Namespace }}
      - name: LDAP_DOMAIN
        fieldref:
          fieldPath: data.LDAP_DOMAIN
        objref:
          apiVersion: v1
          kind: ConfigMap
          name: {{ $name }}-connection-{{ $namespace }}
          namespace: {{ .Release.Namespace }}
      - name: LDAP_USERNAME
        fieldref:
          fieldPath: data.LDAP_USERNAME
        objref:
          apiVersion: v1
          kind: ConfigMap
          name: {{ $name }}-connection-{{ $namespace }}
          namespace: {{ .Release.Namespace }}
      - name: LDAP_PASSWORD
        fieldref:
          fieldPath: data.LDAP_ADMIN_PASSWORD
        objref:
          apiVersion: v1
          kind: Secret
          name: {{ $name }}-openldap-{{ $namespace }}
          namespace: {{ .Release.Namespace }}
{{- end }}
