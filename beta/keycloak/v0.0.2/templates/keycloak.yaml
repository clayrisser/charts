apiVersion: keycloak.org/v1alpha1
kind: Keycloak
metadata:
  name: {{ template "keycloak.fullname" . }}
  labels:
    app: {{ template "keycloak.fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  instances: 1
  extensions: []
  externalAccess:
    enabled: true
    host: {{ template "keycloak.keycloak-hostname" . }}
    tlsTermination: reencrypt
  external:
    enabled: false
  # externalDatabase:
  #   enabled: true
  keycloakDeploymentSpec:
    experimental:
      command:
        - sh
        - -c
        - |
            if [ "$LDAP_TLS_CRT" != "" ]; then
              STOREPASS="P@ssw0rd"
              KEYSTORES_PATH="/opt/jboss/keycloak/standalone/configuration/keystores"
              mkdir -p $KEYSTORES_PATH/ldap-ca
              chmod 744 $KEYSTORES_PATH
              cd $KEYSTORES_PATH
              echo "-----BEGIN CERTIFICATE-----" > ./ldap-ca/ldap-ca.crt
              echo $LDAP_TLS_CRT | sed 's/ \?-\{5\}[A-Z]\+ [A-Z]\+-\{5\} \?//g' | sed 's/ /\n/g' >> ./ldap-ca/ldap-ca.crt
              echo "-----END CERTIFICATE-----" >> ./ldap-ca/ldap-ca.crt
              echo >> ./ldap-ca/ldap-ca.crt
              keytool -keystore truststore -storepass $STOREPASS -noprompt -trustcacerts -importcert -alias ldap-ca -file ./ldap-ca/ldap-ca.crt
              chmod 444 $KEYSTORES_PATH
            fi
            # {{- if (not (empty .Values.config.keycloak.themeZip)) }}
            # export CWD=$(pwd)
            # mkdir -p /opt/jboss/keycloak/injected-themes
            # cd /opt/jboss/keycloak/injected-themes
            # wget -qO- {{ .Values.config.keycloak.themeZip }} | unzip -
            # cp -r /opt/jboss/keycloak/injected-themes/* /opt/jboss/keycloak/themes 2>/dev/null | true
            # cd $CWD
            # {{- end }}
            exec /opt/jboss/tools/docker-entrypoint.sh $@
      args:
        - ['-b', '0.0.0.0']
      env:
        - name: PROXY_ADDRESS_FORWARDING
          value: 'true'
        {{- if .Values.config.debug }}
        - name: KEYCLOAK_LOGLEVEL
          value: ALL
        - name: ROOT_LOGLEVEL
          value: ALL
        {{- end }}
        - name: KEYCLOAK_HOSTNAME
          value: {{ template "keycloak.keycloak-hostname" . }}
        - name: KEYCLOAK_DEFAULT_THEME
          value: {{ .Values.config.keycloak.defaultTheme | quote }}
        - name: KEYCLOAK_WELCOME_THEME
          value: {{ .Values.config.keycloak.welcomeTheme | quote }}
      {{- if (and .Values.config.keycloak.ldap.enabled .Values.config.keycloak.ldap.tls) }}
        - name: LDAP_TLS_CRT
          valueFrom:
            secretKeyRef:
              name: cluster-issuer-cluster-issuer-selfsigned-ca-cluster-issuer
              key: tls.crt
        - name: LDAP_TLS_KEY
          valueFrom:
            secretKeyRef:
              name: cluster-issuer-cluster-issuer-selfsigned-ca-cluster-issuer
              key: tls.key
      {{- end }}
{{- if (and .Values.config.keycloak.resources.enabled (not (eq .Values.config.keycloak.resources.enabled "false"))) }}
    resources:
      requests:
{{ toYaml .Values.config.keycloak.resources.requests | indent 8 }}
      limits:
{{ toYaml .Values.config.keycloak.resources.limits | indent 8 }}
{{- end }}
  migration:
    backups:
      enabled: false
      strategy: IGNORE_EXISTING
  podDisruptionBudget:
    enabled: false
  unmanaged: false
---
apiVersion: keycloak.org/v1alpha1
kind: KeycloakRealm
metadata:
  name: {{ template "keycloak.fullname" . }}
  labels:
    app: {{ template "keycloak.fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  realm:
    id: main
    realm: main
    enabled: true
    displayName: 'Main Realm'
  instanceSelector:
    matchLabels:
      app: {{ template "keycloak.fullname" . }}
