{{- $postgres := .Values.config.postgres }}
apiVersion: k8s.keycloak.org/v2alpha1
kind: Keycloak
metadata:
  name: {{ template "keycloak.name" . }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ template "keycloak.name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
  instances: {{ .Values.config.keycloak.replicas }}
  image: {{ .Values.images.keycloak.repository }}:{{ .Values.images.keycloak.tag }}
  # imagePullSecrets:
  #   - name: string
  hostname:
    hostname: {{ template "keycloak.keycloak-hostname" . }}
  db:
    vendor: postgres
    database: {{ $postgres.database | quote }}
    host: {{ $postgres.host | quote }}
    port: {{ $postgres.port }}
    usernameSecret:
      name: {{ template "keycloak.name" . }}-db-secret
      key: POSTGRES_USERNAME
    passwordSecret:
      name: {{ template "keycloak.name" . }}-db-secret
      key: POSTGRES_PASSWORD
  features:
    disabled: []
    enabled: []
  ingress:
    enabled: false
  unsupported:
    podTemplate:
      spec:
        containers:
          - command:
              - sh
              - -c
              - |
                  mkdir -p /opt/keycloak/certs
                  for CERT in /opt/keycloak/certs/*.crt; do
                    if [ -f "$CERT" ]; then
                      ALIAS=$(keytool -printcert -file "$CERT" | grep -E '^Owner: CN=' | head -n1 | sed 's|Owner: CN=||g')
                      keytool -import -file "$CERT" -keystore "$KC_SPI_TRUSTSTORE_FILE_FILE" -alias "$ALIAS" -storepass "$KC_SPI_TRUSTSTORE_FILE_PASSWORD" -noprompt
                    fi
                  done
                  mkdir -p /opt/keycloak/secrets
                  for e in $(env); do
                    if echo $e | grep -qE '^main_'; then
                      key="$(echo $e | sed 's|=.*$||g')"
                      value="$(echo $e | sed 's|^.*=||g')"
                      echo "$value" > /opt/keycloak/secrets/$key
                    fi
                  done
                  exec /opt/keycloak/bin/kc.sh start-dev
            env:
              - name: KC_VAULT_DIR
                value: /opt/keycloak/secrets
              - name: KC_SPI_TRUSTSTORE_FILE_FILE
                value: /etc/alternatives/jre/lib/security/cacerts
              - name: KC_SPI_TRUSTSTORE_FILE_HOSTNAME_VERIFICATION_POLICY
                value: ANY
              - name: KC_SPI_TRUSTSTORE_FILE_PASSWORD
                value: changeit
              {{- if .Values.config.debug }}
              - name: KEYCLOAK_LOGLEVEL
                value: ALL
              - name: ROOT_LOGLEVEL
                value: ALL
              {{- end }}
            envFrom:
              - secretRef:
                  name: keycloak-vault
              - secretRef:
                  name: {{ template "keycloak.name" . }}
