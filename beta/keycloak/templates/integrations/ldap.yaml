{{- if (and .Values.config.ldap.enabled .Values.config.ldap.integration) }}
{{- $name := (split "." .Values.config.ldap.integration)._1 | default "ldap" }}
{{- $namespace := (split "." (printf "%s." .Values.config.ldap.integration))._0 }}
apiVersion: integration.rock8s.com/v1alpha2
kind: Plug
metadata:
  name: ldap
  labels:
    app.kubernetes.io/name: {{ template "keycloak.name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  epoch: {{ now | unixEpoch | quote }}
  interfaceVersions: '*'
  interface:
    name: ldap
    namespace: {{ $namespace }}
  socket:
    name: {{ $name }}
    namespace: {{ $namespace }}
  config: {}
  resources:
    - when: [coupled, updated]
      do: apply
      resource: |
        apiVersion: v1
        kind: Secret
        metadata:
          name: ldap-cert
          namespace: {{ .Release.Namespace }}
        type: Opaque
        data:
          tls.crt: {% (not .socketConfig.tlsCrt) | ternary "" (.socketConfig.tlsCrt | b64enc) %}
          ca.crt: {% (not .socketConfig.caCrt) | ternary "" (.socketConfig.caCrt | b64enc) %}
    - when: [coupled, updated]
      do: recreate
      resource: |
        apiVersion: patch.rock8s.com/v1alpha1
        kind: Patch
        metadata:
          name: ldap-coupled-or-updated
          namespace: {{ .Release.Namespace }}
        spec:
          epoch: {{ now | unixEpoch | quote }}
          patches:
            - id: keycloak-realm
              target:
                group: k8s.keycloak.org
                version: v2alpha1
                kind: KeycloakRealmImport
                name: {{ template "keycloak.name" . }}
              waitForTimeout: 5
              waitForResource: true
              type: json
              patch: |-
                - op: replace
                  path: /spec/realm/userFederationProviders/0/config/bindDn
                  value: {% .socketConfig.adminDN | quote %}
                - op: replace
                  path: /spec/realm/userFederationProviders/0/config/connectionUrl
                  {%- if (eq .socketConfig.protocol "ldap{{ .Values.config.ldap.tls.enabled | ternary "s" "" }}") %}
                  value: {% .socketConfig.protocol %}://{% .socketConfig.hostname %}:{% .socketConfig.port %}
                  {%- else %}
                  value: ldap{{ .Values.config.ldap.tls.enabled | ternary "s" "" }}://{% .socketConfig.hostname %}
                  {%- end %}
                - op: replace
                  path: /spec/realm/userFederationProviders/0/config/usersDn
                  value: ou=people,{% .socketConfig.root %}
                - op: replace
                  path: /spec/realm/userFederationMappers/0/config/groups.dn
                  value: ou=groups,{% .socketConfig.root %}
                - op: replace
                  path: /spec/keycloakCRName
                  value: {{ template "keycloak.name" . }}
            - id: keycloak-vault
              target:
                version: v1
                kind: Secret
                name: keycloak-vault
              waitForTimeout: 5
              waitForResource: true
              type: json
              patch: |-
                - op: replace
                  path: /data/main_bindCredential
                  value: {% .socketConfig.adminPassword | b64enc | quote %}
{{- end }}
