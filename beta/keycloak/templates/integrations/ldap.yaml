{{- if (and .Values.config.ldap.enabled .Values.config.ldap.integration) }}
{{- $name := (split "." .Values.config.ldap.integration)._1 | default "ldap" }}
{{- $namespace := (split "." (printf "%s." .Values.config.ldap.integration))._0 }}
apiVersion: integration.rock8s.com/v1alpha2
kind: Plug
metadata:
  name: ldap
  labels:
    app.kubernetes.io/name: {{ template "keycloak.name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  epoch: {{ now | unixEpoch | quote }}
  interfaceVersions: '*'
  interface:
    name: ldap
    namespace: {{ $namespace }}
  socket:
    name: {{ $name }}
    namespace: {{ $namespace }}
  config: {}
  resources:
    - when: [coupled, updated]
      do: apply
      resource: |
        apiVersion: v1
        kind: Secret
        metadata:
          name: ldap-cert
          namespace: {{ .Release.Namespace }}
        type: Opaque
        {%- if (or .socketConfig.tlsCrt .socketConfig.caCrt) %}
        data:
          {%- if .socketConfig.tlsCrt %}
          tls.crt: {% .socketConfig.tlsCrt | b64enc %}
          {%- end %}
          {%- if .socketConfig.caCrt %}
          ca.crt: {% .socketConfig.caCrt | b64enc %}
          {%- end %}
        {%- end %}
    - when: [coupled, updated]
      do: recreate
      resource: |
        apiVersion: kyverno.io/v1
        kind: Policy
        metadata:
          name: ldap-coupled-or-updated
          namespace: {{ .Release.Namespace }}
        spec:
          validationFailureAction: enforce
          background: true
          rules:
            - name: keycloak-realm
              match:
                resources:
                  kinds:
                    - k8s.keycloak.org/*/KeycloakRealmImport
                  names:
                    - {{ template "keycloak.name" . }}
              mutate:
                patchesJson6902: |-
                  - op: replace
                    path: /spec/realm/userFederationProviders/0/config/bindDn
                    value: {% .socketConfig.adminDN | quote %}
                  - op: replace
                    path: /spec/realm/userFederationProviders/0/config/connectionUrl
                    {%- if (eq .socketConfig.protocol "ldap{{ .Values.config.ldap.tls.enabled | ternary "s" "" }}") %}
                    value: {% .socketConfig.protocol %}://{% .socketConfig.hostname %}:{% .socketConfig.port %}
                    {%- else %}
                    value: ldap{{ .Values.config.ldap.tls.enabled | ternary "s" "" }}://{% .socketConfig.hostname %}
                    {%- end %}
                  - op: replace
                    path: /spec/realm/userFederationProviders/0/config/usersDn
                    value: ou=people,{% .socketConfig.rootDN %}
                  - op: replace
                    path: /spec/realm/userFederationMappers/0/config/groups.dn
                    value: ou=groups,{% .socketConfig.rootDN %}
                  - op: replace
                    path: /spec/keycloakCRName
                    value: {{ template "keycloak.name" . }}
            - name: keycloak-vault
              match:
                all:
                  resources:
                    kinds:
                      - k8s.keycloak.org/*/Secret
                    names:
                      - keycloak-vault
              mutate:
                patchesJson6902: |-
                  - op: replace
                    path: /data/main_bindCredential
                    value: {% .socketConfig.adminPassword | b64enc | quote %}
{{- end }}
