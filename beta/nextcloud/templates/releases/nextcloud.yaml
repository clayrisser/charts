apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: nextcloud
  labels:
    app.kubernetes.io/name: {{ template "nextcloud.name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  interval: 5m
  url: https://nextcloud.github.io/helm
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: {{ .Release.Name }}-release
  labels:
    app.kubernetes.io/name: {{ template "nextcloud.name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  interval: 5m
  chart:
    spec:
      chart: nextcloud
      version: {{ .Release.Version | quote }}
      sourceRef:
        apiVersion: source.toolkit.fluxcd.io/v1beta1
        kind: HelmRepository
        name: nextcloud
  values:
    image:
      repository: {{ .Values.images.nextcloud | quote }}
      tag: {{ .Values.images.tag | quote }}
      pullPolicy: {{ .Values.config.imagePullPolicy | quote }}
    replicaCount: {{ .Values.config.nextcloud.replicas }}
    ingress:
      enabled: {{ .Values.ingress.nextcloud.enabled }}
      annotations:
        {{- if .Values.ingress.nextcloud.tls }}
        {{- if (not .Values.ingress.nextcloud.certificate) }}
        kubernetes.io/tls-acme: 'true'
        {{- if .Values.ingress.nextcloud.issuer.name }}
        cert-manager.io/cluster-issuer: {{ .Values.ingress.nextcloud.issuer.name }}
        {{- end }}
        {{- end }}
        nginx.ingress.kubernetes.io/ssl-redirect: 'true'
        {{- end }}
      path: /
      pathType: Prefix
    phpClientHttpsFix:
      enabled: {{ .Values.ingress.nextcloud.tls }}
      protocol: https
    nextcloud:
      host: nextcloud.kube.home
      username: {{ .Values.config.nextcloud.username | quote }}
      password: {{ .Values.config.nextcloud.password | quote }}
      existingSecret:
        enabled: true
        secretName: nextcloud
        usernameKey: username
        passwordKey: password
        tokenKey: token
        smtpUsernameKey: smtpUsername
        smtpPasswordKey: smtpPassword
      update: 0
      datadir: /var/www/html/data
      mail:
        enabled: false
        fromAddress: user
        domain: domain.com
        smtp:
          host: domain.com
          secure: ssl
          port: 465
          authtype: LOGIN
          name: user
          password: pass
      phpConfigs: {}
      defaultConfigs:
        .htaccess: true
        redis.config.php: true
        apache-pretty-urls.config.php: true
        apcu.config.php: true
        apps.config.php: true
        autoconfig.php: true
        smtp.config.php: true
      configs:
        s3.config.php: |-
          <?php
          $CONFIG = array (
            'objectstore' => array(
              'class' => '\\OC\\Files\\ObjectStore\\S3',
              'arguments' => array(
                'bucket'     => 'my-bucket',
                'autocreate' => true,
                'key'        => 'xxx',
                'secret'     => 'xxx',
                'region'     => 'us-east-1',
                'use_ssl'    => true
              )
            )
          );
      strategy:
        type: Recreate
      extraEnv: []
    nginx:
      enabled: false
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      host:
      database: nextcloud
      existingSecret:
        secretName: postgres
        usernameKey: username
        passwordKey: password
    mariadb:
      enabled: false
    postgresql:
      enabled: false
    redis:
      enabled: true
      auth:
        enabled: true
        password: 'P@ssw0rd'
    cronjob:
      enabled: true
    service:
      type: ClusterIP
      port: 8080
      loadBalancerIP: nil
      nodePort: nil

    persistence:
      enabled: false
      annotations: {}
      storageClass: "-"
      existingClaim:
      accessMode: ReadWriteOnce
      size: 8Gi
      nextcloudData:
        enabled: true
        subPath:
        annotations: {}
        storageClass: "-"
        existingClaim:
        accessMode: ReadWriteOnce
        size: 8Gi

{{- if (and .Values.config.nextcloud.resources.enabled (not (eq .Values.config.nextcloud.resources.enabled "false"))) }}
    resources:
      requests:
{{ toYaml .Values.config.nextcloud.resources.requests | indent 8 }}
      limits:
{{ toYaml .Values.config.nextcloud.resources.limits | indent 8 }}
{{- end }}
    livenessProbe:
      enabled: true
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    readinessProbe:
      enabled: true
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    startupProbe:
      enabled: false
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 30
      successThreshold: 1
    hpa:
      enabled: false
      cputhreshold: 60
      minPods: 1
      maxPods: 10
    nodeSelector: {}
    tolerations: []
    affinity: {}
    metrics:
      enabled: false
      serviceMonitor:
        enabled: false
    rbac:
      enabled: true
      serviceaccount:
        create: true
        name: nextcloud-serviceaccount
