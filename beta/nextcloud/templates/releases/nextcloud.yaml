apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: nextcloud
  labels:
    app.kubernetes.io/name: {{ template "nextcloud.name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  interval: 5m
  url: https://nextcloud.github.io/helm
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: {{ .Release.Name }}-release
  labels:
    app.kubernetes.io/name: {{ template "nextcloud.name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  interval: 5m
  chart:
    spec:
      {{- if (or .Values.config.postgres.integration (or (and .Values.config.keycloak.enabled .Values.config.keycloak.integration) (and .Values.config.s3.enabled .Values.config.s3.integration))) }}
      chart: waiting-for-ready
      {{- else }}
      chart: nextcloud
      {{- end }}
      version: {{ .Chart.Version | quote }}
      sourceRef:
        apiVersion: source.toolkit.fluxcd.io/v1beta1
        kind: HelmRepository
        name: nextcloud
  values:
    debug: {{ .Values.config.debug }}
    image:
      repository: {{ .Values.images.nextcloud.repository | quote }}
      tag: {{ .Values.images.nextcloud.tag | quote }}
      pullPolicy: {{ .Values.config.imagePullPolicy | quote }}
    deploymentAnnotations:
      reloader.stakater.com/auto: 'true'
    replicaCount: {{ .Values.config.nextcloud.replicas }}
    ingress:
      enabled: {{ .Values.ingress.nextcloud.enabled }}
      annotations:
        {{- if .Values.ingress.nextcloud.tls.enabled }}
        {{- if (not .Values.ingress.nextcloud.tls.certificate) }}
        kubernetes.io/tls-acme: 'true'
        {{- if .Values.ingress.nextcloud.tls.issuer }}
        cert-manager.io/cluster-issuer: {{ .Values.ingress.nextcloud.tls.issuer }}
        {{- end }}
        {{- end }}
        nginx.ingress.kubernetes.io/ssl-redirect: 'true'
        {{- end }}
        nginx.ingress.kubernetes.io/proxy-body-size: {{ .Values.config.nextcloud.maxUploadSize | quote }}
        nginx.ingress.kubernetes.io/server-snippet: |
          server_tokens off;
          proxy_hide_header X-Powered-By;
          rewrite ^/.well-known/webfinger /public.php?service=webfinger last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
      tls:
        - secretName: nextcloud-tls
          hosts:
            - {{ include "nextcloud.nextcloud-hostname" . }}
      path: /
      pathType: Prefix
    phpClientHttpsFix:
      enabled: {{ .Values.ingress.nextcloud.tls.enabled }}
      protocol: https
    nextcloud:
      host: {{ include "nextcloud.nextcloud-hostname" . }}
      existingSecret:
        enabled: true
        secretName: nextcloud
        usernameKey: username
        passwordKey: password
        tokenKey: token
        smtpUsernameKey: smtpUsername
        smtpPasswordKey: smtpPassword
      update: 0
      datadir: /var/www/html/data
      mail:
        enabled: false
        fromAddress: user
        domain: domain.com
        smtp:
          host: domain.com
          secure: ssl
          port: 465
          authtype: LOGIN
          name: user
          password: pass
      phpConfigs:
        upload-max-filesize.ini: |
          upload_max_filesize {{ .Values.config.nextcloud.maxUploadSize }}
          post_max_size {{ .Values.config.nextcloud.maxUploadSize }}
          max_input_time 3600
          max_execution_time 3600
      defaultConfigs:
        .htaccess: false
        redis.config.php: true
        apache-pretty-urls.config.php: true
        apcu.config.php: true
        apps.config.php: true
        autoconfig.php: true
        smtp.config.php: false
      configs:
        .htaccess: |
          # line below if for Apache 2.4
          <ifModule mod_authz_core.c>
          Require all denied
          </ifModule>
          # line below if for Apache 2.2
          <ifModule !mod_authz_core.c>
          deny from all
          </ifModule>
          # section for Apache 2.2 and 2.4
          <ifModule mod_autoindex.c>
          IndexIgnore *
          </ifModule>
{{- if (and .Values.config.s3.enabled (not .Values.config.s3.integration)) }}
        s3.config.php: |-
          <?php
          $CONFIG = array (
            'objectstore' => array(
              'class' => '\\OC\\Files\\ObjectStore\\S3',
              'arguments' => array(
                'autocreate' => true,
                'bucket'     => '{{ .Values.config.s3.bucket }}',
                'endpoint'   => '{{ .Values.config.s3.endpoint | default (printf "s3.%s.amazonaws.com" .Values.config.s3.region) }}',
                {{- if .Values.config.s3.accessKey }}
                'key'        => '{{ .Values.config.s3.accessKey }}',
                {{- end }}
                'region'     => '{{ .Values.config.s3.region }}',
                {{- if .Values.config.s3.secretKey }}
                'secret'     => '{{ .Values.config.s3.secretKey }}',
                {{- end }}
                'use_ssl'    => true
              )
            )
          );
{{- end }}
      strategy:
        type: Recreate
      extraEnv:
        - name: APACHE_BODY_LIMIT
          value: '0'
        - name: PHP_UPLOAD_LIMIT
          value: {{ .Values.config.nextcloud.maxUploadSize | quote }}
        - name: PHP_MEMORY_LIMIT
          value: {{ .Values.config.nextcloud.resources.limits.memory | replace "Gi" "G" | replace "Mi" "M" | replace "Ki" "K" | quote }}
      extraVolumes:
        - name: nextcloud-apps
          configMap:
            name: nextcloud-apps
      extraVolumeMounts:
        - name: nextcloud-apps
          mountPath: /var/local
    nginx:
      enabled: false
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      host: {{ .Values.config.postgres.host | quote }}
      database: {{ .Values.config.postgres.database | quote }}
      user:
      password:
      existingSecret:
        enabled: true
        secretName: postgres
        usernameKey: username
        passwordKey: password
    mariadb:
      enabled: false
    postgresql:
      enabled: false
    redis:
      enabled: true
      architecture: standalone
      auth:
        enabled: false
    cronjob:
      enabled: true
    service:
      {{- if .Values.ingress.nextcloud.enabled }}
      type: ClusterIP
      {{- else }}
      type: {{ .Values.service.nextcloud.type }}
      {{- end }}
      port: {{ (eq .Values.service.nextcloud.type "LoadBalancer") | ternary .Values.service.nextcloud.lbPorts.http "8080" }}
      {{- if (and (eq .Values.service.nextcloud.type "NodePort") .Values.service.nextcloud.nodePorts.http) }}
      nodePort: {{ .Values.service.nextcloud.nodePorts.http }}
      {{- end }}
    persistence:
      enabled: {{ .Values.persistence.enabled }}
      storageclass: {{ (eq "-" .Values.persistence.storageClass) | ternary "" .Values.persistence.storageClass | quote }}
      # existingClaim: ''
      accessMode: ReadWriteOnce
      size: {{ .Values.persistence.size.nextcloud }}
      nextcloudData:
        enabled: true
        storageclass: {{ (eq "-" .Values.persistence.storageClass) | ternary "" .Values.persistence.storageClass | quote }}
        # existingClaim: ''
        accessMode: ReadWriteOnce
        size: {{ .Values.persistence.size.data }}
{{- if (and .Values.config.nextcloud.resources.enabled (not (eq .Values.config.nextcloud.resources.enabled "false"))) }}
    resources:
      requests:
{{ toYaml .Values.config.nextcloud.resources.requests | indent 8 }}
      limits:
{{ toYaml .Values.config.nextcloud.resources.limits | indent 8 }}
{{- end }}
    livenessProbe:
      enabled: true
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    readinessProbe:
      enabled: true
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    startupProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 30
      successThreshold: 1
    hpa:
      enabled: false
      cputhreshold: 60
      minPods: 1
      maxPods: 10
    nodeSelector: {}
    tolerations: []
    affinity: {}
    metrics:
      enabled: false
      serviceMonitor:
        enabled: false
    rbac:
      enabled: true
      serviceaccount:
        create: true
        name: nextcloud-serviceaccount
    lifecycle: {}
