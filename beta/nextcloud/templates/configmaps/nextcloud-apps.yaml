apiVersion: v1
kind: ConfigMap
metadata:
  name: nextcloud-apps
  labels:
    app.kubernetes.io/name: {{ template "nextcloud.name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
data:
  setup-apps.sh: |
    #!/bin/bash
    exec > /var/www/tmp/nextcloud_apps.log
    exec 2> /var/www/tmp/nextcloud_apps_error.log
    apps="
    {{- if .Values.config.onlyoffice.enabled }}
    onlyoffice
    {{- end }}
    {{- if .Values.config.keycloak.enabled }}
    externalpassword
    sociallogin
    {{- end }}
{{ .Values.config.nextcloud.apps | indent 4 }}
    "
    echo "=== APPS ===
    $apps
    === APPS ===
    "
    run_as() {
        if [ "$(id -u)" = 0 ]; then
            su -p "www-data" -s /bin/sh -c "$1"
        else
            sh -c "$1"
        fi
    }
    occ="/var/www/html/occ"
    cp /var/local/config.json /var/www/html/
    count=0
    limit=10
    until [ -f "$occ" ] || [ "$count" -gt "$limit" ]
    do
        count=$((count+1))
        wait=$((count*10))
        echo "$occ doesn't exist yet, waiting $wait seconds"
        sleep $wait
    done
    echo "$occ now exists"
    count=0
    until [[ $(run_as "php occ status --output json") =~ '"installed":true' ]] || [ "$count" -gt "$limit" ]
    do
        count=$((count+1))
        wait=$((count*10))
        echo "nextcloud is not installed yet. waiting $wait seconds"
        sleep $wait
    done
    echo "nextcloud is now installed"
    run_as "php $occ config:system:set appstoreenabled --type boolean --value true"
    app_versions=$(run_as "php $occ app:list --output json")
    for app in $apps; do
        name=$(echo $app | grep -oE '^[^:]+')
        url=$(echo $app | grep -oE ':https?://.+$' | sed 's|^:||g')
        if [ "$name" != "" ]; then
            if (echo "$app_versions" | grep -q "$name"); then
    {{- if .Values.config.nextcloud.updateApps }}
                echo "updating app $name"
                run_as "php $occ app:update -vvv --no-interaction $name"
    {{- else }}
                true
    {{- end }}
            else
                echo "installing app $name"
                if [ "$url" != "" ]; then
                    target_directory="/var/www/html/custom_apps"
                    curl "$url" -Lo "$name.tar.gz"
                    if [[ -d "$target_directory/$name" ]]; then
                        rm -r "$target_directory/$name"
                    fi
                    tar -xf "$name.tar.gz" -C "$target_directory"
                    rm "$name.tar.gz"
                else
                    run_as "php $occ app:install -vvv --no-interaction --force --allow-unstable --keep-disabled $name"
                fi
            fi
        fi
        run_as "php $occ app:enable -vvv --no-interaction --force $name"
    done
    run_as "php $occ upgrade"
    run_as "php $occ config:import /var/local/config.json"
    {{- if .Values.config.keycloak.enabled }}
    if [ -f /var/local/setup-sociallogin.sh ]; then
        bash /var/local/setup-sociallogin.sh
    fi
    run_as "php $occ config:app:set sociallogin auto_create_groups --value='{{ .Values.config.keycloak.autoCreateGroups | ternary "1" "0" }}'"
    run_as "php $occ config:app:set sociallogin update_profile_on_login --value='{{ .Values.config.keycloak.updateProfileOnLogin | ternary "1" "0" }}'"
    {{- end }}
    run_as "php $occ config:system:set appstoreenabled --type boolean --value {{ .Values.config.nextcloud.appStoreEnabled | ternary "true" "false" }}"
    run_as "php $occ db:add-missing-indices --no-interaction"
    run_as "php $occ db:add-missing-columns --no-interaction"
    run_as "php $occ db:add-missing-primary-keys --no-interaction"
    run_as "php $occ db:convert-filecache-bigint --no-interaction"

  {{- if (and .Values.config.keycloak.enabled (empty .Values.config.keycloak.integration)) }}
  setup-sociallogin.sh: |
    #!/bin/bash
    occ="/var/www/html/occ"
    run_as() {
        if [ "$(id -u)" = 0 ]; then
            su -p "www-data" -s /bin/sh -c "$1"
        else
            sh -c "$1"
        fi
    }
    su -p "www-data" -s /bin/bash -c "php $occ config:app:set sociallogin custom_providers --value='"'{
      "custom_oidc": [{
        "name": "keycloak",
        "title": "Keycloak Login",
        "authorizeUrl": "{{ .Values.config.keycloak.baseUrl }}/realms/{{ .Values.config.keycloak.realmName }}/protocol/openid-connect/auth",
        "tokenUrl": "{{ .Values.config.keycloak.baseUrl }}/realms/{{ .Values.config.keycloak.realmName }}/protocol/openid-connect/token",
        "userInfoUrl": "{{ .Values.config.keycloak.baseUrl }}/realms/{{ .Values.config.keycloak.realmName }}/protocol/openid-connect/userinfo",
        "logoutUrl": "",
        "clientId": "{{ .Values.config.keycloak.clientId }}",
        "clientSecret": "{{ .Values.config.keycloak.clientSecret }}",
        "scope": "openid",
        "groupsClaim": "roles",
        "style": "",
        "defaultGroup": "",
        "groupMapping": {
          "admin": "admin"
        }
      }]
    }'"'"
  {{- end }}

  config.json: |
    {
        "system":{
            "trusted_proxies": ["10.42.0.0/16"],
            "trusted_domains": ["localhost", "{{ include "nextcloud.nextcloud-hostname" . }}"],
            {{- if .Values.ingress.nextcloud.tls.enabled }}
            "overwriteprotocol": "https",
            {{- end }}
            "appstoreenabled": {{ .Values.config.nextcloud.appStoreEnabled | ternary "true" "false" }},
            "debug": {{ .Values.config.debug | quote }}
        },
        "apps":{
            "core":{
                "backgroundjobs_mode": "webcron"
            },
            "onlyoffice":{
                "DocumentServerInternalUrl": "",
                "DocumentServerUrl": "https:\/\/{{ include "nextcloud.onlyoffice-hostname" . }}\/",
                "StorageUrl": "https:\/\/{{ include "nextcloud.nextcloud-hostname" . }}\/",
                "defFormats": "{\"csv\":\"false\",\"doc\":\"false\",\"docm\":\"false\",\"docx\":\"true\",\"dotx\":\"false\",\"epub\":\"false\",\"html\":\"false\",\"odp\":\"true\",\"ods\":\"true\",\"odt\":\"true\",\"pdf\":\"false\",\"potm\":\"false\",\"potx\":\"false\",\"ppsm\":\"false\",\"ppsx\":\"false\",\"ppt\":\"false\",\"pptm\":\"false\",\"pptx\":\"true\",\"rtf\":\"false\",\"txt\":\"false\",\"xls\":\"false\",\"xlsm\":\"false\",\"xlsx\":\"true\",\"xltm\":\"false\",\"xltx\":\"false\"}",
                "editFormats": "{\"csv\":\"true\",\"odp\":\"true\",\"ods\":\"true\",\"odt\":\"true\",\"rtf\":\"false\",\"txt\":\"true\"}",
                "enabled": "yes",
                "groups": "[]",
                "jwt_secret": {{ .Values.config.onlyoffice.secret | quote }},
                "sameTab": "true",
                "settings_error": "",
                "types": "filesystem",
                "customizationForcesave": "true"
            }
        }
    }
