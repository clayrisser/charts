{{- if .Values.persistence.kanister.enabled }}
apiVersion: integration.risserlabs.com/v1alpha2
kind: Plug
metadata:
  name: kanister-postgres
  labels:
    app.kubernetes.io/name: {{ template "postgres.name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  interfaceVersions: '*'
  interface:
    name: kanister
    namespace: kanister
  socket:
    name: kanister
    namespace: kanister
  config:
    schedule: {{ .Values.persistence.kanister.schedule | quote }}
    blueprint: postgres
    deployment: postgres
    secrets: postgres={{ .Release.Namespace }}/postgres-postgres-secret
---
apiVersion: cr.kanister.io/v1alpha1
kind: Blueprint
metadata:
  name: postgres
  labels:
    app.kubernetes.io/name: {{ template "postgres.name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
actions:
  backup:
    secretNames:
      - postgres
    kind: deployment
    phases:
      - args:
          command:
            - /bin/bash
            - -o
            - errexit
            - -o
            - pipefail
            - -c
            - |
              export PGHOST="{{ template "postgres.name" . }}-postgres.{{ .Release.Namespace }}.svc.cluster.local"
              export PGUSER='postgres'
              export PGPASSWORD={{"{{"}} .Secrets.postgres.Data.password | toString {{"}}"}}
              backup_file_path='{{"{{"}} toDate "2006-01-02T15:04:05.999999999Z07:00" .Time  | date "2006-01-02T15-04-05" {{"}}"}}pgsql.sql'
              pg_dumpall --clean -U $PGUSER | kando location push --profile '{{ toJson .Profile }}' --path "${backup_file_path}" -
          image: ghcr.io/kanisterio/kanister-tools:0.71.0
          namespace: {{ .Release.Namespace }}
        func: KubeTask
        name: pgDump
  restore:
    secretNames:
      - postgres
    inputArtifactNames:
      - pgBackup
    kind: deployment
    phases:
      - args:
          command:
            - /bin/bash
            - -o
            - errexit
            - -o
            - pipefail
            - -c
            - |
              export PGHOST="{{ template "postgres.name" . }}-postgres.{{ .Release.Namespace }}.svc.cluster.local"
              export PGUSER='postgres'
              export PGPASSWORD={{"{{"}} .Secrets.postgres.Data.password | toString {{"}}"}}
              backup_file_path="backup.sql"
          image: ghcr.io/kanisterio/kanister-tools:0.71.0
          namespace: {{ .Release.Namespace }}
        func: KubeTask
        name: pgRestore
{{- end }}
