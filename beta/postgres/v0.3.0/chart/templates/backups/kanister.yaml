{{- if .Values.persistence.kanister.enabled }}
apiVersion: cr.kanister.io/v1alpha1
kind: Blueprint
metadata:
  name: {{ template "postgres.fullname" . }}-{{ .Release.Namespace }}
  namespace: kanister
  labels:
    app: {{ template "postgres.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
actions:
  backup:
    secretNames:
      - postgres
    kind: deployment
    phases:
      - args:
          command:
            - bash
            - -o
            - errexit
            - -o
            - pipefail
            - -c
            - |
              export PGHOST="{{ template "postgres.name" . }}-postgres.{{ .Release.Namespace }}.svc.cluster.local"
              export PGUSER='postgres'
              export PGPASSWORD={{"{{"}} .Secrets.postgres.Data.password | toString {{"}}"}}
              backup_file_path='{{"{{"}} toDate "2006-01-02T15:04:05.999999999Z07:00" .Time  | date "2006-01-02T15-04-05" {{"}}"}}pgsql.sql'
              pg_dumpall --clean -U $PGUSER | kando location push --profile '{{ toJson .Profile }}' --path "${backup_file_path}" -
          image: ghcr.io/kanisterio/postgres-kanister-tools:0.71.0
          namespace: {{ .Release.Namespace }}
        func: KubeTask
        name: pgDump
  restore:
    secretNames:
      - postgres
    inputArtifactNames:
      - pgBackup
    kind: deployment
    phases:
      - args:
          command:
            - bash
            - -o
            - errexit
            - -o
            - pipefail
            - -c
            - |
              export PGHOST="{{ template "postgres.name" . }}-postgres.{{ .Release.Namespace }}.svc.cluster.local"
              export PGUSER='postgres'
              export PGPASSWORD={{"{{"}} .Secrets.postgres.Data.password | toString {{"}}"}}
              backup_file_path="backup.sql"
          image: ghcr.io/kanisterio/postgres-kanister-tools:0.71.0
          namespace: {{ .Release.Namespace }}
        func: KubeTask
        name: pgRestore
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ template "postgres.fullname" . }}-{{ .Release.Namespace }}-kanister
  namespace: kanister
  labels:
    app: {{ template "postgres.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  schedule: {{ .Values.persistence.kanister.schedule | quote }}
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: kanister-sa-cluster
          containers:
            - name: {{ template "postgres.name" . }}-backup
              image: registry.gitlab.com/shri178/kanctl:latest
              command:
                - /bin/sh
                - -c
                - |
                  kanctl create actionset --action backup --namespace kanister --blueprint {{ template "postgres.fullname" . }}-{{ .Release.Namespace }} --deployment {{ .Release.Namespace }}/postgres --secrets postgres={{ .Release.Namespace }}/{{ template "postgres.name" . }}-postgres-secret --profile s3
          restartPolicy: OnFailure
{{- end }}
