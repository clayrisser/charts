images:
  rainloop:
    repository: hardware/rainloop
    tag: 1.13.0
  mailserver:
    repository: mailserver/docker-mailserver
    tag: 10.1.0

config:
  clusterType: rke
  imagePullPolicy: Always
  updateStrategy: Recreate
  debug: false
  domain: ''
  postmaster:
    username: postmaster
    password: P@ssw0rd
  privateKey:
  spoofProtection: true
  virusmailsDeleteDelay: 7
  accounts: ''
  mailserver:
    replicas: 1
    requiredNodeAffinityLabel: application/mailserver:true
    resources:
      enabled: defaults
      requests:
        cpu: '1'
        memory: 1536Mi
      limits:
        cpu: '2'
        memory: 2048Mi
  rainloop:
    enabled: false
    baseUrl: ''
    hostname: ''
    resources:
      enabled: defaults
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 500m
        memory: 256Mi
  clamav:
    enabled: false
  spfTests:
    enabled: true
    rblRejectDomains: ''
  amavis:
    enabled: false
  dovecot:
    enabled: true
    # mailboxFormat: maildir
    passAttrs: ''
    passFilter: '(&(objectClass=PostfixBookMailAccount)(uid=%n))'
    userAttrs: ''
    userFilter: '(&(objectClass=PostfixBookMailAccount)(uid=%n))'
  proxy:
    trustedNetworks: '10.0.0.0/8 192.168.0.0/16 172.16.0.0/16 127.0.0.0/8'
  fetchmail:
    enabled: false
    poll: 300
  fail2ban:
    enabled: false
  ldap:
    bindCN: admin
    bindPassword: ''
    domain: ''
    enabled: false
    hostname: ''
    integration: ''
    port: ''
    queryFilterAlias: '(|(&(mailAlias=%s)(objectClass=PostfixBookMailForward))(&(mailAlias=%s)(objectClass=PostfixBookMailAccount)(mailEnabled=TRUE)))'
    queryFilterDomain: '(|(&(mail=*@%s)(objectClass=PostfixBookMailAccount)(mailEnabled=TRUE))(&(mailGroupMember=*@%s)(objectClass=PostfixBookMailAccount)(mailEnabled=TRUE))(&(mailAlias=*@%s)(objectClass=PostfixBookMailForward)))'
    queryFilterGroup: '(&(mailGroupMember=%s)(mailEnabled=TRUE))'
    queryFilterUser: '(&(mail=%s)(mailEnabled=TRUE))'
    saslFilter: '(&(uid=%u)(mailEnabled=TRUE))'
    usersOu: people
    tls:
      enabled: true
  transport:
    map:
    senderMap:
    senderRandMap:
  managesieve:
    enabled: false
  pop3:
    enabled: false
  postfix:
    mailboxSizeLimit: 0
    messageSizeLimit: 100000000
  postgrey:
    autoWhitelistClients: 5
    delay: 300
    enabled: false
    maxAge: 35
    text: 'Delayed by postgrey'
  reports:
    # logrotateInterval: daily
    # logwatchInterval: none
    pflogsummTrigger: none
  spamassassin:
    # moveSpamToJunk: true
    # shortcircuitBayesHam: false
    # shortcircuitBayesSpam: false
    # spamToInbox: true
    enabled: false
    spamSubject: '***SPAM***'
  srs:
    # senderClasses: envelope_sender
    enabled: true
    excludeDomains: ''
    secret: P@ssw0rd

service:
  mailserver:
    type: ClusterIP
    configureNginxIngress: false
    externalTrafficPolicy: Cluster
    tls:
      enabled: true
      certificate: ''
      issuer:
        name: selfsigned
        dnsNames: ''
    nodePorts:
      smtp: 30025
      pop3: 30110
      imap: 30143
      smtps: 30465
      submission: 30587
      imaps: 30993
      pop3s: 30995
    lbPorts:
      smtp: 25
      pop3: 110
      imap: 143
      smtps: 465
      submission: 587
      imaps: 993
      pop3s: 995
  rainloop:
    type: ClusterIP
    externalTrafficPolicy: Cluster
    nodePorts:
      http:
    lbPorts:
      http: 80

ingress:
  rainloop:
    certificate: ''
    enabled: false
    hostname: ''
    tls: false
    issuer:
      name: letsencrypt-staging

persistence:
  accessMode: ReadWriteOnce
  enabled: false
  storageClass: ''
  existingClaim:
    rainloop: ''
    mailserver: ''
  size:
    rainloop: 1Gi
    mailserver: 1Gi
  velero:
    enabled: false
    restic: true
    schedule: '@midnight'
    ttl: 2160h0m00s

probes:
  liveness:
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  readiness:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
