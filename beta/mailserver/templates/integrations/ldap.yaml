{{- if (and .Values.config.ldap.enabled .Values.config.ldap.integration) }}
{{- $name := (split "." .Values.config.ldap.integration)._1 | default "ldap" }}
{{- $namespace := (split "." (printf "%s." .Values.config.ldap.integration))._0 }}
apiVersion: integration.rock8s.com/v1beta1
kind: Plug
metadata:
  name: ldap
  labels:
    app.kubernetes.io/name: {{ template "mailserver.name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  epoch: {{ now | unixEpoch | quote }}
  socket:
    name: {{ $name }}
    namespace: {{ $namespace }}
  config:
    replicate: 'false'
  resources:
    - when: [coupled, updated]
      do: recreate
      template:
        apiVersion: batch/v1
        kind: Job
        metadata:
          name: ldap-coupled-or-updated
          namespace: {{ .Release.Namespace }}
        spec:
          activeDeadlineSeconds: 360
          backoffLimit: 6
          ttlSecondsAfterFinished: 360
          template:
            spec:
              restartPolicy: Never
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                      - matchExpressions:
                          - key: kubernetes.io/arch
                            operator: In
                            values:
                              - amd64
              containers:
                - name: kubectl
                  image: bitnami/kubectl:1.20.9
                  command:
                    - sh
                    - -c
                    - |
                      sleep 10
                      mkdir -p /tmp/kustomize
                      cat <<EOF | kubectl get -f - -o yaml > /tmp/kustomize/release.yaml
                      apiVersion: helm.fluxcd.io/v1
                      kind: HelmRelease
                      metadata:
                        name: {{ template "mailserver.name" . }}
                        namespace: {{ .Release.Namespace }}
                      EOF
                      cat <<EOF > /tmp/kustomize/patch-release.yaml
                      - op: replace
                        path: /spec/values/pod/dockermailserver/ldap_bind_dn
                        value: {% .socketConfig.bindDN | quote %}
                      - op: replace
                        path: /spec/values/pod/dockermailserver/ldap_bind_pw
                        value: {% .socketConfig.bindPassword | quote %}
                      - op: replace
                        path: /spec/values/pod/dockermailserver/ldap_server_host
                        value: {% .socketConfig.protocol %}://{% .socketConfig.hostname %}:{% .socketConfig.port %}
                      - op: replace
                        path: /spec/values/pod/dockermailserver/ldap_search_base
                        value: 'ou={{ .Values.config.ldap.usersOu }},{% .socketConfig.dc %}'
                      - op: replace
                        path: /spec/values/pod/dockermailserver/saslauthd_ldap_bind_dn
                        value: {% .socketConfig.bindDN | quote %}
                      - op: replace
                        path: /spec/values/pod/dockermailserver/saslauthd_ldap_search_base
                        value: 'ou={{ .Values.config.ldap.usersOu }},{% .socketConfig.dc %}'
                      - op: replace
                        path: /spec/values/pod/dockermailserver/saslauthd_ldap_password
                        value: {% .socketConfig.bindPassword | quote %}
                      - op: replace
                        path: /spec/values/pod/dockermailserver/saslauthd_ldap_search_base
                        value: 'ou={{ .Values.config.ldap.usersOu }},{% .socketConfig.dc %}'
                      - op: replace
                        path: /spec/values/pod/dockermailserver/saslauthd_ldap_server
                        value: {% .socketConfig.protocol %}://{% .socketConfig.hostname %}:{% .socketConfig.port %}
                      - op: replace
                        path: /spec/values/pod/dockermailserver/saslauthd_ldap_ssl
                        value: {% (eq .socketConfig.protocol "ldaps") | ternary "1" "0" %}
                      EOF
                      cat <<EOF > /tmp/kustomize/kustomization.yaml
                      apiVersion: kustomize.config.k8s.io/v1beta1
                      kind: Kustomization
                      resources:
                        - release.yaml
                      patchesJson6902:
                        - path: patch-release.yaml
                          target:
                            group: helm.fluxcd.io
                            version: v1
                            kind: HelmRelease
                            name: {{ template "mailserver.name" . }}
                            namespace: {{ .Release.Namespace }}
                      EOF
                      kubectl kustomize /tmp/kustomize
                      kubectl kustomize /tmp/kustomize | kubectl apply -f -
                      kubectl get pods -n {{ .Release.Namespace }} \
                        -l job-name=ldap-coupled-or-updated \
                        --field-selector status.phase=Failed \
                        -o yaml | kubectl delete -f -
{{- end }}
