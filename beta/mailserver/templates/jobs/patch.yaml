{{- $existingDkimSecret := lookup "v1" "Secret" .Release.Namespace (printf "%s-%s-docker-mailserver-secrets" .Release.Name (include "mailserver.name" .)) }}
{{- $existingIngressDaemonSet := lookup "apps/v1" "DaemonSet" "ingress-nginx" "nginx-ingress-controller" }}
{{- $existingTcpServicesConfigMap := lookup "v1" "ConfigMap" "ingress-nginx" "tcp-services" }}

{{- $configureNginxIngress := (and .Values.service.mailserver.configureNginxIngress $existingIngressDaemonSet) }}
{{- if $existingTcpServicesConfigMap }}
{{- $port465 := index $existingTcpServicesConfigMap.data "465" }}
{{- if $port465 }}
{{- $configureNginxIngress = false }}
{{- end }}
{{- end }}

apiVersion: batch/v1
kind: Job
metadata:
  name: patch
  labels:
    app: patch
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: '0'
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  template:
    metadata:
      labels:
        app: patch
        release: {{ .Release.Name }}
    spec:
      restartPolicy: OnFailure
      containers:
        - name: kubectl
          image: codejamninja/kube-commands:0.0.2
          imagePullPolicy: Always
          command:
            - /bin/sh
            - -c
            - |
{{- if (not $existingDkimSecret) }}
              apk add --no-cache opendkim-utils
              export SECRET_NAME={{ .Release.Name }}-{{ template "mailserver.name" . }}-docker-mailserver-secrets
              opendkim-genkey -t -s mail -d $DOMAIN
              kubectl create secret generic $SECRET_NAME \
                --from-file={{ template "mailserver.mailserver-domain" . }}-mail.private=./mail.private \
                --from-file={{ template "mailserver.mailserver-domain" . }}-mail.txt=./mail.txt
              kubectl label secret $SECRET_NAME \
                app={{ template "mailserver.name" . }} \
                chart={{ .Chart.Name }}-{{ .Chart.Version }} \
                release={{ .Release.Name }} \
                heritage={{ .Release.Service }}
{{- end }}
              mkdir -p /tmp/kustomize
{{- if $configureNginxIngress }}
              cat <<EOF | kubectl apply -f -
              apiVersion: v1
              kind: ConfigMap
              metadata:
                name: tcp-services
                namespace: ingress-nginx
              data:
                '25': '{{ .Release.Namespace }}/{{ .Release.Name }}-{{ template "mailserver.name" . }}-docker-mailserver:25::PROXY'
                '110': '{{ .Release.Namespace }}/{{ .Release.Name }}-{{ template "mailserver.name" . }}-docker-mailserver:110::PROXY'
                '143': '{{ .Release.Namespace }}/{{ .Release.Name }}-{{ template "mailserver.name" . }}-docker-mailserver:143::PROXY'
                '465': '{{ .Release.Namespace }}/{{ .Release.Name }}-{{ template "mailserver.name" . }}-docker-mailserver:465::PROXY'
                '587': '{{ .Release.Namespace }}/{{ .Release.Name }}-{{ template "mailserver.name" . }}-docker-mailserver:587::PROXY'
                '993': '{{ .Release.Namespace }}/{{ .Release.Name }}-{{ template "mailserver.name" . }}-docker-mailserver:993::PROXY'
                '995': '{{ .Release.Namespace }}/{{ .Release.Name }}-{{ template "mailserver.name" . }}-docker-mailserver:995::PROXY'
              EOF
              cat <<EOF | kubectl get -f - -o yaml > /tmp/kustomize/daemonset.yaml
              apiVersion: apps/v1
              kind: DaemonSet
              metadata:
                name: nginx-ingress-controller
                namespace: ingress-nginx
              EOF
              cat <<EOF > /tmp/kustomize/patch-daemonset.yaml
              - op: replace
                path: /spec/template/spec/containers/0/ports
                value:
{{ toYaml (index $existingIngressDaemonSet.spec.template.spec.containers 0).ports | indent 18 }}
                  - containerPort: 25
                    hostPort: 25
                    name: smtp
                    protocol: TCP
                  - containerPort: 110
                    hostPort: 110
                    name: pop3
                    protocol: TCP
                  - containerPort: 143
                    hostPort: 143
                    name: imap
                    protocol: TCP
                  - containerPort: 465
                    hostPort: 465
                    name: smtps
                    protocol: TCP
                  - containerPort: 587
                    hostPort: 587
                    name: submission
                    protocol: TCP
                  - containerPort: 993
                    hostPort: 993
                    name: imaps
                    protocol: TCP
                  - containerPort: 995
                    hostPort: 995
                    name: pop3s
                    protocol: TCP
              EOF
              cat <<EOF > /tmp/kustomize/kustomization.yaml
              apiVersion: kustomize.config.k8s.io/v1beta1
              kind: Kustomization
              resources:
                - daemonset.yaml
              patchesJson6902:
                - path: patch-daemonset.yaml
                  target:
                    group: apps
                    version: v1
                    kind: DaemonSet
                    name: nginx-ingress-controller
                    namespace: ingress-nginx
              EOF
              kubectl kustomize /tmp/kustomize
              kubectl kustomize /tmp/kustomize | kubectl apply -f -
{{- end }}
              sleep 10
              echo A
              cat <<EOF | kubectl get -f - -o yaml > /tmp/kustomize/deployment.yaml
              apiVersion: apps/v1
              kind: Deployment
              metadata:
                name: {{ .Release.Name }}-{{ template "mailserver.name" . }}-docker-mailserver
                namespace: {{ .Release.Namespace }}
              EOF
              echo A1
              kubectl get deployment {{ .Release.Name }}-{{ template "mailserver.name" . }}-docker-mailserver -n {{ .Release.Namespace }} -o jsonpath='{.spec.template.spec.containers[0].volumeMounts}'
              echo A2
              (kubectl get deployment {{ .Release.Name }}-{{ template "mailserver.name" . }}-docker-mailserver -n {{ .Release.Namespace }} -o jsonpath='{.spec.template.spec.containers[0].volumeMounts}' | grep -q "/etc/postfix/sasl/smtpd.conf") && true || echo '- {"op":"add","path":"/spec/template/spec/containers/0/volumeMounts/0","value":{"mountPath":"/etc/postfix/sasl/smtpd.conf","name":"configmap","readOnly":true,"subPath":"smtpd.conf"} }'
              echo A3
              cat <<EOF > /tmp/kustomize/patch-deployment.yaml
              {{- if .Values.config.dovecot.enabled }}
              - op: remove
                path: /spec/template/spec/containers/0/command
              {{- else }}
              - op: replace
                path: /spec/template/spec/containers/0/command
                value:
                  - /bin/sh
                  - -c
                  - |
                    usermod postfix -a -G sasl
                    echo "{{ .Values.config.postmaster.password }}" | saslpasswd2 -f /etc/sasldb2 -p -c -u {{ template "mailserver.mailserver-domain" . }} {{ .Values.config.postmaster.username }}
                    exec dumb-init -- supervisord -c /etc/supervisor/supervisord.conf
              $((kubectl get deployment {{ .Release.Name }}-{{ template "mailserver.name" . }}-docker-mailserver -n {{ .Release.Namespace }} -o jsonpath='{.spec.template.spec.containers[0].volumeMounts}' | grep -q "/etc/postfix/sasl/smtpd.conf") && true || echo '- {"op":"add","path":"/spec/template/spec/containers/0/volumeMounts/0","value":{"mountPath":"/etc/postfix/sasl/smtpd.conf","name":"configmap","readOnly":true,"subPath":"smtpd.conf"} }')
              {{- end }}
              - op: add
                path: /spec/template/spec/tolerations
                value:
                  - key: mailserver
                    operator: Equal
                    value: 'true'
                    effect: NoSchedule
              - op: add
                path: /spec/template/spec/affinity
                value:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                        - matchExpressions:
                            - key: kubernetes.io/arch
                              operator: In
                              values:
                                - amd64
                          {{- if .Values.config.mailserver.requiredNodeAffinityLabel }}
                          {{- $requiredNodeAffinityLabel := (splitList ":" .Values.config.mailserver.requiredNodeAffinityLabel) }}
                            - key: {{ (index $requiredNodeAffinityLabel 0) | quote }}
                              operator: In
                              values:
                                - {{ (index $requiredNodeAffinityLabel 1 | quote) }}
                          {{- end }}
              EOF
              echo B
              cat /tmp/kustomize/patch-deployment.yaml
              echo C
              cat <<EOF > /tmp/kustomize/kustomization.yaml
              apiVersion: kustomize.config.k8s.io/v1beta1
              kind: Kustomization
              resources:
                - deployment.yaml
              patchesJson6902:
                - path: patch-deployment.yaml
                  target:
                    group: apps
                    version: v1
                    kind: Deployment
                    name: {{ .Release.Name }}-{{ template "mailserver.name" . }}-docker-mailserver
                    namespace: {{ .Release.Namespace }}
              EOF
              kubectl kustomize /tmp/kustomize
              kubectl kustomize /tmp/kustomize | kubectl apply -f -
              kubectl get pods -n {{ .Release.Namespace }} \
                -l job-name=patch \
                --field-selector status.phase=Failed \
                -o yaml | kubectl delete -f -
          env:
            - name: DOMAIN
              value: {{ template "mailserver.mailserver-domain" . }}
