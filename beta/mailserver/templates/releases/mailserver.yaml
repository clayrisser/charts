apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ template "mailserver.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  forceUpgrade: true
  helmVersion: v3
  chart:
    git: https://github.com/funkypenguin/helm-docker-mailserver.git
    ref: docker-mailserver-0.2.7
    path: charts/docker-mailserver
  values:
    image:
      name: {{ .Values.images.mailserver.repository | quote }}
      tag: {{ .Values.images.mailserver.tag | quote }}
      pullPolicy: {{ .Values.config.imagePullPolicy | quote }}
    initContainer:
      image:
        name: busybox
        tag: '1.28'
        pullPolicy: {{ .Values.config.imagePullPolicy | quote }}
      resources:
        requests:
          cpu: 10m
          memory: 32Mi
        limits:
          cpu: 50m
          memory: 64Mi
    serviceAccount:
      create: 'true'
    configMap:
      useExisting: true
    secret:
      useExisting: true
    ssl:
      useExisting: true
      existingName: {{ template "mailserver.mailserver-certificate" . }}
    psp:
      create: true
    demoMode:
      enabled: false
    spfTestsDisabled: {{ .Values.config.spfTests.enabled | ternary "false" "true" }}
    rblRejectDomains: []
    domains:
      - {{ template "mailserver.mailserver-hostname" . }}
    pod:
      # TODO: cannot inject env without kustomize
      # env:
      #   - name: LOGROTATE_INTERVAL
      #     value: {{ .Values.config.reports.logrotateInterval | quote }}
      #   - name: LOGWATCH_INTERVAL
      #     value: {{ .Values.config.reports.logwatchInterval | quote }}
      #   - name: DOVECOT_MAILBOX_FORMAT
      #     value: {{ .Values.config.dovecot.mailboxFormat | quote }}
      #   - name: MOVE_SPAM_TO_JUNK
      #     value: {{ .Values.config.spamassassin.moveSpamToJunk | ternary "1" "0" | quote }}
      #   - name: SA_SHORTCIRCUIT_BAYES_HAM
      #     value: {{ .Values.config.spamassassin.shortcircuitBayesHam | ternary "1" "0" | quote }}
      #   - name: SA_SHORTCIRCUIT_BAYES_SPAM
      #     value: {{ .Values.config.spamassassin.shortcircuitBayesSpam | ternary "1" "0" | quote }}
      #   - name: SPAMASSASSIN_SPAM_TO_INBOX
      #     value: {{ .Values.config.spamassassin.spamToInbox | ternary "1" "0" | quote }}
      #   - name: SRS_SENDER_CLASSES
      #     value: {{ .Values.config.srs.senderClasses | quote }}
      dockermailserver:
        default_relay_host:
        dms_debug: {{ .Values.config.debug | ternary "1" "0" }}
        dovecot_pass_filter: {{ .Values.config.dovecot.passFilter | quote }}
        dovecot_tls: {{ .Values.config.ldap.tls | ternary "yes" "no" | quote }}
        dovecot_user_filter: {{ .Values.config.dovecot.userFilter | quote }}
        enable_clamav: {{ .Values.config.clamav.enabled | ternary "1" "0" }}
        enable_fail2ban: {{ .Values.config.fail2ban.enabled | ternary "1" "0" }}
        enable_fetchmail: {{ .Values.config.fetchmail.enabled | ternary "1" "0" }}
        enable_ldap: {{ .Values.config.ldap.enabled | ternary "1" "" | quote }}
        enable_managesieve: {{ .Values.config.managesieve.enabled | ternary "1" "0" }}
        enable_pop3: {{ .Values.config.pop3.enabled | ternary "1" "0" }}
        enable_postfix_virtual_transport:
        enable_postgrey: {{ .Values.config.postgrey.enabled | ternary "1" "0" }}
        enable_saslauthd: {{ .Values.config.ldap.enabled | ternary "1" "0" }}
        enable_spamassassin: {{ .Values.config.spamassassin.enabled | ternary "1" "0" }}
        enable_srs: {{ .Values.config.srs.enabled | ternary "1" "0" }}
        fetchmail_poll: {{ .Values.config.fetchmail.poll }}
        ldap_bind_dn: cn={{ .Values.config.ldap.admin }},{{ template "mailserver.ldap-dc" . }}
        ldap_bind_pw: {{ .Values.config.ldap.password | quote }}
        ldap_query_filter_alias: {{ .Values.config.ldap.queryFilterAlias | quote }}
        ldap_query_filter_domain: {{ .Values.config.ldap.queryFilterDomain | quote }}
        ldap_query_filter_group: {{ .Values.config.ldap.queryFilterGroup | quote }}
        ldap_query_filter_user: {{ .Values.config.ldap.queryFilterUser | quote }}
        ldap_search_base: ou={{ .Values.config.ldap.usersOu }},{{ template "mailserver.ldap-dc" . }}
        ldap_server_host: {{ .Values.config.ldap.hostname | quote }}
        ldap_start_tls: {{ .Values.config.ldap.tls | ternary "yes" "no" | quote }}
        one_dir: 1
        pflogsumm_recipient:
        pflogsumm_trigger: {{ (eq .Values.config.reports.pflogsummTrigger "none") | ternary "" .Values.config.reports.pflogsummTrigger }}
        postfix_dagent:
        postfix_mailbox_size_limit: {{ .Values.config.postfixMailboxSizeLimit | quote }}
        postfix_message_size_limit: {{ .Values.config.postfixMessageSizeLimit | quote }}
        postgrey_auto_whitelist_clients: {{ .Values.config.postgrey.autoWhitelistClients }}
        postgrey_delay: {{ .Values.config.postgrey.delay }}
        postgrey_max_age: {{ .Values.config.postgrey.maxAge }}
        postgrey_text: {{ .Values.config.postgrey.text | quote }}
        postmaster_address: '{{ .Values.config.postmasterUsername }}@{{ .Values.config.domain }}'
        postscreen_action: enforce
        relay_host:
        relay_password:
        relay_port: 25
        relay_user:
        report_interval:
        report_recipient: 0
        report_sender:
        sa_kill: 6.31
        sa_spam_subject: {{ .Values.config.spamassassin.spamSubject | quote }}
        sa_tag2: 6.31
        sa_tag: 2.0
        sasl_passwd:
        saslauthd_ldap_bind_dn: cn={{ .Values.config.ldap.admin }},{{ template "mailserver.ldap-dc" . }}
        saslauthd_ldap_filter: {{ .Values.config.ldap.saslFilter | quote }}
        saslauthd_ldap_password: {{ .Values.config.ldap.password | quote }}
        saslauthd_ldap_search_base: ou={{ .Values.config.ldap.usersOu }},{{ template "mailserver.ldap-dc" . }}
        saslauthd_ldap_server: {{ .Values.config.ldap.hostname | quote }}
        saslauthd_ldap_ssl: {{ .Values.config.ldap.tls | ternary "1" "0" }}
        saslauthd_mech_options: ''
        saslauthd_mechanisms: ldap
        smtp_only: {{ .Values.config.smtpOnly | ternary "1" "" | quote }}
        spoof_protection: {{ .Values.config.spoofProtection | ternary "1" "0" }}
        srs_domainname: {{ .Values.config.domain | quote }}
        srs_exclude_domains: {{ .Values.config.srs.excludeDomains | quote }}
        srs_secret: {{ .Values.config.srs.secret | quote }}
        tls_level:
        virusmails_delete_delay: {{ .Values.config.virusmailsDeleteDelay | quote }}
        {{- if .Values.ingress.rainloop.tls }}
        ssl_type: manual
        ssl_cert_path: '/tmp/ssl/tls.crt'
        ssl_key_path: '/tmp/ssl/tls.key'
        {{- else }}
        ssl_type:
        {{- end }}
        strategy:
          type: {{ .Values.config.updateStrategy | quote }}
        # TODO: possibly incorrect
        dovecot_pass_attr: {{ .Values.config.dovecot.passAttrs | quote }}
        dovecot_user_attr: {{ .Values.config.dovecot.userAttrs | quote }}
        # override_hostname: {{ printf "mail.%s" (include "mailserver.mailserver-hostname" .) }}
        override_hostname: {{ template "mailserver.rainloop-hostname" . }}
        # permit_docker:
        permit_docker: host
        # TODO: unused
        hostPID: false
        hostNetwork: false
        enable_dovecot_replication: true
    service:
      type: {{ .Values.service.mailserver.type | quote }}
      port: {{ .Values.service.mailserver.nodePorts.http | quote }}
      # privateIp:
      loadBalancer:
        # publicIp:
        allowedIps:
          - "0.0.0.0/0"
        # hostName:
      nodePort:
        smtp: 30025
        pop3: 30110
        imap: 30143
        smtps: 30465
        submission: 30587
        imaps: 30993
        pop3s: 30995
      annotations: {}
    deployment:
      replicas: {{ .Values.config.mailserver.replicas }}
      annotations:
      {{- if .Values.persistence.velero.enabled }}
        backup.velero.io/backup-volumes: data
      {{- end }}
{{- if .Values.config.mailserver.resources.enabled }}
    resources:
      requests:
{{ toYaml .Values.config.mailserver.resources.requests | indent 8 }}
      limits:
{{ toYaml .Values.config.mailserver.resources.limits | indent 8 }}
{{- else }}
    resources:
      requests: {}
      limits: {}
{{- end }}
    persistence:
      size: {{ .Values.persistence.size.mailserver | quote }}
      annotations: {}
    monitoring:
      service:
        scrape: 'true'
        probe: 'false'
        path: /metrics
        port: '9102'
      pod:
        scrape: 'true'
        probe: 'false'
        path: /metrics
        port: '9102'
    rainloop:
      enabled: {{ .Values.config.rainloop.enabled }}
      serviceAccount:
        create: true
        name: "rainloop"
      image:
        name: {{ .Values.images.rainloop.repository | quote }}
        tag: {{ .Values.images.rainloop.tag | quote }}
        pullPolicy: {{ .Values.config.imagePullPolicy | quote }}
        strategy:
          type: {{ .Values.config.updateStrategy | quote }}
      persistence:
        size: {{ .Values.persistence.size.rainloop | quote }}
        annotations: {}
      service:
        port: 80
      container:
        port: 8888
      ingress:
        enabled: true
        hosts:
          - {{ template "mailserver.rainloop-hostname" . }}
        annotations: {}
        path: /
        tls: []
    poorMansK8sLb:
      enabled: false
    haproxy:
      enabled: false
