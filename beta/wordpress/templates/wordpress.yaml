apiVersion: wordpress.presslabs.org/v1alpha1
kind: Wordpress
metadata:
  name: {{ template "wordpress.fullname" . }}
  labels:
    app: {{ template "wordpress.fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.config.wordpress.replicas }}
  routes:
    - domain: {{ template "wordpress.wordpress-hostname" . }}
      path: /wp
    - domain: {{ template "wordpress.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local
      path: /wp
    - domain: {{ template "wordpress.fullname" . }}
      path: /wp
    - domain: localhost
      path: /wp
  image: '{{ .Values.images.wordpress.repository }}:{{ .Values.images.wordpress.tag }}'
  # tag: {{ .Values.images.wordpress.tag | quote }}
  imagePullPolicy: {{ .Values.config.imagePullPolicy | quote }}
  {{- if .Values.config.git.repo }}
  code:
    # contentSubpath: wp-content/
    git:
      repository: {{ .Values.config.git.repo | quote }}
      reference: {{ .Values.config.git.branch | default "main" }}
      {{- if (not (empty .Values.config.git.privateKey)) }}
      env:
        - name: SSH_RSA_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "wordpress.fullname" . }}-ssh
              key: id_rsa
      {{- end }}
    # hostPath: {}
    # {{- if .Values.persistence.enabled }}
    # persistentVolumeClaim:
    #   claimName: {{ .Values.persistence.existingClaim | default (include "wordpress.fullname" . ) }}
    # {{- else }}
    # emptyDir: {}
    # {{- end }}
  {{- end }}
  media:
    # persistentVolumeClaim: {}
    # hostPath: {}
    {{- if .Values.persistence.enabled }}
    persistentVolumeClaim:
      claimName: {{ .Values.persistence.existingClaim | default (include "wordpress.fullname" . ) }}
    {{- else }}
    emptyDir: {}
    {{- end }}
    # TODO
    # s3:
    #   bucket: string
    #   prefix: string
  bootstrap:
    env:
      - name: WORDPRESS_BOOTSTRAP_USER
        valueFrom:
          configMapKeyRef:
            name: {{ template "wordpress.fullname" . }}
            key: username
      - name: WORDPRESS_BOOTSTRAP_EMAIL
        valueFrom:
          configMapKeyRef:
            name: {{ template "wordpress.fullname" . }}
            key: email
      - name: WORDPRESS_BOOTSTRAP_TITLE
        valueFrom:
          configMapKeyRef:
            name: {{ template "wordpress.fullname" . }}
            key: title
      - name: WORDPRESS_BOOTSTRAP_PASSWORD
        valueFrom:
          secretKeyRef:
            name: {{ template "wordpress.fullname" . }}
            key: password
  volumes: []
  volumeMounts: []
  env:
    # - name: NGINX_PING_PATH
    #   value: '/-/php-ping'
    # - name: PHP_PING_PATH
    #   value: '/-/_php-ping'
    - name: STATS_WHITELIST_CIDR
      value: all
    {{- if (not .Values.config.mysql.integration) }}
    - name: DB_HOST
      valueFrom:
        configMapKeyRef:
          name: {{ template "wordpress.fullname" . }}
          key: mysql_host
    - name: DB_USER
      valueFrom:
        configMapKeyRef:
          name: {{ template "wordpress.fullname" . }}
          key: mysql_username
    - name: DB_PORT
      valueFrom:
        configMapKeyRef:
          name: {{ template "wordpress.fullname" . }}
          key: mysql_port
    - name: DB_NAME
      valueFrom:
        configMapKeyRef:
          name: {{ template "wordpress.fullname" . }}
          key: mysql_database
    - name: DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: {{ template "wordpress.fullname" . }}
          key: mysql_password
    {{- else }}
    - name: DB_HOST
      valueFrom:
        configMapKeyRef:
          name: {{ template "wordpress.fullname" . }}-externaldb
          key: MYSQL_HOSTNAME
    - name: DB_USER
      valueFrom:
        configMapKeyRef:
          name: {{ template "wordpress.fullname" . }}-externaldb
          key: MYSQL_USERNAME
    - name: DB_PORT
      valueFrom:
        configMapKeyRef:
          name: {{ template "wordpress.fullname" . }}-externaldb
          key: MYSQL_PORT
    - name: DB_NAME
      valueFrom:
        configMapKeyRef:
          name: {{ template "wordpress.fullname" . }}-externaldb
          key: MYSQL_DATABASE
    - name: DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: {{ template "wordpress.fullname" . }}-externaldb
          key: MYSQL_PASSWORD
    {{- end }}
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: {{ .Values.persistence.enabled | ternary "91" "89" }}
          preference:
            matchExpressions:
              - key: application/state
                operator: In
                values:
                  - {{ .Values.persistence.enabled | ternary "stateful" "stateless" }}
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 90
          podAffinityTerm:
            topologyKey: kubernetes.io/hostname
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    # TODO
                    - {{ template "wordpress.name" . }}-wordpress
{{- if .Values.config.wordpress.resources.enabled }}
  resources:
{{ toYaml .Values.config.wordpress.resources | indent 4 }}
{{- end }}
  deploymentStrategy:
    type: {{ .Values.config.updateStrategy | quote }}
  podMetadata:
    {{- if .Values.persistence.velero.restic }}
    annotations:
      backup.velero.io/backup-volumes: data
    {{- end }}
  ingressAnnotations:
    {{- if (eq .Values.config.clusterProvider "aks") }}
    kubernetes.io/ingress.class: addon-http-application-routing
    {{- else }}
    kubernetes.io/ingress.class: nginx
    {{- end }}
    {{- if .Values.ingress.wordpress.tls }}
    {{- if (empty .Values.ingress.wordpress.certificate) }}
    cert-manager.io/cluster-issuer: {{ .Values.ingress.wordpress.issuer.name }}
    kubernetes.io/tls-acme: 'true'
    {{- end }}
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    {{- end }}
  wordpressPathPrefix: /wp
  # tlsSecretRef: {{ template "wordpress.wordpress-certificate" . }}
  # priorityClassName:
