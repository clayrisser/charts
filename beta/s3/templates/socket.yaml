apiVersion: integration.rock8s.com/v1beta1
kind: Socket
metadata:
  name: {{ template "s3.name" . }}
  labels:
    app.kubernetes.io/name: {{ template "s3.name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  epoch: {{ now | unixEpoch | quote }}
  interface:
    config:
      plug:
        bucket: {}
        create: {}
        cleanup: {}
      socket:
        endpoint:
          required: true
        accessKey: {}
        secretKey: {}
        region: {}
        tls: {}
    response:
      plug:
        arn: {}
  config:
    tls: '1'
    region: '{{ template "s3.aws-region" . }}'
  configTemplate:
    endpoint: '{% printf "%s.s3.%s.amazonaws.com" .plugConfig.bucket "{{ template "s3.aws-region" . }}" %}'
  resources:
    - when: [coupled, updated]
      do: apply
      stringTemplate: |
        {%- if (eq .plugConfig.create "1") %}
        apiVersion: awsblueprints.io/v1alpha1
        kind: S3IRSA
        metadata:
          name: {% .plugConfig.bucket %}
          namespace: {{ .Release.Namespace }}
        spec:
          resourceConfig:
            providerConfigName: aws-provider-config
            region: {{ template "s3.aws-region" . }}
        {%- end %}
    - when: [coupled, updated]
      do: apply
      stringTemplate: |
        apiVersion: awsblueprints.io/v1alpha1
        kind: DelegateS3IRSA
        metadata:
          name: {% .plug.metadata.name %}-{% .plug.metadata.namespace %}
        spec:
          delegate:
            namespace: {% .plug.metadata.namespace %}
            s3irsa:
              name: {% .plugConfig.bucket %}
          resourceConfig:
            providerConfigName: aws-provider-config
            name: {% .plugConfig.bucket %}
            region: {% .socketConfig.bucket %}
