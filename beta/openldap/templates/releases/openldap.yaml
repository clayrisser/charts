apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: jp-gouin
  labels:
    app.kubernetes.io/name: {{ template "openldap.name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  interval: 5m
  url: https://jp-gouin.github.io/helm-openldap
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: {{ .Release.Name }}-release
  labels:
    app.kubernetes.io/name: {{ template "openldap.name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  interval: 5m
  chart:
    spec:
      chart: openldap-stack-ha
      version: 3.0.1
      sourceRef:
        apiVersion: source.toolkit.fluxcd.io/v1beta1
        kind: HelmRepository
        name: jp-gouin
  values:
    global:
      ldapDomain: {{ .Values.config.openldap.domain | quote }}
    replicaCount: {{ .Values.config.openldap.replicas }}
    updateStrategy:
      type: {{ .Values.config.updateStrategy | quote }}
    image:
      repository: {{ .Values.images.openldap.repository | quote }}
      tag: {{ .Values.images.openldap.tag | quote }}
      pullPolicy: {{ .Values.config.imagePullPolicy }}
    logLevel: {{ .Values.config.debug | ternary "debug" "info" }}
    existingSecret: {{ template "openldap.name" . }}
    customTLS:
      enabled: {{ .Values.service.openldap.tls.enabled }}
      secret: {{ template "openldap.openldap-certificate" . }}
      CA:
        enabled: {{ .Values.service.openldap.tls.enforce | ternary "true" "false" }}
    extraLabels: {}
    {{- if .Values.config.openldap.dhparam }}
    extraVolumes:
      - name: dhparam
        secret:
          secretName: dhparam
    extraVolumeMounts:
      - name: dhparam
        readOnly: true
        mountPath: /container/service/slapd/assets/certs/dhparam.pem
        subPath: dhparam.pem
    {{- end }}
    {{- if .Values.persistence.velero.enabled }}
    podAnnotations:
      backup.velero.io/backup-volumes: data
      pre.hook.backup.velero.io/timeout: 3m
      pre.hook.backup.velero.io/command: |
        ["/bin/bash", "-c", "cd /var/lib/ldap && rm -rf *.ldif && slapcat -n 0 -l config.ldif && slapcat -n 1 -l data.ldif"]
    {{- else }}
    podAnnotations: {}
    {{- end }}
    service:
      annotations: {}
      {{- if (eq .Values.service.openldap.type "LoadBalancer") }}
      ldapPort: {{ .Values.service.openldap.lbPorts.openldap }}
      sslLdapPort: {{ .Values.service.openldap.lbPorts.sslLdap }}
      {{- else }}
      ldapPort: 389
      sslLdapPort: 636
      {{- end }}
      {{- if (eq .Values.service.openldap.type "NodePort") }}
      ldapPortNodePort: {{ .Values.service.openldap.nodePorts.ldap }}
      sslLdapPortNodePort: {{ .Values.service.openldap.nodePorts.ldaps }}
      {{- end }}
      externalIPs: []
      # loadBalancerIP:
      # loadBalancerSourceRanges: []
      type: {{ .Values.service.openldap.type | quote }}
    env:
      CONTAINER_LOG_LEVEL: '4'
      KEEP_EXISTING_CONFIG: 'false'
      LDAP_BACKEND: 'mdb'
      LDAP_HASH_PASSWORD: {{ .Values.config.openldap.hashPassword | quote }}
      LDAP_LOG_LEVEL: {{ .Values.config.debug | ternary "-1" "256" | quote }}
      LDAP_ORGANISATION: {{ .Values.config.openldap.organization | quote }}
      LDAP_READONLY_USER: 'false'
      LDAP_READONLY_USER_PASSWORD: 'readonly'
      LDAP_READONLY_USER_USERNAME: 'readonly'
      LDAP_REMOVE_CONFIG_AFTER_SETUP: {{ .Values.config.debug | ternary "false" "true" | quote }}
      LDAP_RFC2307BIS_SCHEMA: 'false'
      LDAP_SSL_HELPER_PREFIX: 'ldap'
      LDAP_TLS: {{ .Values.service.openldap.tls.enabled | quote }}
      LDAP_TLS_CA_CRT_FILENAME: 'ca.crt'
      LDAP_TLS_CIPHER_SUITE: 'NORMAL'
      LDAP_TLS_CRT_FILENAME: 'tls.crt'
      LDAP_TLS_DH_PARAM_FILENAME: 'dhparam.pem'
      LDAP_TLS_ENFORCE: {{ .Values.service.openldap.tls.enforce | quote }}
      LDAP_TLS_KEY_FILENAME: 'tls.key'
      LDAP_TLS_PROTOCOL_MIN: '3.0'
      LDAP_TLS_REQCERT: {{ .Values.service.openldap.tls.enforce | ternary "try" "never" | quote }}
      LDAP_TLS_VERIFY_CLIENT: {{ .Values.service.openldap.tls.enforce | ternary "try" "never" | quote }}
    {{- if .Values.config.openldap.organizationalUnits }}
    customLdifFiles:
      10-organizational-units.ldif: |
        {{- range (splitList "," .Values.config.openldap.organizationalUnits) }}
        dn: ou={{ . }},{{ template "openldap.openldap-dc" $ }}
        objectclass: organizationalUnit
        objectclass: top
        ou: {{ . }}
        {{- printf "\n" }}
        {{- end }}
    {{- end }}
    replication:
      enabled: true
      clusterName: 'cluster.local'
      retry: 60
      timeout: 1
      interval: 00:00:00:10
      starttls: 'yes'
      tls_reqcert: 'never'
    persistence:
      enabled: {{ .Values.persistence.enabled }}
      {{- if .Values.persistence.storageClass }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
      storageClass: ''
      {{- else }}
      storageClass: {{ .Values.persistence.storageClass | quote }}
      {{- end }}
      {{- end }}
      accessModes:
        - {{ .Values.persistence.accessMode | quote }}
      size: {{ .Values.persistence.size.openldap | quote }}
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
{{- if (and .Values.config.openldap.resources.enabled (not (eq .Values.config.openldap.resources.enabled "false"))) }}
    resources:
      requests:
{{ toYaml .Values.config.openldap.resources.requests | indent 8 }}
      limits:
{{ toYaml .Values.config.openldap.resources.limits | indent 8 }}
{{- else }}
    resources: {}
{{- end }}
    nodeSelector: {}
    tolerations: []
    test:
      enabled: false
      image:
        repository: dduportal/bats
        tag: 0.4.0
    ltb-passwd:
      enabled : false
      ingress:
        enabled: false
        annotations: {}
        path: /
        hosts:
          - 'ssl-ldap2.example'
      ldap:
        server: ldap://openldap-stack-ha
        searchBase: {{ template "openldap.openldap-dc" . }}
        bindDN: cn=admin,{{ template "openldap.openldap-dc" . }}
        bindPWKey: LDAP_ADMIN_PASSWORD
    phpldapadmin:
      enabled: {{ .Values.config.phpldapadmin.enabled }}
      ingress:
        enabled: {{ .Values.ingress.phpldapadmin.enabled }}
        annotations:
          {{- if .Values.ingress.phpldapadmin.tls }}
          {{- if (not .Values.ingress.phpldapadmin.certificate) }}
          kubernetes.io/tls-acme: 'true'
          {{- if .Values.ingress.phpldapadmin.issuer.name }}
          cert-manager.io/cluster-issuer: {{ .Values.ingress.phpldapadmin.issuer.name }}
          {{- end }}
          {{- end }}
          nginx.ingress.kubernetes.io/ssl-redirect: 'true'
          {{- end }}
        path: /
        hosts:
          - {{ .Values.ingress.phpldapadmin.hostname }}
        {{- if .Values.ingress.phpldapadmin.tls }}
        tls:
          - secretName: {{ template "openldap.phpldapadmin-certificate" . }}
            hosts:
              - {{ .Values.ingress.phpldapadmin.hostname }}
        {{- end }}
      env:
        PHPLDAPADMIN_HTTPS: 'false'
        PHPLDAPADMIN_LDAP_CLIENT_TLS_REQCERT: allow
        PHPLDAPADMIN_TRUST_PROXY_SSL: 'true'
    livenessProbe:
      enabled: true
      initialDelaySeconds: 20
      periodSeconds: 10
      timeoutSeconds: 1
      successThreshold: 1
      failureThreshold: 10
    readinessProbe:
      enabled: true
      initialDelaySeconds: 20
      periodSeconds: 10
      timeoutSeconds: 1
      successThreshold: 1
      failureThreshold: 10
