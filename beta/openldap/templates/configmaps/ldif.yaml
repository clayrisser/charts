apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "openldap.fullname" . }}-ldif
  labels:
    app: {{ template "openldap.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  {{- if .Values.config.openldap.siliconhillsSchema }}
  schema.ldif: |
    dn: cn=schema
    changetype: modify
    add: attributeTypes
    attributeTypes: ( 1.3.6.1.4.1.57257.1.1.10
      NAME 'key0'
      EQUALITY caseIgnoreMatch
      SUBSTR caseIgnoreSubstringsMatch
      SINGLE-VALUE
      SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{1024} )

    dn: cn=schema
    changetype: modify
    add: attributeTypes
    attributeTypes: ( 1.3.6.1.4.1.57257.1.1.11
      NAME 'key1'
      SUP key0 )

    dn: cn=schema
    changetype: modify
    add: attributeTypes
    attributeTypes: ( 1.3.6.1.4.1.57257.1.1.12
      NAME 'key2'
      SUP key0 )

    dn: cn=schema
    changetype: modify
    add: attributeTypes
    attributeTypes: ( 1.3.6.1.4.1.57257.1.1.13
      NAME 'key3'
      SUP key0 )

    dn: cn=schema
    changetype: modify
    add: attributeTypes
    attributeTypes: ( 1.3.6.1.4.1.57257.1.1.14
      NAME 'key4'
      SUP key0 )

    dn: cn=schema
    changetype: modify
    add: attributeTypes
    attributeTypes: ( 1.3.6.1.4.1.57257.1.1.15
      NAME 'key5'
      SUP key0 )

    dn: cn=schema
    changetype: modify
    add: attributeTypes
    attributeTypes: ( 1.3.6.1.4.1.57257.1.1.16
      NAME 'key6'
      SUP key0 )

    dn: cn=schema
    changetype: modify
    add: attributeTypes
    attributeTypes: ( 1.3.6.1.4.1.57257.1.1.17
      NAME 'key7'
      SUP key0 )

    dn: cn=schema
    changetype: modify
    add: attributeTypes
    attributeTypes: ( 1.3.6.1.4.1.57257.1.1.18
      NAME 'key8'
      SUP key0 )

    dn: cn=schema
    changetype: modify
    add: attributeTypes
    attributeTypes: ( 1.3.6.1.4.1.57257.1.1.19
      NAME 'key9'
      SUP key0 )

    dn: cn=schema
    changetype: modify
    add: objectclasses
    objectclasses: ( 1.3.6.1.4.1.57257.1.2.1
      NAME 'arbitraryKeySlots'
      DESC '10 slots for arbitrary data'
      STRUCTURAL
        MAY ( key0 $ key1 $ key2 $ key3 $ key4 $ key5 $ key6 $ key7 $ key8 $ key9 ) )

  {{- end  }}
  {{- if (not (empty .Values.config.openldap.organizationalUnits)) }}
  organizational-units.ldif: |
    {{- range (splitList "," .Values.config.openldap.organizationalUnits) }}
    dn: ou={{ . }},{{ template "openldap.openldap-dc" $ }}
    objectclass: organizationalUnit
    objectclass: top
    ou: {{ . }}
    {{- printf "\n" }}
    {{- end }}
  {{- end  }}
  {{- if .Values.config.openldap.hashPassword }}
  ppolicy.ldif: |
    dn: cn=module{0},cn=config
    changetype: modify
    add: olcModuleLoad
    olcModuleLoad: ppolicy

    dn: olcOverlay={2}ppolicy,olcDatabase={1}mdb,cn=config
    objectClass: olcOverlayConfig
    objectClass: olcPPolicyConfig
    olcOverlay: {2}ppolicy
    olcPPolicyHashCleartext: TRUE
  {{- end }}
