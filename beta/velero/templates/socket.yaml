apiVersion: integration.rock8s.com/v1beta1
kind: Socket
metadata:
  name: {{ template "velero.name" . }}-schedule-replicator
  labels:
    app.kubernetes.io/name: {{ template "velero.name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  epoch: {{ now | unixEpoch | quote }}
  interface:
    config:
      plug:
        name:
          required: true
        apiVersion: {}
        kind: {}
      socket: {}
  resources:
    - when: [coupled, updated]
      do: recreate
      template: |
        apiVersion: batch/v1
        kind: Job
        metadata:
          name: {{ template "velero.name" . }}-schedule-coupled-or-updated-{% .plug.metadata.namespace %}
        spec:
          activeDeadlineSeconds: 360
          backoffLimit: 6
          ttlSecondsAfterFinished: 360
          template:
            metadata:
              annotations:
                sidecar.istio.io/inject: 'false'
            spec:
              automountServiceAccountToken: true
              restartPolicy: Never
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                      - matchExpressions:
                          - key: kubernetes.io/arch
                            operator: In
                            values:
                              - amd64
              containers:
                - name: kubectl
                  image: registry.gitlab.com/bitspur/rock8s/images/kube-commands:0.0.1
                  command:
                    - sh
                    - -c
                    - |
                      cat <<EOF | kubectl delete -f -
                      apiVersion: velero.io/v1
                      kind: Schedule
                      metadata:
                        name: {% .plugConfig.name %}
                        namespace: {{ .Release.Namespace }}
                      EOF
                      cat <<EOF | kubectl get -f - -o yaml | grep -v '^\s*namespace:\s' | kubectl apply -f - --namespace={{ .Release.Namespace }}
                      apiVersion: velero.io/v1
                      kind: Schedule
                      metadata:
                        name: {% .plugConfig.name %}
                        namespace: {% .plug.metadata.namespace %}
                      EOF
                      kubectl get pods -n {{ .Release.Namespace }} \
                        -l job-name={{ template "velero.name" . }}-schedule-coupled-or-updated-{% .plug.metadata.namespace %} \
                        --field-selector status.phase=Failed \
                        -o yaml | kubectl delete -f -
    - when: [decoupled]
      do: recreate
      template: |
        apiVersion: batch/v1
        kind: Job
        metadata:
          name: {{ template "velero.name" . }}-schedule-decoupled-{% .plug.metadata.namespace %}
        spec:
          activeDeadlineSeconds: 360
          backoffLimit: 6
          ttlSecondsAfterFinished: 360
          template:
            metadata:
              annotations:
                sidecar.istio.io/inject: 'false'
            spec:
              automountServiceAccountToken: true
              restartPolicy: Never
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                      - matchExpressions:
                          - key: kubernetes.io/arch
                            operator: In
                            values:
                              - amd64
              containers:
                - name: kubectl
                  image: registry.gitlab.com/bitspur/rock8s/images/kube-commands:0.0.1
                  command:
                    - sh
                    - -c
                    - |
                      cat <<EOF | kubectl delete -f -
                      apiVersion: velero.io/v1
                      kind: Schedule
                      metadata:
                        name: {% .plugConfig.name %}
                        namespace: {{ .Release.Namespace }}
                      EOF
                      kubectl get pods -n {{ .Release.Namespace }} \
                        -l job-name={{ template "velero.name" . }}-schedule-decoupled-{% .plug.metadata.namespace %} \
                        --field-selector status.phase=Failed \
                        -o yaml | kubectl delete -f -
