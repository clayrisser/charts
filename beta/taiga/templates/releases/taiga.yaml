{{- $existingRelease := lookup "helm.toolkit.fluxcd.io/v2beta1" "HelmRelease" .Release.Namespace (printf "%s-release" .Release.Name) }}
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: taiga
  labels:
    app.kubernetes.io/name: {{ template "taiga.name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  interval: 5m
  url: https://risserlabs.gitlab.io/community/taiga-helm
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: {{ .Release.Name }}-release
  labels:
    app.kubernetes.io/name: {{ template "taiga.name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  interval: 5m
  chart:
    spec:
      chart: taiga
      version: {{ .Release.Version | quote }}
      sourceRef:
        apiVersion: source.toolkit.fluxcd.io/v1beta1
        kind: HelmRepository
        name: taiga
  values:
    persistence:
      media:
        enabled: true
        size: {{ .Values.persistence.size.media | quote }}
        {{- if .Values.persistence.storageClass }}
        {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ''
        {{- else }}
        storageClassName: {{ .Values.persistence.storageClass | quote }}
        {{- end }}
        {{- end }}
        accessMode: {{ .Values.persistence.accessMode | quote }}
      static:
        enabled: true
        size: {{ .Values.persistence.size.static | quote }}
        {{- if .Values.persistence.storageClass }}
        {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ''
        {{- else }}
        storageClassName: {{ .Values.persistence.storageClass | quote }}
        {{- end }}
        {{- end }}
        accessMode: {{ .Values.persistence.accessMode | quote }}
    env:
      enableEmail: 'false'
      enableGithubAuth: 'false'
      enableGithubImporter: 'false'
      enableGitlabAuth: 'false'
      enableJiraImporter: 'false'
      enableOpenid: {{ .Values.config.keycloak.enabled | quote }}
      enableSlack: 'false'
      enableTelemetry: 'true'
      enableTrelloImporter: 'false'
      gitlabApiClientSecret: ''
      gitlabClientID: ''
      gitlabURL: 'https://gitlab.com'
      maxAge: '360'
      openidClientId: {{ .Values.config.keycloak.clientId | quote }}
{{- if (and $existingRelease $existingRelease.spec) }}
{{- if $existingRelease.spec.values.env.openidClientSecret }}
      openidClientSecret: {{ $existingRelease.spec.values.env.openidClientSecret | quote }}
{{- else }}
      openidClientSecret: {{ .Values.config.keycloak.clientSecret | default (randAlphaNum 24) | quote }}
{{- end }}
{{- else }}
      openidClientSecret: {{ .Values.config.keycloak.clientSecret | default (randAlphaNum 24) | quote }}
{{- end }}
      openidTokenUrl: '{{ .Values.config.keycloak.baseUrl }}/realms/{{ .Values.config.keycloak.realm }}/protocol/openid-connect/token'
      openidUserUrl: '{{ .Values.config.keycloak.baseUrl }}/realms/{{ .Values.config.keycloak.realm }}/protocol/openid-connect/userinfo'
      openidUrl: '{{ .Values.config.keycloak.baseUrl }}/realms/{{ .Values.config.keycloak.realm }}/protocol/openid-connect/auth'
      postgresDB: {{ .Values.config.postgres.database | quote }}
      postgresHost: {{ .Values.config.postgres.host | quote }}
      postgresPassword: {{ .Values.config.postgres.password | quote }}
      postgresPort: {{ .Values.config.postgres.port | quote }}
      postgresUser: {{ .Values.config.postgres.username | quote }}
      publicRegisterEnabled: {{ .Values.config.taiga.registrationEnabled | quote }}
      rabbitmqErlangCookie: 'secret-erlang-cookie'
      rabbitmqPass: 'taiga'
      rabbitmqUser: 'taiga'
      rabbitmqVhost: 'taiga'
      taigaSecretKey: 'taiga-back-secret-key'
      taigaSitesDomain: {{ template "taiga.taiga-hostname" . }}
      taigaSitesScheme: {{ .Values.ingress.taiga.tls | ternary "https" "http" }}
      taigaURL: {{ template "taiga.taiga-base-url" . }}
      taigaWebsocketsURL: {{ (include "taiga.taiga-base-url" .) | replace "^https" "ws" | replace "^http" "ws" }}

    taigaAsyncRabbitmq:
      image:
        repository: rabbitmq
        pullPolicy: IfNotPresent
        tag: "3-management-alpine"
      persistence:
        enabled: false
      service:
        type: ClusterIP
        port: 5672
      podAnnotations: {}
      podSecurityContext: {}
      securityContext: {}
      resources: {}
      nodeSelector: {}
      tolerations: []
      affinity: {}

    taigaAsync:
      image:
        repository: {{ .Values.images.taigaAsync.repository | quote }}
        pullPolicy: {{ .Values.config.imagePullPolicy | quote }}
        tag: {{ .Values.images.taigaAsync.tag | quote }}
      service:
        type: ClusterIP
        port: 8000
      podAnnotations: {}
      podSecurityContext: {}
      securityContext: {}
      resources: {}
      nodeSelector: {}
      tolerations: []
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/instance
                    operator: In
                    values:
                      - {{ .Release.Name }}-release

    taigaBack:
      image:
        repository: {{ .Values.images.taigaBack.repository | quote }}
        pullPolicy: {{ .Values.config.imagePullPolicy | quote }}
        tag: {{ .Values.images.taigaBack.tag | quote }}
      service:
        type: ClusterIP
        port: 8000
      podAnnotations: {}
      podSecurityContext: {}
      securityContext: {}
      resources: {}
      nodeSelector: {}
      tolerations: []
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/instance
                    operator: In
                    values:
                      - {{ .Release.Name }}-release

    taigaDB:
      enable: false

    taigaEventsRabbitmq:
      image:
        repository: {{ .Values.images.rabbitmq.repository | quote }}
        pullPolicy: {{ .Values.config.imagePullPolicy | quote }}
        tag: {{ .Values.images.rabbitmq.tag | quote }}
      persistence:
        enabled: false
      service:
        type: ClusterIP
        port: 5672
      podAnnotations: {}
      podSecurityContext: {}
      securityContext: {}
      resources: {}
      nodeSelector: {}
      tolerations: []
      affinity: {}

    taigaEvents:
      image:
        repository: {{ .Values.images.taigaEvents.repository | quote }}
        pullPolicy: {{ .Values.config.imagePullPolicy | quote }}
        tag: {{ .Values.images.taigaEvents.tag | quote }}
      service:
        type: ClusterIP
        port: 8888
      podAnnotations: {}
      podSecurityContext: {}
      securityContext: {}
      resources: {}
      nodeSelector: {}
      tolerations: []
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/instance
                    operator: In
                    values:
                      - {{ .Release.Name }}-release

    taigaFront:
      image:
        repository: {{ .Values.images.taigaFront.repository | quote }}
        pullPolicy: {{ .Values.config.imagePullPolicy | quote }}
        tag: {{ .Values.images.taigaFront.tag | quote }}
      service:
        type: ClusterIP
        port: 80
      podAnnotations: {}
      podSecurityContext: {}
      securityContext: {}
      resources: {}
      nodeSelector: {}
      tolerations: []
      affinity: {}

    taigaGateway:
      image:
        repository: {{ .Values.images.nginx.repository | quote }}
        pullPolicy: {{ .Values.config.imagePullPolicy | quote }}
        tag: {{ .Values.images.nginx.tag | quote }}
      persistence:
        enabled: false
      ingress:
        enabled: false
      service:
        type: ClusterIP
        port: 9000
      podAnnotations: {}
      podSecurityContext: {}
      securityContext: {}
      resources: {}
      nodeSelector: {}
      tolerations: []
      affinity: {}

    taigaProtected:
      image:
        repository: {{ .Values.images.taigaProtected.repository | quote }}
        pullPolicy: {{ .Values.config.imagePullPolicy | quote }}
        tag: {{ .Values.images.taigaProtected.tag | quote }}
      service:
        type: ClusterIP
        port: 8003
      podAnnotations: {}
      podSecurityContext: {}
      securityContext: {}
      resources: {}
      nodeSelector: {}
      tolerations: []
      affinity: {}
