{{- if .Values.config.postgres.integration }}
{{- $name := (split "." .Values.config.postgres.integration)._1 | default "postgres" }}
{{- $namespace := (split "." (printf "%s." .Values.config.postgres.integration))._0 }}
apiVersion: integration.risserlabs.com/v1alpha2
kind: Plug
metadata:
  name: postgres
  labels:
    app.kubernetes.io/name: {{ template "taiga.name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  epoch: {{ now | unixEpoch | quote }}
  interfaceVersions: '*'
  interface:
    name: postgres
    namespace: {{ $namespace }}
  socket:
    name: {{ $name }}
    namespace: {{ $namespace }}
  config:
    database: {{ .Values.config.postgres.database | quote }}
    createdb: 'true'
    cleanup: 'false'
    replicate: 'false'
  resources:
    - when: [coupled, updated]
      do: recreate
      resource: |
        apiVersion: patch.risserlabs.com/v1alpha1
        kind: Patch
        metadata:
          name: postgres-coupled-or-updated
          namespace: {{ .Release.Namespace }}
        spec:
          epoch: {{ now | unixEpoch | quote }}
          patches:
            - id: taiga
              target:
                group: helm.toolkit.fluxcd.io
                version: v2beta1
                kind: HelmRelease
                name: {{ .Release.Name }}-release
              waitForTimeout: 5
              waitForResource: true
              type: json
              patch: |
                - op: replace
                  path: /spec/values/env/postgresDB
                  value: '{% .plugConfig.database %}'
                - op: replace
                  path: /spec/values/env/postgresHost
                  value: '{% .socketConfig.hostname %}'
                - op: replace
                  path: /spec/values/env/postgresPassword
                  value: '{% .socketConfig.password %}'
                - op: replace
                  path: /spec/values/env/postgresUser
                  value: '{% .socketConfig.username %}'
    - when: [coupled, updated]
      do: delete
      resource: |
        apiVersion: apps/v1
        kind: StatefulSet
        metadata:
          name: {{ .Release.Name }}-release-db
          namespace: {{ .Release.Namespace }}
{{- end }}
