{{- if (not (empty .Values.config.keycloak.integration)) }}
{{- $existingSecret := lookup "v1" "Secret" .Release.Namespace "keycloak-plug" }}
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-plug
type: Opaque
data:
{{- if (and $existingSecret $existingSecret.data) }}
{{- if $existingSecret.data.clientSecret }}
  clientSecret: {{ $existingSecret.data.clientSecret }}
{{- else }}
  clientSecret: {{ .Values.config.keycloak.clientSecret | default (randAlphaNum 24) | b64enc | quote }}
{{- end }}
{{- else }}
  clientSecret: {{ .Values.config.keycloak.clientSecret | default (randAlphaNum 24) | b64enc | quote }}
{{- end }}
---
{{- $name := (split "." .Values.config.keycloak.integration)._1 | default "keycloak" }}
{{- $namespace := (split "." (printf "%s." .Values.config.keycloak.integration))._0 }}
apiVersion: integration.rock8s.com/v1beta1
kind: Plug
metadata:
  name: keycloak
spec:
  epoch: {{ now | unixEpoch | quote }}
  socket:
    name: keycloak
    namespace: {{ $namespace }}
  config:
    clientId: {{ .Values.config.keycloak.clientId }}
    redirectUris: '*'
    replicate: 'false'
    cleanup: 'false'
  configSecretName: keycloak-plug
  resources:
    - when: [coupled, updated]
      do: recreate
      template:
        apiVersion: kyverno.io/v1
        kind: Policy
        metadata:
          name: keycloak-coupled-or-updated
          namespace: {{ .Release.Namespace }}
        spec:
          validationFailureAction: enforce
          background: true
          rules:
            - name: helm-release
              match:
                resources:
                  kinds:
                    - helm.toolkit.fluxcd.io/*/HelmRelease
                  names:
                    - {{ .Release.Name }}-release
              mutate:
                patchesJson6902: |-
                  - op: replace
                    path: /spec/values/env/openidClientId
                    value: {% .plugConfig.clientId | quote %}
                  - op: replace
                    path: /spec/values/env/openidClientSecret
                    value: {% .plugConfig.clientSecret | quote %}
                  - op: replace
                    path: /spec/values/env/openidTokenUrl
                    value: '{% .socketConfig.keycloakBaseUrl %}/realms/{% .socketConfig.keycloakRealm %}/protocol/openid-connect/token'
                  - op: replace
                    path: /spec/values/env/openidUserUrl
                    value: '{% .socketConfig.keycloakBaseUrl %}/realms/{% .socketConfig.keycloakRealm %}/protocol/openid-connect/userinfo'
                  - op: replace
                    path: /spec/values/env/openidUrl
                    value: '{% .socketConfig.keycloakBaseUrl %}/realms/{% .socketConfig.keycloakRealm %}/protocol/openid-connect/auth'
{{- end }}
