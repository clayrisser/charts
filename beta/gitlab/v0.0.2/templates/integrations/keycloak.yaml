{{- if (and (not (empty .Values.config.keycloak.integration)) .Values.config.keycloak.enabled) }}
apiVersion: keycloak.org/v1alpha1
kind: KeycloakClient
metadata:
  name: {{ template "gitlab.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "gitlab.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  client:
    adminUrl: {{ printf "%s/users/auth/saml/callback" (include "gitlab.gitlab-base-url" .) | quote }}
    alwaysDisplayInConsole: false
    authenticationFlowBindingOverrides: {}
    baseUrl: /
    bearerOnly: false
    clientAuthenticatorType: client-secret
    clientId: {{ template "gitlab.keycloak-client-id" . }}
    consentRequired: false
    description: ''
    directAccessGrantsEnabled: false
    enabled: true
    frontchannelLogout: true
    fullScopeAllowed: true
    fullScopeAllowed: true
    implicitFlowEnabled: false
    name: {{ template "gitlab.keycloak-client-id" . }}
    nodeReRegistrationTimeout: -1
    notBefore: 0
    protocol: saml
    publicClient: false
    rootUrl: {{ template "gitlab.gitlab-base-url" .}}
    serviceAccountsEnabled: false
    standardFlowEnabled: true
    surrogateAuthRequired: false
    webOrigins: []
    redirectUris:
      - {{ printf "%s/users/auth/saml/callback" (include "gitlab.gitlab-base-url" .) | quote }}
    defaultClientScopes:
      - web-origins
      - role_list
      - profile
      - roles
      - email
    optionalClientScopes:
      - address
      - phone
      - offline_access
      - microprofile-jwt
    access:
      view: true
      configure: true
      manage: true
    attributes:
      display.on.consent.screen: 'false'
      exclude.session.state.from.auth.response: 'false'
      saml.assertion.signature: 'true'
      saml.authnstatement: 'true'
      saml.client.signature: 'true'
      saml.encrypt: 'false'
      saml.force.post.binding: 'true'
      saml.multivalued.roles: 'false'
      saml.onetimeuse.condition: 'false'
      saml.server.signature.keyinfo.ext: 'false'
      saml.server.signature: 'true'
      saml.signature.algorithm: RSA_SHA256
      saml_assertion_consumer_url_post: {{ printf "%s/users/auth/saml/callback" (include "gitlab.gitlab-base-url" .) | quote }}
      saml_force_name_id_format: 'false'
      saml_idp_initiated_sso_url_name: {{ template "gitlab.gitlab-hostname" . }}
      saml_name_id_format: persistent
      saml_signature_canonicalization_method: 'http://www.w3.org/2001/10/xml-exc-c14n#'
      tls.client.certificate.bound.access.tokens: 'false'
      # saml.signing.certificate:
      # saml.signing.private.key:
    protocolMappers:
      - protocol: 'saml'
        name: 'email'
        protocolMapper: 'saml-user-property-mapper'
        consentRequired: false
        config:
          attribute.name: 'email'
          friendly.name: 'Email'
          user.attribute: 'Email'
          attribute.nameformat: 'Basic'
      - protocol: 'saml'
        name: 'name'
        protocolMapper: 'saml-user-property-mapper'
        consentRequired: false
        config:
          attribute.name: 'name'
          friendly.name: 'Username'
          user.attribute: 'Username'
          attribute.nameformat: 'Basic'
      - protocol: 'saml'
        name: 'first_name'
        protocolMapper: 'saml-user-property-mapper'
        consentRequired: false
        config:
          attribute.name: 'first_name'
          friendly.name: 'First Name: '
          user.attribute: 'FirstName'
          attribute.nameformat: 'Basic'
      - protocol: 'saml'
        name: 'last_name'
        protocolMapper: 'saml-user-property-mapper'
        consentRequired: false
        config:
          attribute.name: 'last_name'
          friendly.name: 'Last Name: '
          user.attribute: 'LastName'
          attribute.nameformat: 'Basic'
      - protocol: 'saml'
        name: 'roles'
        protocolMapper: 'saml-role-list-mapper'
        consentRequired: false
        config:
          attribute.name: 'roles'
          single: 'true'
          attribute.nameformat: 'Basic'
          friendly.name: 'Roles'
  roles:
    - name: {{ template "gitlab.keycloak-client-id" . }}:external
  realmSelector:
    matchLabels:
      app: {{ (split "." .Values.config.keycloak.integration)._0 }}
---
apiVersion: integration.siliconhills.dev/v1alpha1
kind: IntegrationPlug
metadata:
  name: {{ template "gitlab.fullname" . }}-keycloak
  labels:
    app: {{ template "gitlab.name" . }}-keycloak
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  {{- $name := (split "." .Values.config.keycloak.integration)._0 -}}
  {{- $namespace := (split "." (printf "%s." .Values.config.keycloak.integration))._1 | default "kube-system" }}
  socket:
    name: {{ $name }}
    namespace: {{ $namespace }}
  replications:
    - group: keycloak.org
      version: v1alpha1
      kind: KeycloakClient
      name: {{ template "gitlab.fullname" . }}
  kustomization:
    configuration:
      varReference:
        - group: batch
          version: v1
          kind: Job
          path: spec/template/spec/containers/env/value
    resources:
      - version: v1
        kind: ConfigMap
        name: {{ $name }}-connection-{{ $namespace }}
        namespace: {{ .Release.Namespace }}
      - group: batch
        version: v1
        kind: Job
        name: {{ template "gitlab.fullname" . }}-keycloak-client
        namespace: {{ .Release.Namespace }}
    patches:
      - patch: |
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: {{ template "gitlab.fullname" . }}-keycloak-client
            namespace: {{ .Release.Namespace }}
          spec:
            template:
              spec:
                containers:
                  - name: {{ template "gitlab.fullname" . }}-keycloak-client
                    env:
                      - name: AUTH_URL
                        value: "$(KEYCLOAK_BASE_URL)/auth"
      # - target:
      #     group: batch
      #     version: v1
      #     kind: Job
      #     name: {{ template "gitlab.fullname" . }}-keycloak-client
      #     namespace: {{ .Release.Namespace }}
      #   patch: |
      #     - op: add
      #       path: /spec/template/spec/containers/0/env
      #       value:
      #         - name: AUTH_URL
      #           value: $(KEYCLOAK_BASE_URL)/auth
    vars:
      - name: KEYCLOAK_BASE_URL
        fieldref:
          fieldPath: data.KEYCLOAK_BASE_URL
        objref:
          apiVersion: v1
          kind: ConfigMap
          name: {{ $name }}-connection-{{ $namespace }}
          namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "gitlab.fullname" . }}-keycloak-client
  labels:
    app: {{ template "gitlab.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  # annotations:
  #   helm.sh/hook: post-install
  #   helm.sh/hook-weight: '3'
  #   helm.sh/hook-delete-policy: before-hook-creation
spec:
  template:
    metadata:
      labels:
        app: {{ template "gitlab.name" . }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ template "gitlab.fullname" . }}
      restartPolicy: OnFailure
      containers:
        - name: {{ template "gitlab.fullname" . }}-job
          image: atxwebdesigner/keycloak-gitlab-client:0.0.1
          imagePullPolicy: Always
          env:
            # - name: AUTH_URL
            #   value: {{ .Values.config.keycloak.baseUrl }}/auth
            - name: REALM
              value: main
            - name: ADMIN_CLI_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "gitlab.fullname" . }}-keycloak
                  key: adminClientSecret
            - name: CLIENT_ID
              value: {{ template "gitlab.keycloak-client-id" . }}
        - name: keycloak-gitlab-client-kubectl
          image: bitnami/kubectl:1.17.12
          imagePullPolicy: Always
          command:
            - /bin/sh
            - -c
            - |
              kubectl proxy
{{- end }}
