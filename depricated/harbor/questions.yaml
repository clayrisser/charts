categories:
  - Server
questions:

# Config
  - variable: config.imagePullPolicy
    default: IfNotPresent
    description: ''
    type: enum
    options:
      - IfNotPresent
      - Always
    required: true
    label: 'pull policy'
    group: Config
  - variable: config.updateStrategy
    default: Recreate
    description: ''
    type: enum
    options:
      - Recreate
      - RollingUpdate
    required: true
    label: 'update strategy'
    group: Config
  - variable: config.password
    default: P@ssw0rd
    description: ''
    type: password
    required: true
    label: password
    group: Config
  - variable: config.secret
    default: ''
    description: ''
    type: password
    required: true
    label: secret
    group: Config

# Storage Config
  - variable: config.storage.type
    default: s3
    description: ''
    type: enum
    options:
      - s3
      - filesystem
    required: true
    label: type
    group: 'Storage Config'
  - variable: config.storage.s3.region
    default: sfo2
    description: ''
    type: string
    required: true
    show_if: config.storage.type=s3
    label: 's3 region'
    group: 'Storage Config'
  - variable: config.storage.s3.bucket
    default: ''
    description: ''
    type: string
    required: true
    show_if: config.storage.type=s3
    label: 's3 bucket'
    group: 'Storage Config'
  - variable: config.storage.s3.accessKey
    default: ''
    description: ''
    type: string
    required: true
    show_if: config.storage.type=s3
    label: 's3 access key'
    group: 'Storage Config'
  - variable: config.storage.s3.secretKey
    default: ''
    description: ''
    type: password
    required: true
    show_if: config.storage.type=s3
    label: 's3 secret key'
    group: 'Storage Config'
  - variable: config.storage.s3.regionEndpoint
    default: https://sfo2.digitaloceanspaces.com
    description: ''
    type: string
    required: true
    show_if: config.storage.type=s3
    label: 's3 region endpoint'
    group: 'Storage Config'
  - variable: config.storage.s3.prefix
    default: harbor
    description: ''
    type: string
    required: true
    show_if: config.storage.type=s3
    label: 's3 prefix'
    group: 'Storage Config'

# Postgres Config
  - variable: config.postgres.host
    default: ''
    description: ''
    type: string
    required: true
    label: host
    group: 'Postgres Config'
  - variable: config.postgres.database
    default: gitlab
    description: ''
    type: string
    required: true
    label: database
    group: 'Postgres Config'
  - variable: config.postgres.username
    default: postgres
    description: ''
    type: string
    required: true
    label: username
    group: 'Postgres Config'
  - variable: config.postgres.password
    default: P@ssw0rd
    description: ''
    type: password
    required: true
    label: password
    group: 'Postgres Config'
  - variable: config.postgres.port
    default: 5432
    description: ''
    type: int
    min: 0
    max: 65535
    required: true
    label: port
    group: 'Postgres Config'

# Persistence
  - variable: persistence.enabled
    default: false
    description: ''
    type: boolean
    required: true
    label: enabled
    show_subquestion_if: true
    group: persistence
    subquestions:
      - variable: persistence.storageClass
        default: ''
        description: ''
        type: storageclass
        required: false
        label: 'storage class'
      - variable: persistence.accessMode
        default: ReadWriteOnce
        description: ''
        type: enum
        options:
          - ReadWriteOnce
          - ReadWriteMany
          - ReadOnlyMany
        required: false
        label: 'access mode'
      - variable: persistence.persistentVolumeClaim.existingClaim.registry
        default: ''
        description: ''
        type: string
        required: false
        label: 'registry existing claim'
      - variable: persistence.persistentvolumeclaim.size.registry
        default: 5Gi
        description: ''
        type: string
        required: true
        label: 'registry size'
      - variable: persistence.persistentvolumeclaim.existingClaim.chartmuseum
        default: ''
        description: ''
        type: string
        required: false
        label: 'chartmuseum existing claim'
      - variable: persistence.persistentvolumeclaim.size.chartmuseum
        default: 1Gi
        description: ''
        type: string
        required: true
        label: 'chartmuseum size'
      - variable: persistence.persistentvolumeclaim.existingClaim.jobservice
        default: ''
        description: ''
        type: string
        required: false
        label: 'jobservice existing claim'
      - variable: persistence.persistentvolumeclaim.size.jobservice
        default: 1Gi
        description: ''
        type: string
        required: true
        label: 'jobservice size'
      - variable: persistence.persistentvolumeclaim.existingClaim.redis
        default: ''
        description: ''
        type: string
        required: false
        label: 'redis existing claim'
      - variable: persistence.persistentvolumeclaim.size.redis
        default: 1Gi
        description: ''
        type: string
        required: true
        label: 'redis size'
      # - variable: persistence.persistentvolumeclaim.existingClaim.trivy
      #   default: ''
      #   description: ''
      #   type: string
      #   required: false
      #   label: 'trivy existing claim'
      # - variable: persistence.persistentvolumeclaim.size.trivy
      #   default: 1Gi
      #   description: ''
      #   type: string
      #   required: true
      #   label: 'trivy size'
      - variable: persistence.velero.enabled
        default: false
        description: ''
        type: boolean
        required: true
        label: 'velero enabled'
        group: Persistence
      - variable: persistence.velero.schedule
        default: '@midnight'
        description: ''
        type: string
        show_if: persistence.velero.enabled=true
        required: false
        label: 'velero schedule'
        group: Persistence
      - variable: persistence.velero.restic
        default: true
        description: ''
        type: boolean
        show_if: persistence.velero.enabled=true
        required: true
        label: 'velero restic'
        group: Persistence

# Networking
  - variable: ingress.harbor.enabled
    default: true
    description: ''
    type: boolean
    label: 'harbor ingress enabled'
    show_subquestion_if: true
    group: 'Networking'
    subquestions:
      - variable: ingress.harbor.tls
        default: false
        description: ''
        type: boolean
        required: true
        label: 'harbor ingress tls'
      - variable: ingress.harbor.hostname
        default: xip.io
        description: ''
        type: hostname
        required: true
        label: 'harbor ingress hostname'
      - variable: ingress.harbor.issuer.name
        default: letsencrypt-staging
        description: ''
        type: enum
        show_if: ingress.harbor.tls=true
        options:
          - none
          - letsencrypt-staging
          - letsencrypt-prod
        required: true
        label: 'harbor ingress issuer name'
      - variable: ingress.harbor.certificate
        default: ''
        description: ''
        type: string
        show_if: ingress.harbor.tls=true&&ingress.harbor.issuer.name=none
        required: false
        label: 'harbor ingress certificate'
  - variable: service.harbor.type
    default: NodePort
    description: ''
    type: enum
    show_if: ingress.harbor.enabled=false
    options:
      - ClusterIP
      - NodePort
      - LoadBalancer
    required: true
    label: 'harbor service type'
    group: 'Networking'
  - variable: service.harbor.nodePorts.http
    default:
    description: ''
    type: int
    required: false
    min: 30000
    max: 32767
    show_if: service.harbor.type=NodePort&&ingress.harbor.enabled=false
    label: 'harbor http node port'
    group: 'Networking'
  - variable: service.harbor.lbPorts.http
    default: 80
    description: ''
    type: int
    min: 0
    max: 65535
    required: true
    show_if: service.harbor.type=LoadBalancer&&ingress.harbor.enabled=false
    label: 'harbor http lb port'
    group: 'Networking'
