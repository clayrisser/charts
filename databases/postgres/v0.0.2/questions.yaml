categories:
  - Server
questions:
  # Config
  - variable: config.clusterType
    description: ''
    type: enum
    options:
      - aks
      - eks
      - gke
      - k3s
      - rke
    required: true
    label: 'cluster type'
    group: Config
  - variable: config.imagePullPolicy
    description: ''
    type: enum
    options:
      - IfNotPresent
      - Always
    required: true
    label: 'pull policy'
    group: Config
  - variable: config.updateStrategy
    description: ''
    type: enum
    options:
      - Recreate
      - OnDelete
      - RollingUpdate
    required: true
    label: 'update strategy'
    group: Config
  - variable: config.allowIntegration
    description: ''
    type: boolean
    required: true
    label: 'allow integration'
    group: Config
  - variable: config.metrics
    description: ''
    type: boolean
    required: true
    label: metrics
    group: Config
  - variable: config.username
    description: ''
    type: string
    required: true
    label: username
    group: Config
  - variable: config.password
    description: ''
    type: password
    required: false
    label: password
    group: Config
  - variable: config.shutdown
    description: ''
    type: boolean
    required: true
    label: shutdown
    group: Config
  - variable: config.resources.enabled
    description: ''
    type: enum
    options:
      - defaults
      - custom
      - 'false'
    required: true
    label: 'resources enabled'
    show_subquestion_if: custom
    group: Config
    subquestions:
      - variable: config.resources.requests.cpu
        description: ''
        type: string
        required: true
        label: 'resources requests cpu'
      - variable: config.resources.requests.memory
        description: ''
        type: string
        required: true
        label: 'resources requests memory'
      - variable: config.resources.limits.cpu
        description: ''
        type: string
        required: true
        label: 'resources limits cpu'
      - variable: config.resources.limits.memory
        description: ''
        type: string
        required: true
        label: 'resources limits memory'

  # PGAdmin
  - variable: config.pgadmin.enabled
    description: ''
    type: boolean
    required: true
    label: pgadmin
    show_subquestion_if: true
    group: PGAdmin
    subquestions:
      - variable: config.pgadmin.email
        description: ''
        type: string
        required: true
        label: 'pgadmin email'
      - variable: config.pgadmin.password
        description: ''
        type: password
        required: true
        label: 'pgadmin password'
  - variable: config.pgadmin.resources.enabled
    description: ''
    type: enum
    options:
      - defaults
      - custom
      - 'false'
    required: true
    label: 'pgadmin resources enabled'
    show_subquestion_if: custom
    show_if: config.pgadmin.enabled=true
    group: PGAdmin
    subquestions:
      - variable: config.pgadmin.resources.requests.cpu
        description: ''
        type: string
        required: true
        show_if: config.pgadmin.enabled=true
        label: 'pgadmin resources requests cpu'
      - variable: config.pgadmin.resources.requests.memory
        description: ''
        type: string
        required: true
        show_if: config.pgadmin.enabled=true
        label: 'pgadmin resources requests memory'
      - variable: config.pgadmin.resources.limits.cpu
        description: ''
        type: string
        required: true
        show_if: config.pgadmin.enabled=true
        label: 'pgadmin resources limits cpu'
      - variable: config.pgadmin.resources.limits.memory
        description: ''
        type: string
        required: true
        show_if: config.pgadmin.enabled=true
        label: 'pgadmin resources limits memory'

  # Metrics
  # - variable: config.fullnameOverride
  #   description: ''
  #   type: string
  #   required: false
  #   show_if: config.metrics=true
  #   label: fullname override
  #   group: Metrics
  # - variable: config.rbac.create
  #   description: ''
  #   type: boolean
  #   required: false
  #   label: rbac create
  #   show_if: config.metrics=true
  #   group: Metrics
  # - variable: config.rbac.useClusterAdmin
  #   description: ''
  #   type: boolean
  #   required: false
  #   label: rbac use cluster admin
  #   show_if: config.metrics=true
  #   group: Metrics
  # - variable: config.serviceAccount.create
  #   description: ''
  #   type: boolean
  #   required: false
  #   label: service account create
  #   show_if: config.metrics=true
  #   group: Metrics
  # - variable: config.serviceAccount.name
  #   description: ''
  #   type: string
  #   required: false
  #   label: service account name
  #   show_if: config.metrics=true
  #   group: Metrics
  - variable: config.alertmanagerCustomConfig
    description: ''
    type: string
    required: false
    label: alert manager custom config
    show_if: config.metrics=true
    group: Metrics
  - variable: config.alertmanagerCustomRulesConfig
    description: ''
    type: string
    required: false
    label: alert manager custom rules config
    show_if: config.metrics=true
    group: Metrics
  - variable: config.alertmanagerInstall
    description: ''
    type: boolean
    required: false
    label: alert manager install
    show_if: config.metrics=true
    group: Metrics
  - variable: config.alertmanagerLogLevel
    description: ''
    type: string
    required: false
    label: alert manager log level
    show_if: config.metrics=true
    group: Metrics
  - variable: config.alertmanagerPort
    description: ''
    type: string
    required: false
    label: alert manager port
    show_if: config.metrics=true
    group: Metrics
  - variable: config.alertmanagerServiceName
    description: ''
    type: string
    required: false
    label: alert manager service name
    show_if: config.metrics=true
    group: Metrics
  - variable: config.alertmanagerServiceType
    description: ''
    type: string
    required: false
    label: alert manager service type
    show_if: config.metrics=true
    group: Metrics
  - variable: config.alertmanagerStorageAccessMode
    description: ''
    type: string
    required: false
    label: alert manager storage access mode
    show_if: config.metrics=true
    group: Metrics
  # - variable: config.alertmanagerStorageClassName
  #   description: ''
  #   type: string
  #   required: false
  #   label: alert manager storage class name
  #   show_if: config.metrics=true
  #   group: Metrics
  # - variable: config.alertmanagerSupplementalGroups
  #   description: ''
  #   type: string
  #   required: false
  #   label: alert manager supplemental groups
  #   show_if: config.metrics=true
  #   group: Metrics
  # - variable: config.alertmanagerVolumeSize
  #   description: ''
  #   type: string
  #   required: false
  #   label: alert manager volume size
  #   show_if: config.metrics=true
  #   group: Metrics
  # - variable: config.createRbac
  #   description: ''
  #   type: string
  #   required: false
  #   label: create rbac
  #   show_if: config.metrics=true
  #   group: Metrics
  - variable: config.dbPort
    description: ''
    type: string
    required: false
    label: db port
    show_if: config.metrics=true
    group: Metrics
  # - variable: config.deleteMetricsNamespace
  #   description: ''
  #   type: string
  #   required: false
  #   label: delete metrics namespace
  #   show_if: config.metrics=true
  #   group: Metrics
  # - variable: config.disableFsgroup
  #   description: ''
  #   type: string
  #   required: false
  #   label: disable fs group
  #   show_if: config.metrics=true
  #   group: Metrics
  - variable: config.grafanaAdminPassword
    description: ''
    type: string
    required: false
    label: grafana admin password
    show_if: config.metrics=true
    group: Metrics
  - variable: config.grafanaAdminUsername
    description: ''
    type: string
    required: false
    label: grafana admin username
    show_if: config.metrics=true
    group: Metrics
  # - variable: config.grafanaDashboardsCustomConfig
  #   description: ''
  #   type: string
  #   required: false
  #   label: grafana dashboards custom config
  #   show_if: config.metrics=true
  #   group: Metrics
  # - variable: config.grafanaDatasourcesCustomConfig
  #   description: ''
  #   type: string
  #   required: false
  #   label: grafana datasources custom config
  #   show_if: config.metrics=true
  #   group: Metrics
  - variable: config.grafanaInstall
    description: ''
    type: boolean
    required: false
    label: grafana install
    show_if: config.metrics=true
    group: Metrics
  # - variable: config.grafanaPort
  #   description: ''
  #   type: string
  #   required: false
  #   label: grafana port
  #   show_if: config.metrics=true
  #   group: Metrics
  - variable: config.grafanaServiceName
    description: ''
    type: string
    required: false
    label: grafana service name
    show_if: config.metrics=true
    group: Metrics
  - variable: config.grafanaServiceType
    description: ''
    type: string
    required: false
    label: grafana service type
    show_if: config.metrics=true
    group: Metrics
  - variable: config.metricsImagePullSecret
    description: ''
    type: string
    required: false
    label: metrics image pull secret
    show_if: config.metrics=true
    group: Metrics
  - variable: config.metricsImagePullSecretManifest
    description: ''
    type: string
    required: false
    label: metrics image pull secret manifest
    show_if: config.metrics=true
    group: Metrics    group: Metrics
  - variable: config.metricsNamespace
    description: ''
    type: string
    required: false
    label: metrics namespace
    show_if: config.metrics=true
    group: Metrics
  - variable: config.pgbadgerport
    description: ''
    type: string
    required: false
    label: pgbadgerport
    show_if: config.metrics=true
    group: Metrics
  - variable: config.prometheusCustomConfig
    description: ''
    type: string
    required: false
    label: prometheus custom config
    show_if: config.metrics=true
    group: Metrics
  - variable: config.prometheusInstall
    description: ''
    type: boolean
    required: false
    label: prometheus install
    show_if: config.metrics=true
    group: Metrics
  - variable: config.prometheusPort
    description: ''
    type: string
    required: false
    label: prometheus port
    show_if: config.metrics=true
    group: Metrics
  - variable: config.prometheusServiceName
    description: ''
    type: string
    required: false
    label: prometheus service name
    show_if: config.metrics=true
    group: Metrics
  - variable: config.prometheusServiceType
    description: ''
    type: string
    required: false
    label: prometheus service type
    show_if: config.metrics=true
    group: Metrics


  # Persistence
  - variable: persistence.size.primary
    description: ''
    type: string
    required: true
    label: 'primary size'
    group: Persistence
  - variable: persistence.size.replica
    description: ''
    type: string
    required: true
    label: 'replica size'
    group: Persistence
  - variable: persistence.size.backrest
    description: ''
    type: string
    required: true
    label: 'backrest size'
    group: Persistence
  - variable: persistence.storageClass
    description: ''
    type: storageclass
    required: false
    label: 'storage class'
    group: Persistence
  - variable: persistence.accessMode
    description: ''
    type: enum
    options:
      - ReadWriteOnce
      - ReadWriteMany
      - ReadOnlyMany
    required: false
    label: 'access mode'
    group: Persistence
  - variable: persistence.velero.enabled
    description: ''
    type: boolean
    required: true
    label: 'velero enabled'
    group: Persistence
  - variable: persistence.velero.schedule
    description: ''
    type: string
    show_if: persistence.velero.enabled=true
    required: false
    label: 'velero schedule'
    group: Persistence
  - variable: persistence.velero.restic
    description: ''
    type: boolean
    show_if: persistence.velero.enabled=true
    required: true
    label: 'velero restic'
    group: Persistence
  - variable: persistence.velero.ttl
    description: ''
    type: string
    show_if: persistence.velero.enabled=true
    required: true
    label: 'velero ttl'
    group: Persistence

  # Services and Load Balancing
  - variable: ingress.pgadmin.enabled
    description: ''
    type: boolean
    label: 'pgadmin ingress enabled'
    show_if: config.pgadmin.enabled=true
    show_subquestion_if: true
    group: 'Services and Load Balancing'
    subquestions:
      - variable: ingress.pgadmin.tls
        description: ''
        type: boolean
        show_if: config.pgadmin.enabled=true
        required: true
        label: 'pgadmin ingress tls'
      - variable: ingress.pgadmin.hostname
        default: xip.io
        description: ''
        type: hostname
        show_if: config.pgadmin.enabled=true
        required: true
        label: 'pgadmin ingress hostname'
      - variable: ingress.pgadmin.issuer.name
        description: ''
        type: enum
        show_if: ingress.pgadmin.tls=true&&config.pgadmin.enabled=true
        options:
          - none
          - letsencrypt-cloudflare-staging
          - letsencrypt-cloudflare-prod
          - letsencrypt-staging
          - letsencrypt-prod
        required: true
        label: 'pgadmin ingress issuer name'
      - variable: ingress.pgadmin.certificate
        description: ''
        type: string
        show_if: ingress.pgadmin.tls=true&&ingress.pgadmin.issuer.name=none&&config.pgadmin.enabled=true
        required: false
        label: 'pgadmin ingress certificate'
  - variable: service.pgadmin.type
    description: ''
    type: enum
    show_if: ingress.pgadmin.enabled=false&&config.pgadmin.enabled=true
    options:
      - ClusterIP
      - NodePort
      - LoadBalancer
    required: true
    label: 'pgadmin service type'
    group: 'Services and Load Balancing'
  - variable: service.pgadmin.nodePorts.http
    description: ''
    type: int
    required: false
    min: 30000
    max: 32767
    show_if: service.pgadmin.type=NodePort&&ingress.pgadmin.enabled=false&&config.pgadmin.enabled=true
    label: 'pgadmin http node port'
    group: 'Services and Load Balancing'
  - variable: ingress.metrics.enabled
    description: ''
    type: boolean
    label: 'metrics ingress enabled'
    show_if: config.metrics=true
    show_subquestion_if: true
    group: 'Services and Load Balancing'
    subquestions:
      - variable: ingress.metrics.tls
        description: ''
        type: boolean
        required: true
        show_if: config.metrics=true
        label: 'metrics ingress tls'
      - variable: ingress.metrics.hostname
        default: xip.io
        description: ''
        type: hostname
        required: true
        show_if: config.metrics=true
        label: 'metrics ingress hostname'
      - variable: ingress.metrics.issuer.name
        description: ''
        type: enum
        show_if: ingress.metrics.tls=true&&config.metrics=true
        options:
          - none
          - letsencrypt-cloudflare-staging
          - letsencrypt-cloudflare-prod
          - letsencrypt-staging
          - letsencrypt-prod
        required: true
        label: 'metrics ingress issuer name'
      - variable: ingress.metrics.certificate
        description: ''
        type: string
        show_if: ingress.metrics.tls=true&&ingress.metrics.issuer.name=none&&config.metrics=true
        required: false
        label: 'metrics ingress certificate'
  - variable: service.metrics.type
    description: ''
    type: enum
    show_if: ingress.metrics.enabled=false&&config.metrics=true
    options:
      - ClusterIP
      - LoadBalancer
      - NodePort
    required: true
    label: 'metrics service type'
    group: 'Services and Load Balancing'
  - variable: service.pgadmin.lbPorts.http
    description: ''
    type: int
    required: true
    min: 0
    max: 65535
    show_if: service.pgadmin.type=LoadBalancer&&ingress.pgadmin.enabled=false&&config.pgadmin.enabled=true
    label: 'pgadmin http lb port'
    group: 'Services and Load Balancing'
  - variable: service.postgres.type
    description: ''
    type: enum
    options:
      - ClusterIP
      - NodePort
      - LoadBalancer
    required: true
    label: 'postgres service type'
    group: 'Services and Load Balancing'
  - variable: service.postgres.nodePorts.postgres
    description: ''
    type: int
    required: false
    min: 30000
    max: 32767
    show_if: service.postgres.type=NodePort
    label: 'postgres node port'
    group: 'Services and Load Balancing'
  - variable: service.postgres.lbPorts.postgres
    description: ''
    type: int
    required: true
    min: 0
    max: 65535
    show_if: service.postgres.type=LoadBalancer
    label: 'postgres lb port'
    group: 'Services and Load Balancing'
  - variable: service.metrics.type
    description: ''
    type: enum
    show_if: ingress.metrics.enabled=false&&config.metrics=true
    options:
      - ClusterIP
      - LoadBalancer
      - NodePort
    required: true
    label: 'metrics service type'
    group: 'Services and Load Balancing'
  - variable: service.metrics.nodePorts.http
    description: ''
    type: int
    required: false
    min: 30000
    max: 32767
    show_if: service.metrics.type=NodePort&&ingress.metrics.enabled=false&&config.metrics=true
    label: 'metrics http node port'
    group: 'Services and Load Balancing'
  - variable: service.metrics.lbPorts.http
    description: ''
    type: int
    min: 0
    max: 65535
    required: true
    show_if: service.metrics.type=LoadBalancer&&ingress.metrics.enabled=false&&config.metrics=true
    label: 'metrics http lb port'
    group: 'Services and Load Balancing'

  # Images
  - variable: images.pgadmin.repository
    description: ''
    type: string
    required: true
    label: 'pgadmin repository'
    show_if: config.pgadmin.enabled=true
    group: Images
  - variable: images.pgadmin.tag
    description: ''
    type: string
    required: true
    label: 'pgadmin tag'
    show_if: config.pgadmin.enabled=true
    group: Images
  - variable: images.postgres.registry
    description: ''
    type: string
    required: true
    label: 'postgres registry'
    group: Images
  - variable: images.postgres.repository
    description: ''
    type: string
    required: true
    label: 'postgres repository'
    group: Images
  - variable: images.postgres.tag
    description: ''
    type: string
    required: true
    label: 'postgres tag'
    group: Images
  - variable: images.metrics.repository
    description: ''
    type: string
    required: true
    show_if: config.metrics=true
    label: 'metrics repository'
    group: Images
  - variable: images.metrics.tag
    description: ''
    type: string
    required: true
    show_if: config.metrics=true
    label: 'metrics tag'
    group: Images
