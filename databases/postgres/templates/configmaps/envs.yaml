apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-pod-config
  labels:
    app: {{ template "postgres.name" . }}-postgres
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  {{- if .Values.config.walE.enabled }}
  USE_WALE: {{ .Values.config.walE.enabled | quote }}
  USE_WALG_BACKUP: 'true'
  USE_WALG_RESTORE: 'true'
  WALG_DISABLE_S3_SSE: 'true'
  AWS_S3_FORCE_PATH_STYLE: 'true'
  {{- if .Values.config.walE.schedule }}
  BACKUP_SCHEDULE: {{ .Values.config.walE.schedule | quote}}
  {{- end }}
  {{- if .Values.config.walE.retainBackups }}
  BACKUP_NUM_TO_RETAIN: {{ .Values.config.walE.retainBackups | quote}}
  {{- end }}
  {{- if .Values.config.walE.s3Bucket }}
  WAL_S3_BUCKET: {{ .Values.config.walE.s3Bucket | quote }}
  {{- end }}
  {{- if .Values.config.walE.backupThresholdMegabytes }}
  WALE_BACKUP_THRESHOLD_MEGABYTES: {{ .Values.config.walE.backupThresholdMegabytes | quote }}
  {{- end }}
  {{- if .Values.config.walE.backupThresholdPercentage }}
  WALE_BACKUP_THRESHOLD_PERCENTAGE: {{ .Values.config.walE.backupThresholdPercentage | quote }}
  {{- end }}
  AWS_ENDPOINT: <MinIO endpoint (e.g. http://<MinIO server IP>:9000)>
  AWS_ACCESS_KEY_ID: <MinIO access key>
  AWS_SECRET_ACCESS_KEY: <MinIO secret key>
  AWS_REGION: us-east-1
  {{- end }}

  STANDBY_AWS_ACCESS_KEY_ID: <MinIO access key>
  STANDBY_AWS_SECRET_ACCESS_KEY: <MinIO secret key>
  STANDBY_WALE_ENV_DIR: /home/postgres/etc/wal-e.d/env-standby
  STANDBY_USE_WALG_RESTORE: "true"
  STANDBY_AWS_S3_FORCE_PATH_STYLE: "true"
  STANDBY_AWS_REGION: us-east-1
  STANDBY_AWS_ENDPOINT: <MinIO endpoint (e.g. http://<MinIO Server IP>:9000)>
