apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: {{ template "pxc-db.fullname" . }}-pxc-db
  labels:
    app: {{ template "pxc-db.name" . }}-pxc-db
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  helmVersion: v3
  chart:
    git: https://github.com/percona/percona-helm-charts.git
    ref: pxc-db-0.1.9
    path: charts/pxc-db
  values:
    finalizers:
      - delete-pxc-pods-in-order
      - delete-proxysql-pvc
      - delete-pxc-pvc
    nameOverride: {{ template "pxc-db.name" . }}-pxc-db
    fullnameOverride: {{ template "pxc-db.fullname" . }}-pxc-db
    pause: {{ .Values.config.pxc.pause }}
    allowUnsafeConfigurations: true
    updateStrategy: SmartUpdate
    upgradeOptions:
      versionServiceEndpoint: https://check.percona.com/versions
      apply: recommended
      schedule: {{ .Values.config.pxc.upgrade.schedule }}
    pxc:
      size: {{ .Values.config.pxc.size }}
      image:
        repository: {{ .Values.images.pxc.repository }}
        tag: {{ .Values.images.pxc.tag }}
      imagePullSecrets: []
      {{- if .Values.persistence.velero.enabled }}
      annotations:
        backup.velero.io/backup-volumes: data
      {{- end }}
      labels: {}
      readinessDelaySec: 15
      livenessDelaySec: 300
      forceUnsafeBootstrap: false
      configuration: {{ .Values.config.pxc.mysqlConfig | quote }}
{{- if (not (eq .Values.config.pxc.resources.enabled "false")) }}
      resources:
        requests:
{{ .Values.config.pxc.resources.requests | toYaml | indent 10 }}
        limits:
{{ .Values.config.pxc.resources.limits | toYaml | indent 10 }}
{{- end }}
      nodeSelector: {}
      affinity: {}
      tolerations: []
      gracePeriod: 600
      podDisruptionBudget:
        maxUnavailable: 1
      persistence:
        enabled: {{ .Values.persistence.enabled }}
        storageClass: {{ (empty .Values.persistence.storageClass) | ternary "-" .Values.persistence.storageClass }}
        accessMode: {{ .Values.persistence.accessMode }}
        size: {{ .Values.persistence.size.pxc }}
      disableTLS: false
      certManager: false
      clusterSecretName: {{ template "pxc-db.fullname" . }}-pxc
    haproxy:
      enabled: {{ .Values.config.haproxy.enabled }}
      size: {{ .Values.config.haproxy.size }}
      image:
        repository: {{ .Values.images.haproxy.repository }}
        tag: {{ .Values.images.haproxy.tag }}
      annotations: {}
      labels: {}
      readinessDelaySec: 15
      livenessDelaySec: 300
{{- if (not (eq .Values.config.haproxy.resources.enabled "false")) }}
      resources:
        requests:
{{ .Values.config.haproxy.resources.requests | toYaml | indent 10 }}
        limits:
{{ .Values.config.haproxy.resources.limits | toYaml | indent 10 }}
{{- end }}
      nodeSelector: {}
      affinity: {}
      tolerations: []
      gracePeriod: 600
      podDisruptionBudget:
        maxUnavailable: 1
      persistence:
        enabled: {{ .Values.persistence.enabled }}
        storageClass: {{ (empty .Values.persistence.storageClass) | ternary "-" .Values.persistence.storageClass }}
        accessMode: {{ .Values.persistence.accessMode }}
        size: {{ .Values.persistence.size.haproxy }}
    proxysql:
      enabled: {{ .Values.config.proxysql.enabled }}
      size: {{ .Values.config.proxysql.size }}
      image:
        repository: {{ .Values.images.proxysql.repository }}
        tag: {{ .Values.images.proxysql.tag }}
      annotations: {}
      labels: {}
      readinessDelaySec: 15
      livenessDelaySec: 300
{{- if (not (eq .Values.config.proxysql.resources.enabled "false")) }}
      resources:
        requests:
{{ .Values.config.proxysql.resources.requests | toYaml | indent 10 }}
        limits:
{{ .Values.config.proxysql.resources.limits | toYaml | indent 10 }}
{{- end }}
      nodeSelector: {}
      affinity: {}
      tolerations: []
      gracePeriod: 600
      podDisruptionBudget:
        maxUnavailable: 1
      persistence:
        enabled: {{ .Values.persistence.enabled }}
        storageClass: {{ (empty .Values.persistence.storageClass) | ternary "-" .Values.persistence.storageClass }}
        accessMode: {{ .Values.persistence.accessMode }}
        size: {{ .Values.persistence.size.proxysql }}
    pmm:
      enabled: {{ .Values.config.pmm.enabled }}
      image:
        repository: {{ .Values.images.pmm.repository }}
        tag: {{ .Values.images.pmm.tag }}
      serverHost: {{ template "pxc-db.fullname" . }}-monitoring
      serverUser: pmm
    backup:
      enabled: {{ .Values.config.backup.enabled }}
      image:
        repository: {{ .Values.images.backup.repository }}
        tag: {{ .Values.images.backup.tag }}
      storages:
        s3:
          type: s3
          s3:
            bucket: {{ .Values.config.backup.s3.bucket }}
            credentialsSecret: {{ template "pxc-db.fullname" . }}-backup
            region: {{ .Values.config.backup.s3.region }}
            endpointUrl: {{ .Values.config.backup.s3.endpoint }}
      schedule:
        - name: backup
          schedule: {{ .Values.config.backup.schedule }}
          keep: {{ .Values.config.backup.keep }}
          storageName: s3
    secrets:
      passwords:
        root: {{ .Values.config.passwords.root | quote }}
        xtrabackup: {{ .Values.config.backup.password | quote }}
        monitor: {{ .Values.config.passwords.monitor | quote }}
        clustercheck: {{ .Values.config.passwords.clustercheck | quote }}
        proxyadmin: {{ .Values.config.proxysql.password | quote }}
        pmmserver: {{ .Values.config.pmm.password | quote }}
        operator: {{ .Values.config.passwords.operator | quote }}
      tls: {}
