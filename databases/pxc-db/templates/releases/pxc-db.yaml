apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: {{ template "pxc-db.fullname" . }}-pxc-db
  labels:
    app: {{ template "pxc-db.name" . }}-pxc-db
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  helmVersion: v3
  chart:
    git: https://github.com/percona/percona-helm-charts.git
    ref: pxc-db-0.1.9
    path: charts/pxc-db
  values:
    finalizers:
      - delete-pxc-pods-in-order
      - delete-proxysql-pvc
      - delete-pxc-pvc
    nameOverride: {{ template "pxc-db.name" . }}-pxc-db
    fullnameOverride: {{ template "pxc-db.fullname" . }}-pxc-db
    pause: {{ .Values.config.pxcDb.pause }}
    allowUnsafeConfigurations: true
    updateStrategy: SmartUpdate
    upgradeOptions:
      versionServiceEndpoint: https://check.percona.com/versions
      apply: recommended
      schedule: {{ .Values.config.pxcDb.upgrade.schedule }}
    pxc:
      size: {{ .Values.config.pxcDb.size }}
      image:
        repository: {{ .Values.images.pxcDb.repository }}
        tag: {{ .Values.images.pxcDb.tag }}
      imagePullSecrets: []
      {{- if .Values.persistence.velero.enabled }}
      annotations:
        backup.velero.io/backup-volumes: data
      {{- end }}
      labels: {}
      readinessDelaySec: 15
      livenessDelaySec: 300
      forceUnsafeBootstrap: false
      configuration: {{ .Values.config.pxcDb.mysqlConfig | quote }}
      resources:
        requests:
          cpu: {{ .Values.config.pxcDb.resources.requests.cpu }}
          memory: {{ .Values.config.pxcDb.resources.requests.memory }}
        limits:
          cpu: {{ .Values.config.pxcDb.resources.limits.cpu }}
          memory: {{ .Values.config.pxcDb.resources.limits.memory }}
      nodeSelector: {}
      affinity: {}
      tolerations: []
      gracePeriod: 600
      podDisruptionBudget:
        maxUnavailable: 1
      persistence:
        enabled: {{ .Values.persistence.enabled }}
        storageClass: {{ .Values.persistence.accessMode }}
        accessMode: {{ .Values.persistence.accessMode }}
        size: {{ .Values.persistence.size.pxcDb }}
      disableTLS: false
      certManager: false
      # clusterSecretName:
    haproxy:
      enabled: {{ .Values.config.haproxy.enabled }}
      size: {{ .Values.config.haproxy.size }}
      image:
        repository: {{ .Values.images.haproxy.repository }}
        tag: {{ .Values.images.haproxy.tag }}
      annotations: {}
      labels: {}
      readinessDelaySec: 15
      livenessDelaySec: 300
      resources: {}
      nodeSelector: {}
      affinity: {}
      tolerations: []
      gracePeriod: 600
      podDisruptionBudget:
        maxUnavailable: 1
      persistence:
        enabled: true
        storageClass: "-"
        accessMode: ReadWriteOnce
        size: 8Gi
    proxysql:
      enabled: {{ .Values.config.proxysql.enabled }}
      size: {{ .Values.config.proxysql.size }}
      image:
        repository: {{ .Values.images.proxysql.repository }}
        tag: {{ .Values.images.proxysql.tag }}
      annotations: {}
      labels: {}
      readinessDelaySec: 15
      livenessDelaySec: 300
      resources: {}
      nodeSelector: {}
      affinity: {}
      tolerations: []
      gracePeriod: 600
      podDisruptionBudget:
        maxUnavailable: 1
      persistence:
        enabled: true
        storageClass: "-"
        accessMode: ReadWriteOnce
        size: 8Gi
    pmm:
      enabled: {{ .Values.config.pmm.enabled }}
      image:
        repository: {{ .Values.images.pmm.repository }}
        tag: {{ .Values.images.pmm.tag }}
      serverHost: monitoring-service
      serverUser: pmm
    backup:
      enabled: {{ .Values.config.backup.enabled }}
      image:
        repository: {{ .Values.images.backup.repository }}
        tag: {{ .Values.images.backup.tag }}
      storages:
        s3-us-west:
          type: s3
          s3:
            bucket: S3-BACKUP-BUCKET-NAME-HERE
            credentialsSecret: my-cluster-name-backup-s3
            region: us-west-2
            endpointUrl: https://sfo2.digitaloceanspaces.com
      schedule: []
    secrets:
      passwords:
        root: {{ .Values.config.passwords.root }}
        xtrabackup: {{ .Values.config.passwords.xtrabackup }}
        monitor: {{ .Values.config.passwords.monitor }}
        clustercheck: {{ .Values.config.passwords.clustercheck }}
        proxyadmin: {{ .Values.config.passwords.proxyadmin }}
        pmmserver: {{ .Values.config.passwords.pmmserver }}
        operator: {{ .Values.config.passwords.operator }}
      tls: {}
