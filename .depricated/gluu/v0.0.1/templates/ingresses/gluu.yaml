{{- if .Values.ingress.enabled }}
{{- $host := (index .Values.ingress.hosts.gluu 0) }}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ template "gluu.fullname" $ }}-gluu
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/app-root: /identity
    nginx.ingress.kubernetes.io/proxy-next-upstream: 'error timeout invalid_header http_500 http_502 http_503 http_504'
    nginx.ingress.kubernetes.io/session-cookie-hash: sha1
    nginx.ingress.kubernetes.io/session-cookie-name: route
    nginx.org/ssl-services: {{ template "gluu.fullname" $ }}-oxtrust
  {{- if (and $.Values.ingress.enabled $.Values.ingress.tls) }}
    certmanager.k8s.io/cluster-issuer: {{ $.Values.ingress.issuer.name }}
    kubernetes.io/tls-acme: 'true'
  {{- end }}
  labels:
    app: {{ template "gluu.name" $ }}-gluu
    chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
    release: {{ $.Release.Name }}
    heritage: {{ $.Release.Service }}
spec:
  rules:
    - host: {{ $host.name }}
      http:
        paths:
          - path: {{ (eq $host.path "/") | ternary "" $host.path }}/passport
            backend:
              serviceName: {{ template "gluu.fullname" $ }}-oxpassport
              servicePort: http
          - path: {{ (eq $host.path "/") | ternary "" $host.path }}/idp
            backend:
              serviceName: {{ template "gluu.fullname" $ }}-oxshibboleth
              servicePort: http
          - path: {{ (eq $host.path "/") | ternary "" $host.path }}/identity
            backend:
              serviceName: {{ template "gluu.fullname" $ }}-oxtrust
              servicePort: https
  {{- if (and $.Values.ingress.enabled $.Values.ingress.tls) }}
  tls:
    - secretName: letsencrypt-staging
      hosts:
        - {{ $host.name }}
  {{- end }}

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ template "gluu.fullname" $ }}-oxauth
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-next-upstream: 'error timeout invalid_header http_500 http_502 http_503 http_504'
    nginx.org/ssl-services: {{ template "gluu.fullname" $ }}-oxauth
  {{- if (and $.Values.ingress.enabled $.Values.ingress.tls) }}
    certmanager.k8s.io/cluster-issuer: {{ $.Values.ingress.issuer.name }}
    kubernetes.io/tls-acme: 'true'
  {{- end }}
  labels:
    app: {{ template "gluu.name" $ }}-oxauth
    chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
    release: {{ $.Release.Name }}
    heritage: {{ $.Release.Service }}
spec:
  rules:
    - host: {{ $host.name }}
      http:
        paths:
          - path: {{ (eq $host.path "/") | ternary "" $host.path }}/oxauth
            backend:
              serviceName: {{ template "gluu.fullname" $ }}-oxauth
              servicePort: https
  {{- if (and $.Values.ingress.enabled $.Values.ingress.tls) }}
  tls:
    - secretName: letsencrypt-staging
      hosts:
        - {{ $host.name }}
  {{- end }}

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ template "gluu.fullname" $ }}-fido-u2f-configuration
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/configuration-snippet: 'rewrite /.well-known/fido-u2f-configuration /oxauth/restv1/fido-u2f-configuration$1 break;'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/rewrite-target: /oxauth/restv1/fido-u2f-configuration
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
  {{- if (and $.Values.ingress.enabled $.Values.ingress.tls) }}
    certmanager.k8s.io/cluster-issuer: {{ $.Values.ingress.issuer.name }}
    kubernetes.io/tls-acme: 'true'
  {{- end }}
  labels:
    app: {{ template "gluu.name" $ }}-fido-u2f-configuration
    chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
    release: {{ $.Release.Name }}
    heritage: {{ $.Release.Service }}
spec:
  rules:
    - host: {{ $host.name }}
      http:
        paths:
          - path: {{ (eq $host.path "/") | ternary "" $host.path }}/.well-known/fido-u2f-configuration
            backend:
              serviceName: {{ template "gluu.fullname" $ }}-oxauth
              servicePort: https
  {{- if (and $.Values.ingress.enabled $.Values.ingress.tls) }}
  tls:
    - secretName: letsencrypt-staging
      hosts:
        - {{ $host.name }}
  {{- end }}

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ template "gluu.fullname" $ }}-scim-configuration
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/configuration-snippet: 'rewrite /.well-known/scim-configuration /identity/restv1/scim-configuration$1 break;'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/rewrite-target: /identity/restv1/scim-configuration
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
  {{- if (and $.Values.ingress.enabled $.Values.ingress.tls) }}
    certmanager.k8s.io/cluster-issuer: {{ $.Values.ingress.issuer.name }}
    kubernetes.io/tls-acme: 'true'
  {{- end }}
  labels:
    app: {{ template "gluu.name" $ }}-scim-configuration
    chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
    release: {{ $.Release.Name }}
    heritage: {{ $.Release.Service }}
spec:
  rules:
    - host: {{ $host.name }}
      http:
        paths:
          - path: {{ (eq $host.path "/") | ternary "" $host.path }}/.well-known/scim-configuration
            backend:
              serviceName: {{ template "gluu.fullname" $ }}-oxtrust
              servicePort: https
  {{- if (and $.Values.ingress.enabled $.Values.ingress.tls) }}
  tls:
    - secretName: letsencrypt-staging
      hosts:
        - {{ $host.name }}
  {{- end }}

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ template "gluu.fullname" $ }}-simple-web-discovery
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/configuration-snippet: 'rewrite /.well-known/simple-web-discovery /oxauth/.well-known/simple-web-discovery$1 break;'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/rewrite-target: /oxauth/.well-known/simple-web-discovery
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
  {{- if (and $.Values.ingress.enabled $.Values.ingress.tls) }}
    certmanager.k8s.io/cluster-issuer: {{ $.Values.ingress.issuer.name }}
    kubernetes.io/tls-acme: 'true'
  {{- end }}
  labels:
    app: {{ template "gluu.name" $ }}-simple-web-discovery
    chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
    release: {{ $.Release.Name }}
    heritage: {{ $.Release.Service }}
spec:
  rules:
    - host: {{ $host.name }}
      http:
        paths:
          - path: {{ (eq $host.path "/") | ternary "" $host.path }}/.well-known/simple-web-discovery
            backend:
              serviceName: {{ template "gluu.fullname" $ }}-oxauth
              servicePort: https
  {{- if (and $.Values.ingress.enabled $.Values.ingress.tls) }}
  tls:
    - secretName: letsencrypt-staging
      hosts:
        - {{ $host.name }}
  {{- end }}

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ template "gluu.fullname" $ }}-webfinger
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/configuration-snippet: 'rewrite /.well-known/webfinger /oxauth/.well-known/webfinger$1 break;'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/rewrite-target: /oxauth/.well-known/webfinger
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
  {{- if (and $.Values.ingress.enabled $.Values.ingress.tls) }}
    certmanager.k8s.io/cluster-issuer: {{ $.Values.ingress.issuer.name }}
    kubernetes.io/tls-acme: 'true'
  {{- end }}
  labels:
    app: {{ template "gluu.name" $ }}-webfinger
    chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
    release: {{ $.Release.Name }}
    heritage: {{ $.Release.Service }}
spec:
  rules:
    - host: {{ $host.name }}
      http:
        paths:
          - path: {{ (eq $host.path "/") | ternary "" $host.path }}/.well-known/webfinger
            backend:
              serviceName: {{ template "gluu.fullname" $ }}-oxauth
              servicePort: https
  {{- if (and $.Values.ingress.enabled $.Values.ingress.tls) }}
  tls:
    - secretName: letsencrypt-staging
      hosts:
        - {{ $host.name }}
  {{- end }}

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ template "gluu.fullname" $ }}-uma2-configuration
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/configuration-snippet: 'rewrite /.well-known/uma2-configuration /oxauth/restv1/uma2-configuration$1 break;'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/rewrite-target: /oxauth/restv1/uma2-configuration
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
  {{- if (and $.Values.ingress.enabled $.Values.ingress.tls) }}
    certmanager.k8s.io/cluster-issuer: {{ $.Values.ingress.issuer.name }}
    kubernetes.io/tls-acme: 'true'
  {{- end }}
  labels:
    app: {{ template "gluu.name" $ }}-uma2-configuration
    chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
    release: {{ $.Release.Name }}
    heritage: {{ $.Release.Service }}
spec:
  rules:
    - host: {{ $host.name }}
      http:
        paths:
          - path: {{ (eq $host.path "/") | ternary "" $host.path }}/.well-known/uma2-configuration
            backend:
              serviceName: {{ template "gluu.fullname" $ }}-oxauth
              servicePort: https
  {{- if (and $.Values.ingress.enabled $.Values.ingress.tls) }}
  tls:
    - secretName: letsencrypt-staging
      hosts:
        - {{ $host.name }}
  {{- end }}

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ template "gluu.fullname" $ }}-openid-configuration
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/configuration-snippet: 'rewrite /.well-known/openid-configuration /oxauth/.well-known/openid-configuration$1 break;'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/rewrite-target: /oxauth/.well-known/openid-configuration
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
  {{- if (and $.Values.ingress.enabled $.Values.ingress.tls) }}
    certmanager.k8s.io/cluster-issuer: {{ $.Values.ingress.issuer.name }}
    kubernetes.io/tls-acme: 'true'
  {{- end }}
  labels:
    app: {{ template "gluu.name" $ }}-openid-configuration
    chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
    release: {{ $.Release.Name }}
    heritage: {{ $.Release.Service }}
spec:
  rules:
    - host: {{ $host.name }}
      http:
        paths:
          - path: {{ (eq $host.path "/") | ternary "" $host.path }}/.well-known/openid-configuration
            backend:
              serviceName: {{ template "gluu.fullname" $ }}-oxauth
              servicePort: https
  {{- if (and $.Values.ingress.enabled $.Values.ingress.tls) }}
  tls:
    - secretName: letsencrypt-staging
      hosts:
        - {{ $host.name }}
  {{- end }}

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ template "gluu.fullname" $ }}-base
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/app-root: /identity
    nginx.ingress.kubernetes.io/session-cookie-hash: sha1
    nginx.ingress.kubernetes.io/session-cookie-name: route
  {{- if (and $.Values.ingress.enabled $.Values.ingress.tls) }}
    certmanager.k8s.io/cluster-issuer: {{ $.Values.ingress.issuer.name }}
    kubernetes.io/tls-acme: 'true'
  {{- end }}
  labels:
    app: {{ template "gluu.name" $ }}-base
    chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
    release: {{ $.Release.Name }}
    heritage: {{ $.Release.Service }}
spec:
  rules:
    - host: {{ $host.name }}
      http:
        paths:
          - path: {{ (eq $host.path "/") | ternary "" $host.path }}/
            backend:
              serviceName: {{ template "gluu.fullname" $ }}-oxtrust
              servicePort: https
  {{- if (and $.Values.ingress.enabled $.Values.ingress.tls) }}
  tls:
    - secretName: letsencrypt-staging
      hosts:
        - {{ $host.name }}
  {{- end }}
{{- end }}
