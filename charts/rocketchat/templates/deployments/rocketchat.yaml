apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ template "rocketchat.fullname" . }}-rocketchat
  labels:
    app: {{ template "rocketchat.name" . }}-rocketchat
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  {{- if .Values.persistence.backup.enabled }}
  annotations:
    stash.appscode.com/backup-blueprint: {{ template "rocketchat.fullname" . }}
    stash.appscode.com/target-paths: /_data
    stash.appscode.com/volume-mounts: 'data:/_data'
  {{- end }}
spec:
  strategy:
    type: {{ .Values.config.updateStrategy }}
  template:
    metadata:
      labels:
        app: {{ template "rocketchat.name" . }}-rocketchat
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ template "rocketchat.fullname" . }}-rocketchat
          image: {{ .Values.images.rocketchat.repository }}:{{ .Values.images.rocketchat.tag }}
          imagePullPolicy: {{ .Values.config.imagePullPolicy }}
          resources:
            requests:
              cpu: 300m
              memory: 1Gi
          ports:
            - name: container
              containerPort: 3000
          volumeMounts:
            - name: data
              mountPath: /_data
            - name: data
              mountPath: /app/uploads
              subPath: uploads
          env:
            - name: Jitsi_SSL
              value: {{ .Values.ingress.rocketchat.tls | quote }}
            - name: ROOT_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ template "rocketchat.fullname" . }}
                  key: rocketchat_base_url
            - name: Site_Url
              valueFrom:
                configMapKeyRef:
                  name: {{ template "rocketchat.fullname" . }}
                  key: rocketchat_base_url
            - name: From_Email
              valueFrom:
                configMapKeyRef:
                  name: {{ template "rocketchat.fullname" . }}
                  key: mail_from
            - name: Jitsi_Enabled
              valueFrom:
                configMapKeyRef:
                  name: {{ template "rocketchat.fullname" . }}
                  key: jitsi_enabled
            - name: Jitsi_URL_Room_Prefix
              valueFrom:
                configMapKeyRef:
                  name: {{ template "rocketchat.fullname" . }}
                  key: jitsi_url_room_prefix
            - name: Jitsi_Open_New_Window
              valueFrom:
                configMapKeyRef:
                  name: {{ template "rocketchat.fullname" . }}
                  key: jitsi_open_new_window
            - name: Jitsi_Enable_Channels
              valueFrom:
                configMapKeyRef:
                  name: {{ template "rocketchat.fullname" . }}
                  key: jitsi_enable_channels
            - name: Jitsi_Chrome_Extension
              valueFrom:
                configMapKeyRef:
                  name: {{ template "rocketchat.fullname" . }}
                  key: jitsi_chrome_extension
            - name: SMTP_Host
              valueFrom:
                configMapKeyRef:
                  name: {{ template "rocketchat.fullname" . }}
                  key: mail_smtp_host
            - name: SMTP_Port
              valueFrom:
                configMapKeyRef:
                  name: {{ template "rocketchat.fullname" . }}
                  key: mail_smtp_port
            - name: SMTP_Username
              valueFrom:
                configMapKeyRef:
                  name: {{ template "rocketchat.fullname" . }}
                  key: mail_smtp_username
            - name: SMTP_Password
              valueFrom:
                secretKeyRef:
                  name: {{ template "rocketchat.fullname" . }}
                  key: mail_smtp_password
            - name: WebRTC_Enable_Channel
              valueFrom:
                configMapKeyRef:
                  name: {{ template "rocketchat.fullname" . }}
                  key: webrtc_enable_channel
            - name: WebRTC_Enable_Private
              valueFrom:
                configMapKeyRef:
                  name: {{ template "rocketchat.fullname" . }}
                  key: webrtc_enable_private
            - name: WebRTC_Enable_Direct
              valueFrom:
                configMapKeyRef:
                  name: {{ template "rocketchat.fullname" . }}
                  key: webrtc_enable_direct
            - name: MONGO_URL
              valueFrom:
                secretKeyRef:
                  name: {{ template "rocketchat.fullname" . }}
                  key: mongodb_url
            - name: MONGO_OPLOG_URL
              valueFrom:
                secretKeyRef:
                  name: {{ template "rocketchat.fullname" . }}
                  key: mongodb_oplog_url
            - name: MAIL_URL
              valueFrom:
                secretKeyRef:
                  name: {{ template "rocketchat.fullname" . }}
                  key: mail_smtp_url
          livenessProbe:
            tcpSocket:
              port: container
{{ toYaml .Values.probes.liveness | indent 12 }}
          readinessProbe:
            tcpSocket:
              port: container
{{ toYaml .Values.probes.readiness | indent 12 }}
      volumes:
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "rocketchat.fullname" . ) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
{{- if (and .Values.persistence.backup.enabled (not (empty .Values.persistence.backup.restore.rocketchatSnapshot))) }}
{{- $restore := .Values.persistence.backup.restore }}
---
apiVersion: stash.appscode.com/v1alpha1
kind: Repository
metadata:
  name: {{ template "rocketchat.fullname" . }}-restore-rocketchat
  labels:
    app: {{ template "rocketchat.name" . }}-restore-rocketchat
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  backend:
    {{ .Values.persistence.backup.type }}:
      {{- if (or (eq "gcs" .Values.persistence.backup.type) (eq "s3" .Values.persistence.backup.type)) }}
      bucket: {{ .Values.persistence.backup.bucket | quote }}
      {{- end }}
      {{- if (eq "s3" .Values.persistence.backup.type) }}
      endpoint: {{ .Values.persistence.backup.endpoint | quote }}
      {{- end }}
      {{- if (eq "azure" .Values.persistence.backup.type) }}
      container: {{ .Values.persistence.backup.container | quote }}
      {{- end }}
      prefix: '{{ .Values.persistence.backup.prefix }}/{{ .Release.Namespace }}/deployment'
    storageSecretName: {{ template "rocketchat.fullname" . }}-backup
---
apiVersion: stash.appscode.com/v1beta1
kind: RestoreSession
metadata:
  name: {{ template "rocketchat.fullname" . }}-rocketchat
  labels:
    app: {{ template "rocketchat.name" . }}-rocketchat
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  driver: Restic
  repository:
    name: {{ template "rocketchat.fullname" . }}-restore-rocketchat
  rules:
    - snapshots:
        - {{ $restore.rocketchatSnapshot }}
  target:
    ref:
      apiVersion: apps/v1beta1
      kind: Deployment
      name: {{ template "rocketchat.fullname" . }}-rocketchat
    volumeMounts:
      - name: data
        mountPath: /_data
{{- end }}
