apiVersion: kubedb.com/v1alpha1
kind: MySQL
metadata:
  name: {{ template "mysql.fullname" . }}-mysql
  labels:
    app: {{ template "mysql.name" . }}-mysql
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  version: {{ .Values.config.version | quote }}
  configSource:
    configMap:
      name: {{ template "mysql.fullname" . }}-mysql
  {{- if (not (empty .Values.persistence.backup.restore.snapshot)) }}
  databaseSecret:
    secretName: {{ template "mysql.sharedname" . }}-mysql-auth
  {{- end }}
  {{- if .Values.config.prometheus }}
  monitor:
    agent: prometheus.io/builtin
  {{- end }}
  {{- if (gt (.Values.config.replicas | int64) 1) }}
  replicas: {{ .Values.config.replicas }}
  {{- end }}
  {{- if .Values.persistence.enabled }}
  storageType: Durable
  storage:
    {{- if .Values.persistence.storageClass }}
    {{- if (eq "-" .Values.persistence.storageClass) }}
    storageClassName: ''
    {{- else }}
    storageClassName: {{ .Values.persistence.storageClass }}
    {{- end }}
    {{- end }}
    accessModes:
      - {{ .Values.persistence.accessMode }}
    resources:
      requests:
        storage: {{ .Values.persistence.size }}
  {{- else }}
  storageType: Ephemeral
  {{- end }}
  {{- if (empty .Values.persistence.backup.restore.snapshot) }}
  init:
    scriptSource:
      configMap:
        name: {{ template "mysql.fullname" . }}-mysql-init
  {{- end }}
  serviceTemplate:
    metadata:
      annotations:
        passMe: ToService
    spec:
      type: {{ .Values.service.mysql.type }}
      {{- if (or (eq .Values.service.mysql.type "LoadBalancer") (eq .Values.service.mysql.type "NodePort")) }}
      externalTrafficPolicy: {{ .Values.service.mysql.externalTrafficPolicy }}
      {{- end }}
      ports:
        - name: mysql
          port: 3306
          targetPort: mysql
          {{- if (and (eq .Values.service.mysql.type "NodePort") (not (empty .Values.service.mysql.nodePorts.mysql))) }}
          nodePort: {{ .Values.service.mysql.nodePorts.mysql }}
          {{- end }}
  replicaServiceTemplate:
    annotations:
      passMe: ToReplicaService
    spec:
      type: {{ .Values.service.mysql.type }}
      {{- if (or (eq .Values.service.mysql.type "LoadBalancer") (eq .Values.service.mysql.type "NodePort")) }}
      externalTrafficPolicy: {{ .Values.service.mysql.externalTrafficPolicy }}
      {{- end }}
      ports:
        - name: mysql
          port: 3306
          targetPort: mysql
          {{- if (and (eq .Values.service.mysql.type "NodePort") (not (empty .Values.service.mysql.nodePorts.mysql))) }}
          nodePort: {{ .Values.service.mysql.nodePorts.mysql }}
          {{- end }}
  updateStrategy:
    type: {{ .Values.config.updateStrategy }}
  terminationPolicy: Delete
{{- if .Values.persistence.backup.enabled }}
---
apiVersion: appcatalog.appscode.com/v1alpha1
kind: AppBinding
metadata:
  name: {{ template "mysql.fullname" . }}-mysql
  labels:
    app: {{ template "mysql.name" . }}-mysql
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    stash.appscode.com/backup-blueprint: {{ template "mysql.fullname" . }}-mysql
spec:
  clientConfig:
    service:
      name: {{ template "mysql.fullname" . }}-mysql
      path: /
      port: 3306
      scheme: mysql
    url: tcp({{ template "mysql.fullname" . }}-mysql:3306)/
  type: kubedb.com/mysql
{{- if (not (empty .Values.persistence.backup.restore.snapshot)) }}
{{- $restore := .Values.persistence.backup.restore }}
---
apiVersion: stash.appscode.com/v1beta1
kind: RestoreSession
metadata:
  name: {{ template "mysql.fullname" . }}-mysql
  labels:
    app: {{ template "mysql.name" . }}-mysql
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    kubedb.com/kind: Mysql
spec:
  driver: Restic
  task:
    name: mysql-restore-{{ .Values.config.version }}
  repository:
    name: mysql-{{ template "mysql.fullname" . }}-mysql
  target:
    ref:
      apiVersion: appcatalog.appscode.com/v1alpha1
      kind: AppBinding
      name: {{ template "mysql.fullname" . }}-mysql
  rules:
    - snapshots:
      - {{ $restore.snapshot | quote }}
{{- end }}
{{- end }}
