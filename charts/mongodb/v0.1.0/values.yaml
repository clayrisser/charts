images:
  mongoExpress:
    repository: mongo-express
    tag: 0.49.0

config:
  clusterProvider: infrastructure
  customConfig: ''
  imagePullPolicy: IfNotPresent
  password: p@ssw0rd
  pause: true
  prometheus: false
  terminationPolicy: Delete
  updateStrategy: RollingUpdate
  version: 4.1.13
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 256Mi
  versionMap:
    3.4-v3: 3.4
    3.4.14: 3.4.17
    3.4-v4: 3.4.22
    3.4.22: 3.4.22
    3.6-v3: 3.6
    3.6.8: 3.6.8
    3.6-v4: 3.6.13
    3.6.13: 3.6.13
    4.0-v1: 4.0.5
    4.0.5-v1: 4.0.5
    4.0.3: 4.0.3
    4.0.5-v2: 4.0.5
    4.0-v2: 4.0.11
    4.0.11: 4.0.11
    4.1.7-v1: 4.1.7
    4.1.4: 4.1.4
    4.1.7-v2: 4.1.7-v2
    4.1.13: 4.1.13
    4.1: 4.1.13
  mongoExpress:
    enabled: true
    password: pass
    username: admin
  replicaSet:
    enabled: false
    replicas: 3
  shardTopology:
    enabled: false
    configServer:
      replicas: 3
      resources:
        requests:
          cpu: 100m
          memory: 64Mi
        limits:
          cpu: 500m
          memory: 128Mi
    mongos:
      replicas: 2
      resources:
        requests:
          cpu: 100m
          memory: 64Mi
        limits:
          cpu: 500m
          memory: 128Mi
    shard:
      shards: 3
      replicas: 2
      resources:
        requests:
          cpu: 100m
          memory: 64Mi
        limits:
          cpu: 500m
          memory: 128Mi

service:
  mongoExpress:
    type: NodePort
    externalTrafficPolicy: Cluster
    nodePorts:
      http: ''
  mongodb:
    type: ClusterIP
    externalTrafficPolicy: Cluster
    nodePorts:
      mongodb: ''

ingress:
  mongoExpress:
    certificate: ''
    enabled: false
    hostname: ''
    path: /
    tls: false
    issuer:
      name: letsencrypt-staging

issuer:
  name: letsencrypt-staging
  kind: ClusterIssuer

persistence:
  accessMode: ReadWriteOnce
  enabled: false
  existingClaim: ''
  size: 1Gi
  storageClass: ''
  velero:
    enabled: false
  stash:
    bucket: ''
    container: ''
    enabled: false
    endpoint: s3.amazonaws.com
    keepLast: 30
    paused: false
    prefix: stash
    schedule: '0 0 * * *'
    secret: stash-config-stash-config
    type: s3
    restore:
      snapshot: ''

probes:
  liveness:
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  readiness:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
