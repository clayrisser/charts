apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "bitwardenrs.fullname" . }}-bitwardenrs
  labels:
    app: {{ template "bitwardenrs.name" . }}-bitwardenrs
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "bitwardenrs.name" . }}-bitwardenrs
      release: {{ .Release.Name }}
  strategy:
    type: {{ .Values.config.updateStrategy }}
  template:
    metadata:
      labels:
        app: {{ template "bitwardenrs.name" . }}-bitwardenrs
        release: {{ .Release.Name }}
      {{- if .Values.persistence.velero.enabled }}
      annotations:
        backup.velero.io/backup-volumes: data
      {{- end }}
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              preference:
                matchExpressions:
                  - key: lifecycle
                    operator: In
                    values:
                      - dedicated
      containers:
        - name: {{ template "bitwardenrs.fullname" . }}-bitwardenrs
          image: {{ .Values.images.bitwardenrs.repository }}:{{ .Values.images.bitwardenrs.tag }}
          imagePullPolicy: {{ .Values.config.imagePullPolicy }}
          ports:
            - name: container
              containerPort: 80
          volumeMounts:
            - name: data
              mountPath: /_data
            - name: data
              mountPath: /data
              subPath: data
          env:
            - name: ADMIN_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ template "bitwardenrs.fullname" . }}
                  key: admin_token
            {{- if .Values.config.postgres.internal }}
            - name: POSTGRES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "bitwardenrs.sharedname" . }}-postgres-auth
                  key: POSTGRES_USER
            {{- else }}
            - name: POSTGRES_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: {{ template "bitwardenrs.fullname" . }}
                  key: postgres_username
            {{- end }}
            - name: POSTGRES_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: {{ template "bitwardenrs.fullname" . }}
                  key: postgres_database
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ template "bitwardenrs.fullname" . }}
                  key: postgres_port
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ template "bitwardenrs.fullname" . }}
                  key: postgres_host
            {{- if .Values.config.postgres.internal }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "bitwardenrs.sharedname" . }}-postgres-auth
                  key: POSTGRES_PASSWORD
            {{- else }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "bitwardenrs.fullname" . }}
                  key: postgres_password
            {{- end }}
            - name: POSTGRES_URL
              valueFrom:
                secretKeyRef:
                  name: {{ template "bitwardenrs.fullname" . }}
                  key: postgres_url
          livenessProbe:
            httpGet:
              path: /alive
              port: container
{{ toYaml .Values.probes.liveness | indent 12 }}
          readinessProbe:
            httpGet:
              path: /alive
              port: container
{{ toYaml .Values.probes.readiness | indent 12 }}
      volumes:
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "bitwardenrs.fullname" . ) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
{{- if (and .Values.persistence.stash.enabled (not (empty .Values.persistence.stash.restore.snapshot))) }}
---
apiVersion: stash.appscode.com/v1beta1
kind: RestoreSession
metadata:
  name: {{ template "bitwardenrs.fullname" . }}-bitwardenrs
  labels:
    app: {{ template "bitwardenrs.name" . }}-bitwardenrs
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  driver: Restic
  repository:
    name: {{ template "bitwardenrs.fullname" . }}-data
  rules:
    - snapshots:
        - {{ .Values.persistence.stash.restore.snapshot | quote }}
  target:
    paths:
      /_data
    ref:
      apiVersion: apps/v1
      kind: Deployment
      name: {{ template "bitwardenrs.fullname" . }}-bitwardenrs
    volumeMounts:
      - name: data
        mountPath: /_data
{{- end }}
