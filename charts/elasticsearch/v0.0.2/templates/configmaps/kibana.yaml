{{- if (and (eq .Values.config.authPlugin "SearchGuard") .Values.config.kibana) }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "elasticsearch.fullname" . }}-kibana
  labels:
    app: {{ template "elasticsearch.name" . }}-kibana
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  kibana.yml: |
    elasticsearch.hosts: ["{{ template "elasticsearch.elasticsearch-base-url" . }}"]
    elasticsearch.password: "kibana@secret"
    elasticsearch.requestTimeout: 180000
    elasticsearch.username: "kibanauser"
    searchguard.auth.type: "basicauth"
    searchguard.cookie.secure: false
    server.host: 0.0.0.0
    xpack.security.enabled: false
  kibana.sh: |
    #!/bin/sh
    SCRIPT=$0
    while [ -h "$SCRIPT" ] ; do
      ls=$(ls -ld "$SCRIPT")
      link=$(expr "$ls" : '.*-> \(.*\)$')
      if expr "$link" : '/.*' > /dev/null; then
        SCRIPT="$link"
      else
        SCRIPT=$(dirname "$SCRIPT")/"$link"
      fi
    done
    DIR="$(dirname "${SCRIPT}")/.."
    NODE="${DIR}/node/bin/node"
    test -x "$NODE"
    if [ ! -x "$NODE" ]; then
      echo "unable to find usable node.js executable."
      exit 1
    fi
    NODE_OPTIONS="--no-warnings --max-http-header-size=65536 ${NODE_OPTIONS}" NODE_ENV=production exec "${NODE}" --max-old-space-size=4096 "${DIR}/src/cli" --allow-root ${@}
{{- end }}
