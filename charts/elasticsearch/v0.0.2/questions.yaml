categories:
  - Backup
  - Database
questions:

# Config
  - variable: config.clusterProvider
    default: infrastructure
    description: ''
    type: enum
    options:
      - infrastructure
      - eks
      - aks
      - gke
    required: true
    label: 'cluster provider'
    group: Config
  - variable: config.version
    default: 6.4.0
    description: ''
    type: enum
    options:
      - 5.6-v1
      - 5.6.4-v1
      - 6.2-v1
      - 6.2.4-v1
      - 6.3-v1
      - 6.3.0-v1
      - 6.4
      - 6.4.0
    required: true
    label: version
    group: Config
  - variable: config.updateStrategy
    default: RollingUpdate
    description: ''
    type: enum
    options:
      - RollingUpdate
      - OnDelete
      - Recreate
    required: true
    label: 'update strategy'
    group: Config
  - variable: config.terminationPolicy
    default: Delete
    description: ''
    type: enum
    options:
      - Delete
      - Pause
      - WipeOut
      - DoNotTerminate
    required: true
    label: 'termination policy'
    group: Config
  - variable: config.baseUrl
    default: ''
    description: ''
    type: string
    required: false
    label: 'base url'
    group: Config
  - variable: config.pause
    default: false
    description: ''
    type: boolean
    required: true
    show_if: config.terminationPolicy=Pause
    label: pause
    group: Config
  - variable: config.authPlugin
    default: None
    description: ''
    type: enum
    options:
      - None
      - SearchGuard
    required: true
    label: 'auth plugin'
    group: Config
  - variable: config.password
    default: changeme
    description: ''
    show_if: config.authPlugin=SearchGuard
    type: password
    required: true
    label: password
    group: Config
  - variable: config.kibana
    default: true
    description: 'requires auto plugin SearchGuard'
    type: boolean
    required: true
    label: kibana
    group: Config
  - variable: config.prometheus
    default: false
    description: ''
    type: boolean
    required: true
    label: prometheus
    group: Config
  - variable: config.topology.enabled
    default: false
    description: ''
    type: boolean
    required: true
    label: 'topology enabled'
    group: Config
  - variable: config.topology.client.replicas
    default: 1
    description: ''
    type: int
    required: true
    show_if: config.topology.enabled=true
    label: 'topology client replicas'
    group: Config
  - variable: config.topology.client.requests.cpu
    default: 100m
    description: ''
    type: string
    required: true
    show_if: config.topology.enabled=true
    label: 'topology client resources requests cpu'
    group: Config
  - variable: config.topology.client.requests.memory
    default: 128Mi
    description: ''
    type: string
    required: true
    show_if: config.topology.enabled=true
    label: 'topology client resources requests memory'
    group: Config
  - variable: config.topology.client.limits.cpu
    default: 500m
    description: ''
    type: string
    required: true
    show_if: config.topology.enabled=true
    label: 'topology client resources limits cpu'
    group: Config
  - variable: config.topology.client.limits.memory
    default: 256Mi
    description: ''
    type: string
    required: true
    show_if: config.topology.enabled=true
    label: 'topology client resources limits memory'
    group: Config
  - variable: config.topology.data.replicas
    default: 1
    description: ''
    type: int
    required: true
    show_if: config.topology.enabled=true
    label: 'topology data replicas'
    group: Config
  - variable: config.topology.data.requests.cpu
    default: 100m
    description: ''
    type: string
    required: true
    show_if: config.topology.enabled=true
    label: 'topology data resources requests cpu'
    group: Config
  - variable: config.topology.data.requests.memory
    default: 128Mi
    description: ''
    type: string
    required: true
    show_if: config.topology.enabled=true
    label: 'topology data resources requests cpu'
    group: Config
  - variable: config.topology.data.limits.cpu
    default: 500m
    description: ''
    type: string
    required: true
    show_if: config.topology.enabled=true
    label: 'topology data resources limits cpu'
    group: Config
  - variable: config.topology.data.limits.memory
    default: 256Mi
    description: ''
    type: string
    required: true
    show_if: config.topology.enabled=true
    label: 'topology data resources limits memory'
    group: Config
  - variable: config.topology.master.replicas
    default: 1
    description: ''
    type: int
    required: true
    show_if: config.topology.enabled=true
    label: 'topology master replicas'
    group: Config
  - variable: config.topology.master.requests.cpu
    default: 100m
    description: ''
    type: string
    required: true
    show_if: config.topology.enabled=true
    label: 'topology master resources requests cpu'
    group: Config
  - variable: config.topology.master.requests.memory
    default: 128Mi
    description: ''
    type: string
    required: true
    show_if: config.topology.enabled=true
    label: 'topology master resources requests cpu'
    group: Config
  - variable: config.topology.master.limits.cpu
    default: 500m
    description: ''
    type: string
    required: true
    show_if: config.topology.enabled=true
    label: 'topology master resources limits cpu'
    group: Config
  - variable: config.topology.master.limits.memory
    default: 256Mi
    description: ''
    type: string
    required: true
    show_if: config.topology.enabled=true
    label: 'topology master resources limits memory'
    group: Config
  - variable: config.resources.requests.cpu
    default: 100m
    description: ''
    type: string
    required: true
    show_if: config.topology.enabled=false
    label: 'resources requests cpu'
    group: Config
  - variable: config.resources.requests.memory
    default: 128Mi
    description: ''
    type: string
    required: true
    show_if: config.topology.enabled=false
    label: 'resources requests cpu'
    group: Config
  - variable: config.resources.limits.cpu
    default: 500m
    description: ''
    type: string
    required: true
    show_if: config.topology.enabled=false
    label: 'resources limits cpu'
    group: Config
  - variable: config.resources.limits.memory
    default: 256Mi
    description: ''
    type: string
    required: true
    show_if: config.topology.enabled=false
    label: 'resources limits memory'
    group: Config
  - variable: config.replicas
    default: 1
    description: ''
    type: int
    required: true
    show_if: config.topology.enabled=false
    label: replicas
    group: Config
  - variable: config.commonConfig
    default: ''
    description: ''
    type: string
    required: false
    label: 'common config'
    group: Config
  - variable: config.dataConfig
    default: ''
    description: ''
    type: string
    required: false
    label: 'data config'
    group: Config
  - variable: config.masterConfig
    default: ''
    description: ''
    type: string
    required: false
    label: 'master config'
    group: Config

# Persistence
  - variable: persistence.enabled
    default: false
    description: ''
    type: boolean
    required: true
    label: enabled
    show_subquestion_if: true
    group: Persistence
    subquestions:
      - variable: persistence.size
        default: 1Gi
        description: ''
        type: string
        required: true
        label: size
      - variable: persistence.storageClass
        default: ''
        description: ''
        type: storageclass
        required: false
        label: 'storage class'
      - variable: persistence.accessMode
        default: ReadWriteOnce
        description: ''
        type: enum
        options:
          - ReadWriteOnce
          - ReadWriteMany
          - ReadOnlyMany
        required: false
        label: 'access mode'
      - variable: persistence.existingClaim
        default: ''
        description: ''
        type: string
        required: false
        label: 'existing claim'
      - variable: persistence.velero.enabled
        default: false
        description: ''
        type: boolean
        required: true
        label: 'velero enabled'
      - variable: persistence.stash.enabled
        default: false
        description: ''
        type: boolean
        required: true
        label: 'stash enabled'
      - variable: persistence.stash.paused
        default: false
        description: ''
        type: boolean
        required: true
        show_if: persistence.stash.enabled=true
        label: 'stash paused'
      - variable: persistence.stash.schedule
        default: '0 0 * * *'
        description: ''
        type: string
        required: true
        show_if: persistence.stash.enabled=true
        label: 'stash schedule'
      - variable: persistence.stash.keepLast
        default: 30
        description: ''
        type: int
        required: true
        show_if: persistence.stash.enabled=true
        label: 'stash keep last'
      - variable: persistence.stash.restore.snapshot
        default: ''
        description: ''
        type: string
        required: false
        show_if: persistence.stash.enabled=true
        label: 'stash restore snapshot'

# Services and Load Balancing
  - variable: ingress.kibana.enabled
    default: true
    description: ''
    type: boolean
    show_if: config.kibana=true
    label: 'kibana ingress enabled'
    show_subquestion_if: true
    group: 'Services and Load Balancing'
    subquestions:
      - variable: ingress.kibana.tls
        default: false
        description: ''
        type: boolean
        show_if: config.kibana=true
        required: true
        label: 'kibana ingress tls'
      - variable: ingress.kibana.hostname
        default: xip.io
        description: ''
        type: hostname
        show_if: config.kibana=true
        required: true
        label: 'kibana ingress hostname'
      - variable: ingress.kibana.path
        default: /
        description: ''
        type: string
        show_if: config.kibana=true
        required: true
        label: 'kibana ingress path'
      - variable: ingress.kibana.issuer.name
        default: letsencrypt-staging
        description: ''
        type: enum
        show_if: config.kibana=true&&ingress.kibana.tls=true
        options:
          - none
          - letsencrypt-staging
          - letsencrypt-prod
        required: true
        label: 'kibana ingress issuer name'
      - variable: ingress.kibana.certificate
        default: ''
        description: ''
        type: string
        show_if: config.kibana=true&&ingress.kibana.tls=true&&ingress.kibana.issuer.name=none
        required: false
        label: 'kibana ingress certificate'
  - variable: service.kibana.type
    default: NodePort
    description: ''
    type: enum
    show_if: ingress.kibana.enabled=false&&config.kibana=true
    options:
      - ClusterIP
      - NodePort
      - LoadBalancer
    required: true
    label: 'kibana service type'
    show_subquestion_if: NodePort
    group: 'Services and Load Balancing'
    subquestions:
      - variable: service.kibana.nodePorts.http
        default: ''
        description: ''
        type: int
        min: 30000
        max: 32767
        show_if: ingress.kibana.enabled=false&&config.kibana=true
        label: 'kibana port'
  - variable: ingress.elasticsearch.enabled
    default: true
    description: ''
    type: boolean
    label: 'elasticsearch ingress enabled'
    show_subquestion_if: true
    group: 'Services and Load Balancing'
    subquestions:
      - variable: ingress.elasticsearch.tls
        default: false
        description: ''
        type: boolean
        required: true
        label: 'elasticsearch ingress tls'
      - variable: ingress.elasticsearch.hostname
        default: xip.io
        description: ''
        type: hostname
        required: true
        label: 'elasticsearch ingress hostname'
      - variable: ingress.elasticsearch.path
        default: /
        description: ''
        type: string
        required: true
        label: 'elasticsearch ingress path'
      - variable: ingress.elasticsearch.issuer.name
        default: letsencrypt-staging
        description: ''
        type: enum
        show_if: ingress.elasticsearch.tls=true
        options:
          - none
          - letsencrypt-staging
          - letsencrypt-prod
        required: true
        label: 'elasticsearch ingress issuer name'
      - variable: ingress.elasticsearch.certificate
        default: ''
        description: ''
        type: string
        show_if: ingress.elasticsearch.tls=true&&ingress.elasticsearch.issuer.name=none
        required: false
        label: 'elasticsearch ingress certificate'
  - variable: service.elasticsearch.type
    default: ClusterIP
    description: ''
    type: enum
    options:
      - ClusterIP
      - NodePort
      - LoadBalancer
    required: true
    show_if: ingress.elasticsearch.enabled=false
    label: 'elasticsearch service type'
    show_subquestion_if: NodePort
    group: 'Services and Load Balancing'
    subquestions:
      - variable: service.elasticsearch.nodePorts.elasticsearch
        default: ''
        description: ''
        type: int
        show_if: ingress.elasticsearch.enabled=false
        min: 30000
        max: 32767
        label: 'elasticsearch port'

# Images
  - variable: images.kibana.repository
    default: kubedb/kibana
    description: ''
    type: string
    required: true
    label: repository
    show_if: config.kibana=true
    group: Images
  - variable: images.kibana.tag
    default: 7.3.2
    description: ''
    type: string
    required: true
    label: tag
    show_if: config.kibana=true
    group: Images
