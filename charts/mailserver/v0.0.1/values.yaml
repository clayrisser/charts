images:
  mailserver:
    repository: tvial/docker-mailserver
    tag: release-v6.2.1

config:
  baseUrl: ''
  clusterProvider: infrastructure
  debug: false
  hostname: ''
  imagePullPolicy: IfNotPresent
  postmasterUsername: postmaster
  smtpOnly: false
  spoofProtection: true
  updateStrategy: RollingUpdate
  virusmailsDeleteDelay: 7
  clamav:
    enabled: false
  dovecot:
    mailboxFormat: maildir
    passAttrs: ''
    passFilter: '(&(objectClass=PostfixBookMailAccount)(uniqueIdentifier=%n))'
    userAttrs: ''
    userFilter: '(&(objectClass=PostfixBookMailAccount)(uniqueIdentifier=%n))'
  fail2ban:
    enabled: false
  ldap:
    admin: admin
    domain: example.org
    enabled: false
    hostname: ''
    password: pass
    queryFilterAlias: '(|(&(mailAlias=%s)(objectClass=PostfixBookMailForward))(&(mailAlias=%s)(objectClass=PostfixBookMailAccount)(mailEnabled=TRUE)))'
    queryFilterDomain: '(|(&(mail=*@%s)(objectClass=PostfixBookMailAccount)(mailEnabled=TRUE))(&(mailGroupMember=*@%s)(objectClass=PostfixBookMailAccount)(mailEnabled=TRUE))(&(mailalias=*@%s)(objectClass=PostfixBookMailForward)))'
    queryFilterGroup: '(&(mailGroupMember=%s)(mailEnabled=TRUE))'
    queryFilterUser: '(&(mail=%s)(mailEnabled=TRUE))'
    saslFilter: '(&(uniqueIdentifier=%u)(mailEnabled=TRUE))'
    tls: false
    usersOu: people
  managesieve:
    enabled: false
  pop3:
    enabled: false
  postfix:
    mailboxSizeLimit: 0
    messageSizeLimit: 100000000
  postgrey:
    autoWhitelistClients: 5
    delay: 300
    enabled: false
    maxAge: 35
    text: 'Delayed by postgrey'
  reports:
    logrotateInterval: daily
    logwatchInterval: none
    pflogsummTrigger: none
  spamassassin:
    enabled: false
    moveSpamToJunk: true
    shortcircuitBayesHam: false
    shortcircuitBayesSpam: false
    spamSubject: '***SPAM***'
    spamToInbox: true
  srs:
    enabled: true
    excludeDomains: ''
    secret: P@ssw0rd
    senderClasses: envelope_sender

service:
  mailserver:
    type: NodePort
    externalTrafficPolicy: Cluster
    nodePorts:
      imap: ''
      imapSecure: ''
      managesieve: ''
      smtp: ''
      smtpAuth: ''
      smtpSecure: ''

ingress:
  mailserver:
    certificate: ''
    enabled: false
    hostname: ''
    path: /
    tls: false
    issuer:
      name: letsencrypt-staging

persistence:
  accessMode: ReadWriteOnce
  enabled: false
  existingClaim: ''
  size: 1Gi
  storageClass: ''
  velero:
    enabled: false
  stash:
    enabled: false
    keepLast: 30
    paused: false
    repository: stash-stash
    schedule: '0 0 * * *'
    restore:
      snapshot: ''

probes:
  liveness:
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  readiness:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
