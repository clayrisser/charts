apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "mailserver.fullname" . }}-rainloop
  labels:
    app: {{ template "mailserver.name" . }}-rainloop
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  {{- if .Values.persistence.velero.enabled }}
  annotations:
    backup.velero.io/backup-volumes: data
  {{- end }}
spec:
  selector:
    matchLabels:
      app: {{ template "mailserver.name" . }}-rainloop
      release: {{ .Release.Name }}
  strategy:
    type: {{ .Values.config.updateStrategy }}
  template:
    metadata:
      labels:
        app: {{ template "mailserver.name" . }}-rainloop
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ template "mailserver.fullname" . }}-rainloop
          image: {{ .Values.images.rainloop.repository }}:{{ .Values.images.rainloop.tag }}
          imagePullPolicy: {{ .Values.config.imagePullPolicy }}
          ports:
            - name: container
              containerPort: 8888
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /_data
            - name: data
              mountPath: /rainloop/data
              subPath: rainloop
          env:
            - name: LOG_TO_STDOUT
              value: 'true'
          livenessProbe:
            httpGet:
              path: /
              port: container
{{ toYaml .Values.probes.liveness | indent 12 }}
          readinessProbe:
            httpGet:
              path: /
              port: container
{{ toYaml .Values.probes.readiness | indent 12 }}
      volumes:
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.rainloop.existingClaim | default (printf "%s-rainloop" (include "mailserver.fullname" .)) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
{{- if (and .Values.persistence.stash.enabled (not (empty .Values.persistence.stash.restore.snapshots.rainloop))) }}
---
apiVersion: stash.appscode.com/v1beta1
kind: RestoreSession
metadata:
  name: {{ template "mailserver.fullname" . }}-rainloop
  labels:
    app: {{ template "mailserver.name" . }}-rainloop
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  driver: Restic
  repository:
    name: {{ .Values.persistence.stash.repository | quote }}
  rules:
    - snapshots:
        - {{ .Values.persistence.stash.restore.snapshots.rainloop | quote }}
  target:
    paths:
      /_data
    ref:
      apiVersion: apps/v1
      kind: Deployment
      name: {{ template "mailserver.fullname" . }}-rainloop
    volumeMounts:
      - name: data
        mountPath: /_data
{{- end }}
