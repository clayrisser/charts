apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "keycloak.fullname" . }}-keycloak
  labels:
    app: {{ template "keycloak.name" . }}-keycloak
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "keycloak.name" . }}-keycloak
      release: {{ .Release.Name }}
  strategy:
    type: {{ .Values.config.updateStrategy }}
  template:
    metadata:
      labels:
        app: {{ template "keycloak.name" . }}-keycloak
        release: {{ .Release.Name }}
      {{- if .Values.persistence.velero.restic }}
      annotations:
        backup.velero.io/backup-volumes: data
      {{- end }}
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: {{ .Values.persistence.enabled | ternary "110" "90" }}
              preference:
                matchExpressions:
                  - key: application/state
                    operator: In
                    values:
                      - {{ .Values.persistence.enabled | ternary "stateful" "stateless" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - {{ template "keycloak.name" . }}-keycloak
      {{- if (not (empty .Values.config.keycloak.themeZip)) }}
      initContainers:
        - name: {{ template "keycloak.fullname" . }}-keycloak-init
          image: busybox
          command:
            - sh
            - '-c'
            - |
              cd /themes
              wget -qO- {{ .Values.config.keycloak.themeZip }} | unzip -
          volumeMounts:
            - name: data
              mountPath: /themes
              subPath: themes
      {{- end }}
      containers:
        - name: {{ template "keycloak.fullname" . }}-keycloak
          image: {{ .Values.images.keycloak.repository }}:{{ .Values.images.keycloak.tag }}
          imagePullPolicy: {{ .Values.config.imagePullPolicy }}
          resources:
            requests:
              cpu: 200m
              memory: 512Mi
          command:
            - sh
            - '-c'
            - |
              {{- if (not (empty .Values.config.keycloak.themeZip)) }}
              cp -r /opt/jboss/keycloak/injected-themes/* /opt/jboss/keycloak/themes 2>/dev/null | true
              {{- end }}
              exec /opt/jboss/tools/docker-entrypoint.sh
          ports:
            - name: container
              containerPort: 8080
          {{- if (not (empty .Values.config.keycloak.themeZip)) }}
          volumeMounts:
            - name: data
              mountPath: /opt/jboss/keycloak/injected-themes
              subPath: themes
          {{- end }}
          env:
            - name: DB_VENDOR
              value: POSTGRES
            - name: DB_SCHEMA
              value: public
            - name: PROXY_ADDRESS_FORWARDING
              value: 'true'
            {{- if .Values.config.debug }}
            - name: KEYCLOAK_LOGLEVEL
              value: ALL
            - name: ROOT_LOGLEVEL
              value: ALL
            {{- end }}
            - name: DB_ADDR
              valueFrom:
                configMapKeyRef:
                  name: {{ template "keycloak.fullname" . }}
                  key: postgres_host
            - name: DB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: {{ template "keycloak.fullname" . }}
                  key: postgres_database
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: {{ template "keycloak.fullname" . }}
                  key: postgres_username
            - name: KEYCLOAK_HOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: {{ template "keycloak.fullname" . }}
                  key: keycloak_hostname
            - name: KEYCLOAK_WELCOME_THEME
              valueFrom:
                configMapKeyRef:
                  name: {{ template "keycloak.fullname" . }}
                  key: keycloak_welcome_theme
            - name: KEYCLOAK_WELCOME_THEME
              valueFrom:
                configMapKeyRef:
                  name: {{ template "keycloak.fullname" . }}
                  key: keycloak_default_theme
            - name: KEYCLOAK_USER
              valueFrom:
                configMapKeyRef:
                  name: {{ template "keycloak.fullname" . }}
                  key: keycloak_username
            - name: KEYCLOAK_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "keycloak.fullname" . }}
                  key: keycloak_password
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "keycloak.fullname" . }}
                  key: postgres_password
          livenessProbe:
            httpGet:
              path: /
              port: container
{{ toYaml .Values.probes.liveness | indent 12 }}
          readinessProbe:
            httpGet:
              path: /
              port: container
{{ toYaml .Values.probes.readiness | indent 12 }}
      {{- if (not (empty .Values.config.keycloak.themeZip)) }}
      volumes:
        - name: data
          emptyDir: {}
      {{- end }}
