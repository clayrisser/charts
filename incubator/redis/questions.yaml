categories:
  - Backup
  - Database
questions:

# Config
  - variable: config.version
    default: 5.0.3-v1
    description: ''
    type: string
    required: true
    label: version
    group: Config
  - variable: config.updateStrategy
    default: RollingUpdate
    description: ''
    type: enum
    options:
      - RollingUpdate
      - OnDelete
      - Recreate
    required: true
    label: 'update strategy'
    group: Config
  - variable: config.prometheus
    default: false
    description: ''
    type: boolean
    required: true
    label: prometheus
    group: Config
  - variable: config.replicas
    default: 1
    description: ''
    type: int
    required: true
    label: replicas
    group: Config
  - variable: config.shards
    default: 1
    description: ''
    type: int
    required: true
    label: shards
    group: Config
  - variable: config.customConfig
    default: ''
    description: ''
    type: string
    required: false
    label: 'custom config'
    group: Config

# PHPRedisAdmin
  - variable: config.phpredisadmin.enabled
    default: true
    description: ''
    type: boolean
    required: true
    label: phpredisadmin
    show_subquestion_if: true
    group: PHPRedisAdmin
    subquestions:
      - variable: config.phpredisadmin.username
        default: admin
        description: ''
        type: string
        required: true
        label: 'phpredisadmin username'
        group: PHPRedisAdmin
      - variable: config.phpredisadmin.password
        default: pass
        description: ''
        type: password
        required: true
        label: 'phpredisadmin password'
        group: PHPRedisAdmin

# Persistence
  - variable: persistence.enabled
    default: false
    description: ''
    type: boolean
    required: true
    label: enabled
    show_subquestion_if: true
    group: Persistence
    subquestions:
      - variable: persistence.size
        default: 1Gi
        description: ''
        type: string
        required: true
        label: size
      - variable: persistence.storageClass
        default: ''
        description: ''
        type: storageclass
        required: false
        label: 'storage class'
      - variable: persistence.accessMode
        default: ReadWriteOnce
        description: ''
        type: enum
        options:
          - ReadWriteOnce
          - ReadWriteMany
          - ReadOnlyMany
        required: false
        label: 'access mode'
      - variable: persistence.existingClaim
        default: ''
        description: ''
        type: string
        required: false
        label: 'existing claim'

# Services and Load Balancing
  - variable: ingress.phpredisadmin.enabled
    default: true
    description: ''
    type: boolean
    show_if: config.phpredisadmin.enabled=true
    label: 'phpredisadmin ingress enabled'
    show_subquestion_if: true
    group: 'Services and Load Balancing'
    subquestions:
      - variable: ingress.phpredisadmin.tls
        default: false
        description: ''
        type: boolean
        show_if: config.phpredisadmin.enabled=true
        required: true
        label: 'phpredisadmin ingress tls'
      - variable: ingress.phpredisadmin.hostname
        default: xip.io
        description: ''
        type: hostname
        show_if: config.phpredisadmin.enabled=true
        required: true
        label: 'phpredisadmin ingress hostname'
      - variable: ingress.phpredisadmin.path
        default: /
        description: ''
        type: string
        show_if: config.phpredisadmin.enabled=true
        required: true
        label: 'phpredisadmin ingress path'
      - variable: ingress.phpredisadmin.issuer.name
        default: letsencrypt-staging
        description: ''
        type: enum
        show_if: config.phpredisadmin.enabled=true&&ingress.phpredisadmin.tls=true
        options:
          - none
          - letsencrypt-staging
          - letsencrypt-prod
        required: true
        label: 'phpredisadmin ingress issuer name'
      - variable: ingress.phpredisadmin.certificate
        default: ''
        description: ''
        type: string
        show_if: config.phpredisadmin.enabled=true&&ingress.phpredisadmin.tls=true&&ingress.phpredisadmin.issuer.name=none
        required: false
        label: 'phpredisadmin ingress certificate'
  - variable: service.phpredisadmin.type
    default: NodePort
    description: ''
    type: enum
    show_if: ingress.phpredisadmin.enabled=false&&config.phpredisadmin.enabled=true
    options:
      - ClusterIP
      - NodePort
      - LoadBalancer
    required: true
    label: 'phpredisadmin service type'
    show_subquestion_if: NodePort
    group: 'Services and Load Balancing'
    subquestions:
      - variable: service.phpredisadmin.nodePorts.http
        default: ''
        description: ''
        type: int
        min: 30000
        max: 32767
        show_if: ingress.phpredisadmin.enabled=false&&config.phpredisadmin.enabled=true
        label: 'phpredisadmin port'
  - variable: service.redis.type
    default: ClusterIP
    description: ''
    type: enum
    options:
      - ClusterIP
      - NodePort
      - LoadBalancer
    required: true
    label: 'redis service type'
    show_subquestion_if: NodePort
    group: 'Services and Load Balancing'
    subquestions:
      - variable: service.redis.nodePorts.redis
        default: ''
        description: ''
        type: int
        min: 30000
        max: 32767
        label: 'redis port'

# Images
  - variable: images.phpredisadmin.repository
    default: erikdubbelboer/phpredisadmin
    description: ''
    type: string
    required: true
    label: repository
    show_if: config.phpredisadmin.enabled=true
    group: Images
  - variable: images.phpredisadmin.tag
    default: v1.11.4
    description: ''
    type: string
    required: true
    label: tag
    show_if: config.phpredisadmin.enabled=true
    group: Images
