apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ template "nextcloud.fullname" . }}-nextcloud
  labels:
    app: {{ template "nextcloud.name" . }}-nextcloud
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  {{- if .Values.persistence.backup.enabled }}
  annotations:
    stash.appscode.com/backup-blueprint: {{ template "nextcloud.sharedname" . }}-data
    stash.appscode.com/target-paths: /_data
    stash.appscode.com/volume-mounts: 'data:/_data'
  {{- end }}
spec:
  strategy:
    type: {{ .Values.config.updateStrategy }}
  template:
    metadata:
      labels:
        app: {{ template "nextcloud.name" . }}-nextcloud
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ template "nextcloud.fullname" . }}-nextcloud
          image: {{ .Values.images.nextcloud.repository }}:{{ .Values.images.nextcloud.tag }}
          imagePullPolicy: {{ .Values.config.imagePullPolicy }}
          ports:
            - name: container
              containerPort: 80
          volumeMounts:
            - name: data
              mountPath: /_data
            - name: data
              mountPath: /var/www/html
              subPath: data
          env:
            - name: NEXTCLOUD_TRUSTED_DOMAINS
              value: '{{ (include "nextcloud.nextcloud-hostname" .) }} {{ template "nextcloud.fullname" . }}-nextcloud'
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ template "nextcloud.fullname" . }}
                  key: postgres_host
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: {{ template "nextcloud.fullname" . }}
                  key: postgres_database
            - name: NEXTCLOUD_ADMIN_USER
              valueFrom:
                configMapKeyRef:
                  name: {{ template "nextcloud.fullname" . }}
                  key: nextcloud_username
            - name: NEXTCLOUD_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "nextcloud.fullname" . }}
                  key: nextcloud_password
            {{- if .Values.config.postgres.internal }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ template "nextcloud.sharedname" . }}-postgres-auth
                  key: POSTGRES_USER
            {{- else }}
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: {{ template "nextcloud.fullname" . }}
                  key: postgres_username
            {{- end }}
            {{- if .Values.config.postgres.internal }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "nextcloud.sharedname" . }}-postgres-auth
                  key: POSTGRES_PASSWORD
            {{- else }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "nextcloud.fullname" . }}
                  key: postgres_password
            {{- end }}
            {{- if (not (empty .Values.config.nextcloud.objectstore.bucket)) }}
            - name: OBJECTSTORE_CLASS
              value: S3
            - name: OBJECTSTORE_USE_PATH_STYLE
              value: 'false'
            - name: OBJECTSTORE_USE_SSL
              value: 'true'
            - name: OBJECTSTORE_KEY
              valueFrom:
                configMapKeyRef:
                  name: {{ template "nextcloud.fullname" . }}
                  key: objectstore_key
            - name: OBJECTSTORE_REGION
              valueFrom:
                configMapKeyRef:
                  name: {{ template "nextcloud.fullname" . }}
                  key: objectstore_region
            - name: OBJECTSTORE_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: {{ template "nextcloud.fullname" . }}
                  key: objectstore_bucket
            - name: OBJECTSTORE_HOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: {{ template "nextcloud.fullname" . }}
                  key: objectstore_hostname
            - name: OBJECTSTORE_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "nextcloud.fullname" . }}
                  key: objectstore_secret
            {{- end }}
          livenessProbe:
            tcpSocket:
              port: container
{{ toYaml .Values.probes.liveness | indent 12 }}
          readinessProbe:
            tcpSocket:
              port: container
{{ toYaml .Values.probes.readiness | indent 12 }}
      volumes:
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "nextcloud.fullname" . ) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
{{- if (and .Values.persistence.backup.enabled (not (empty .Values.persistence.backup.restore.nextcloudSnapshot))) }}
{{- $restore := .Values.persistence.backup.restore }}
---
apiVersion: stash.appscode.com/v1beta1
kind: RestoreSession
metadata:
  name: {{ template "nextcloud.fullname" . }}-nextcloud
  labels:
    app: {{ template "nextcloud.name" . }}-nextcloud
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  driver: Restic
  repository:
    name: {{ template "nextcloud.sharedname" . }}-nextcloud
  rules:
    - snapshots:
        - {{ $restore.nextcloudSnapshot }}
  target:
    paths:
      /_data
    ref:
      apiVersion: apps/v1
      kind: Deployment
      name: {{ template "nextcloud.fullname" . }}-nextcloud
    volumeMounts:
      - name: data
        mountPath: /_data
{{- end }}
