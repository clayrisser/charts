categories:
  - Server
questions:

# Persistence
  - variable: harbor.persistence.enabled
    default: false
    description: ''
    type: boolean
    required: true
    label: enabled
    show_subquestion_if: true
    group: harbor.persistence
    subquestions:
      - variable: harbor.persistence.persistentVolumeClaim.registry.storageClass
        default: ''
        description: ''
        type: storageclass
        required: false
        label: 'storage class'
      - variable: harbor.persistence.persistentVolumeClaim.registry.existingClaim
        default: ''
        description: ''
        type: string
        required: false
        label: 'registry existing claim'
      - variable: harbor.persistence.persistentvolumeclaim.registry.size
        default: 1Gi
        description: ''
        type: string
        required: true
        label: 'registry size'
      - variable: harbor.persistence.persistentvolumeclaim.chartmuseum.storageClass
        default: ''
        description: ''
        type: storageclass
        required: false
        label: 'storage class'
      - variable: harbor.persistence.persistentvolumeclaim.chartmuseum.existingClaim
        default: ''
        description: ''
        type: string
        required: false
        label: 'chartmuseum existing claim'
      - variable: harbor.persistence.persistentvolumeclaim.chartmuseum.size
        default: 1Gi
        description: ''
        type: string
        required: true
        label: 'chartmuseum size'
      - variable: harbor.persistence.persistentvolumeclaim.jobservice.storageClass
        default: ''
        description: ''
        type: storageclass
        required: false
        label: 'storage class'
      - variable: harbor.persistence.persistentvolumeclaim.jobservice.existingClaim
        default: ''
        description: ''
        type: string
        required: false
        label: 'jobservice existing claim'
      - variable: harbor.persistence.persistentvolumeclaim.jobservice.size
        default: 1Gi
        description: ''
        type: string
        required: true
        label: 'jobservice size'
      - variable: harbor.persistence.persistentvolumeclaim.redis.storageClass
        default: ''
        description: ''
        type: storageclass
        required: false
        label: 'storage class'
      - variable: harbor.persistence.persistentvolumeclaim.redis.existingClaim
        default: ''
        description: ''
        type: string
        required: false
        label: 'redis existing claim'
      - variable: harbor.persistence.persistentvolumeclaim.redis.size
        default: 1Gi
        description: ''
        type: string
        required: true
        label: 'redis size'
      - variable: harbor.persistence.persistentvolumeclaim.trivy.storageClass
        default: ''
        description: ''
        type: storageclass
        required: false
        label: 'storage class'
      - variable: harbor.persistence.persistentvolumeclaim.trivy.existingClaim
        default: ''
        description: ''
        type: string
        required: false
        label: 'trivy existing claim'
      - variable: harbor.persistence.persistentvolumeclaim.trivy.size
        default: 1Gi
        description: ''
        type: string
        required: true
        label: 'trivy size'

# Services and Load Balancing
  - variable: harbor.expose.type
    default: ingress
    description: ''
    type: enum
    options:
      - ingress
      - clusterIP
      - nodePort
    label: 'harbor expose type'
    show_subquestion_if: ingress
    group: 'Services and Load Balancing'
    subquestions:
      - variable: harbor.expose.ingress.hosts.core
        default: xip.io
        description: ''
        type: hostname
        required: true
        label: 'harbor core ingress hostname'
      - variable: harbor.expose.ingress.hosts.notary
        default: xip.io
        description: ''
        type: hostname
        required: true
        label: 'harbor notary ingress hostname'
  - variable: harbor.expose.tls.enabled
    default: false
    description: ''
    type: boolean
    required: true
    label: 'harbor ingress tls'
    show_subquestion_if: true
    group: 'Services and Load Balancing'
    subquestions:
      - variable: harbor.expose.tls.certSource
        default: auto
        description: ''
        type: enum
        options:
          - auto
          - secret
          - none
        required: true
        label: 'harbor cert source'
      - variable: harbor.expose.tls.secret.secretName
        default: ''
        description: ''
        type: string
        show_if: harbor.expose.tls.certSource=secret
        required: false
        label: 'harbor ingress certificate'
  - variable: harbor.expose.nodePort.ports.http.nodePort
    default: ''
    description: ''
    type: int
    required: false
    min: 30000
    max: 32767
    show_if: harbor.expose.type!=ingress
    label: 'harbor http node port'
    group: 'Services and Load Balancing'
  - variable: harbor.expose.nodePort.ports.notary.nodePort
    default: ''
    description: ''
    type: int
    required: false
    min: 30000
    max: 32767
    show_if: harbor.expose.type!=ingress
    label: 'harbor notary node port'
    group: 'Services and Load Balancing'
